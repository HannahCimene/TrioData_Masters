2023-10-30 12:24:33,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-30 12:24:33,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-30 12:24:33,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-30 12:24:33,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-30 12:27:53,104:INFO:PyCaret ClassificationExperiment
2023-10-30 12:27:53,104:INFO:Logging name: clf-default-name
2023-10-30 12:27:53,104:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:27:53,104:INFO:version 3.1.0
2023-10-30 12:27:53,104:INFO:Initializing setup()
2023-10-30 12:27:53,104:INFO:self.USI: f043
2023-10-30 12:27:53,104:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:27:53,105:INFO:Checking environment
2023-10-30 12:27:53,105:INFO:python_version: 3.10.2
2023-10-30 12:27:53,105:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:27:53,105:INFO:machine: AMD64
2023-10-30 12:27:53,105:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:27:53,110:INFO:Memory: svmem(total=16952647680, available=2670448640, percent=84.2, used=14282199040, free=2670448640)
2023-10-30 12:27:53,110:INFO:Physical Core: 4
2023-10-30 12:27:53,110:INFO:Logical Core: 8
2023-10-30 12:27:53,110:INFO:Checking libraries
2023-10-30 12:27:53,110:INFO:System:
2023-10-30 12:27:53,110:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:27:53,110:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:27:53,110:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:27:53,110:INFO:PyCaret required dependencies:
2023-10-30 12:27:53,198:INFO:                 pip: 23.0.1
2023-10-30 12:27:53,198:INFO:          setuptools: 65.5.0
2023-10-30 12:27:53,198:INFO:             pycaret: 3.1.0
2023-10-30 12:27:53,198:INFO:             IPython: 8.15.0
2023-10-30 12:27:53,198:INFO:          ipywidgets: 8.1.1
2023-10-30 12:27:53,198:INFO:                tqdm: 4.66.1
2023-10-30 12:27:53,198:INFO:               numpy: 1.23.5
2023-10-30 12:27:53,198:INFO:              pandas: 1.5.3
2023-10-30 12:27:53,198:INFO:              jinja2: 3.1.2
2023-10-30 12:27:53,198:INFO:               scipy: 1.10.1
2023-10-30 12:27:53,198:INFO:              joblib: 1.3.2
2023-10-30 12:27:53,198:INFO:             sklearn: 1.2.2
2023-10-30 12:27:53,198:INFO:                pyod: 1.1.0
2023-10-30 12:27:53,198:INFO:            imblearn: 0.11.0
2023-10-30 12:27:53,198:INFO:   category_encoders: 2.6.2
2023-10-30 12:27:53,198:INFO:            lightgbm: 4.1.0
2023-10-30 12:27:53,198:INFO:               numba: 0.58.0
2023-10-30 12:27:53,198:INFO:            requests: 2.31.0
2023-10-30 12:27:53,198:INFO:          matplotlib: 3.8.0
2023-10-30 12:27:53,198:INFO:          scikitplot: 0.3.7
2023-10-30 12:27:53,199:INFO:         yellowbrick: 1.5
2023-10-30 12:27:53,199:INFO:              plotly: 5.17.0
2023-10-30 12:27:53,199:INFO:    plotly-resampler: Not installed
2023-10-30 12:27:53,199:INFO:             kaleido: 0.2.1
2023-10-30 12:27:53,199:INFO:           schemdraw: 0.15
2023-10-30 12:27:53,200:INFO:         statsmodels: 0.14.0
2023-10-30 12:27:53,200:INFO:              sktime: 0.21.1
2023-10-30 12:27:53,200:INFO:               tbats: 1.1.3
2023-10-30 12:27:53,200:INFO:            pmdarima: 2.0.3
2023-10-30 12:27:53,200:INFO:              psutil: 5.9.5
2023-10-30 12:27:53,200:INFO:          markupsafe: 2.1.3
2023-10-30 12:27:53,200:INFO:             pickle5: Not installed
2023-10-30 12:27:53,200:INFO:         cloudpickle: 2.2.1
2023-10-30 12:27:53,200:INFO:         deprecation: 2.1.0
2023-10-30 12:27:53,200:INFO:              xxhash: 3.3.0
2023-10-30 12:27:53,200:INFO:           wurlitzer: Not installed
2023-10-30 12:27:53,200:INFO:PyCaret optional dependencies:
2023-10-30 12:27:53,305:INFO:                shap: Not installed
2023-10-30 12:27:53,305:INFO:           interpret: Not installed
2023-10-30 12:27:53,305:INFO:                umap: Not installed
2023-10-30 12:27:53,305:INFO:     ydata_profiling: Not installed
2023-10-30 12:27:53,305:INFO:  explainerdashboard: Not installed
2023-10-30 12:27:53,305:INFO:             autoviz: Not installed
2023-10-30 12:27:53,305:INFO:           fairlearn: Not installed
2023-10-30 12:27:53,305:INFO:          deepchecks: Not installed
2023-10-30 12:27:53,305:INFO:             xgboost: 2.0.0
2023-10-30 12:27:53,305:INFO:            catboost: Not installed
2023-10-30 12:27:53,305:INFO:              kmodes: Not installed
2023-10-30 12:27:53,305:INFO:             mlxtend: Not installed
2023-10-30 12:27:53,305:INFO:       statsforecast: Not installed
2023-10-30 12:27:53,305:INFO:        tune_sklearn: Not installed
2023-10-30 12:27:53,305:INFO:                 ray: Not installed
2023-10-30 12:27:53,305:INFO:            hyperopt: Not installed
2023-10-30 12:27:53,305:INFO:              optuna: Not installed
2023-10-30 12:27:53,305:INFO:               skopt: Not installed
2023-10-30 12:27:53,305:INFO:              mlflow: Not installed
2023-10-30 12:27:53,305:INFO:              gradio: Not installed
2023-10-30 12:27:53,305:INFO:             fastapi: Not installed
2023-10-30 12:27:53,305:INFO:             uvicorn: Not installed
2023-10-30 12:27:53,305:INFO:              m2cgen: Not installed
2023-10-30 12:27:53,305:INFO:           evidently: Not installed
2023-10-30 12:27:53,305:INFO:               fugue: Not installed
2023-10-30 12:27:53,305:INFO:           streamlit: Not installed
2023-10-30 12:27:53,305:INFO:             prophet: Not installed
2023-10-30 12:27:53,305:INFO:None
2023-10-30 12:27:53,305:INFO:Set up data.
2023-10-30 12:27:53,313:INFO:Set up folding strategy.
2023-10-30 12:27:53,313:INFO:Set up train/test split.
2023-10-30 12:29:09,833:INFO:PyCaret ClassificationExperiment
2023-10-30 12:29:09,833:INFO:Logging name: clf-default-name
2023-10-30 12:29:09,833:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:29:09,833:INFO:version 3.1.0
2023-10-30 12:29:09,833:INFO:Initializing setup()
2023-10-30 12:29:09,833:INFO:self.USI: bcaa
2023-10-30 12:29:09,833:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:29:09,833:INFO:Checking environment
2023-10-30 12:29:09,833:INFO:python_version: 3.10.2
2023-10-30 12:29:09,833:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:29:09,833:INFO:machine: AMD64
2023-10-30 12:29:09,833:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:29:09,839:INFO:Memory: svmem(total=16952647680, available=2577321984, percent=84.8, used=14375325696, free=2577321984)
2023-10-30 12:29:09,839:INFO:Physical Core: 4
2023-10-30 12:29:09,839:INFO:Logical Core: 8
2023-10-30 12:29:09,839:INFO:Checking libraries
2023-10-30 12:29:09,839:INFO:System:
2023-10-30 12:29:09,839:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:29:09,839:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:29:09,839:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:29:09,839:INFO:PyCaret required dependencies:
2023-10-30 12:29:09,839:INFO:                 pip: 23.0.1
2023-10-30 12:29:09,839:INFO:          setuptools: 65.5.0
2023-10-30 12:29:09,839:INFO:             pycaret: 3.1.0
2023-10-30 12:29:09,839:INFO:             IPython: 8.15.0
2023-10-30 12:29:09,839:INFO:          ipywidgets: 8.1.1
2023-10-30 12:29:09,839:INFO:                tqdm: 4.66.1
2023-10-30 12:29:09,840:INFO:               numpy: 1.23.5
2023-10-30 12:29:09,840:INFO:              pandas: 1.5.3
2023-10-30 12:29:09,840:INFO:              jinja2: 3.1.2
2023-10-30 12:29:09,840:INFO:               scipy: 1.10.1
2023-10-30 12:29:09,840:INFO:              joblib: 1.3.2
2023-10-30 12:29:09,840:INFO:             sklearn: 1.2.2
2023-10-30 12:29:09,840:INFO:                pyod: 1.1.0
2023-10-30 12:29:09,840:INFO:            imblearn: 0.11.0
2023-10-30 12:29:09,840:INFO:   category_encoders: 2.6.2
2023-10-30 12:29:09,840:INFO:            lightgbm: 4.1.0
2023-10-30 12:29:09,840:INFO:               numba: 0.58.0
2023-10-30 12:29:09,840:INFO:            requests: 2.31.0
2023-10-30 12:29:09,840:INFO:          matplotlib: 3.8.0
2023-10-30 12:29:09,840:INFO:          scikitplot: 0.3.7
2023-10-30 12:29:09,840:INFO:         yellowbrick: 1.5
2023-10-30 12:29:09,840:INFO:              plotly: 5.17.0
2023-10-30 12:29:09,840:INFO:    plotly-resampler: Not installed
2023-10-30 12:29:09,840:INFO:             kaleido: 0.2.1
2023-10-30 12:29:09,840:INFO:           schemdraw: 0.15
2023-10-30 12:29:09,840:INFO:         statsmodels: 0.14.0
2023-10-30 12:29:09,840:INFO:              sktime: 0.21.1
2023-10-30 12:29:09,840:INFO:               tbats: 1.1.3
2023-10-30 12:29:09,840:INFO:            pmdarima: 2.0.3
2023-10-30 12:29:09,840:INFO:              psutil: 5.9.5
2023-10-30 12:29:09,840:INFO:          markupsafe: 2.1.3
2023-10-30 12:29:09,840:INFO:             pickle5: Not installed
2023-10-30 12:29:09,840:INFO:         cloudpickle: 2.2.1
2023-10-30 12:29:09,840:INFO:         deprecation: 2.1.0
2023-10-30 12:29:09,840:INFO:              xxhash: 3.3.0
2023-10-30 12:29:09,840:INFO:           wurlitzer: Not installed
2023-10-30 12:29:09,841:INFO:PyCaret optional dependencies:
2023-10-30 12:29:09,841:INFO:                shap: Not installed
2023-10-30 12:29:09,841:INFO:           interpret: Not installed
2023-10-30 12:29:09,841:INFO:                umap: Not installed
2023-10-30 12:29:09,841:INFO:     ydata_profiling: Not installed
2023-10-30 12:29:09,841:INFO:  explainerdashboard: Not installed
2023-10-30 12:29:09,841:INFO:             autoviz: Not installed
2023-10-30 12:29:09,841:INFO:           fairlearn: Not installed
2023-10-30 12:29:09,841:INFO:          deepchecks: Not installed
2023-10-30 12:29:09,841:INFO:             xgboost: 2.0.0
2023-10-30 12:29:09,841:INFO:            catboost: Not installed
2023-10-30 12:29:09,841:INFO:              kmodes: Not installed
2023-10-30 12:29:09,841:INFO:             mlxtend: Not installed
2023-10-30 12:29:09,841:INFO:       statsforecast: Not installed
2023-10-30 12:29:09,841:INFO:        tune_sklearn: Not installed
2023-10-30 12:29:09,841:INFO:                 ray: Not installed
2023-10-30 12:29:09,841:INFO:            hyperopt: Not installed
2023-10-30 12:29:09,841:INFO:              optuna: Not installed
2023-10-30 12:29:09,841:INFO:               skopt: Not installed
2023-10-30 12:29:09,841:INFO:              mlflow: Not installed
2023-10-30 12:29:09,841:INFO:              gradio: Not installed
2023-10-30 12:29:09,841:INFO:             fastapi: Not installed
2023-10-30 12:29:09,841:INFO:             uvicorn: Not installed
2023-10-30 12:29:09,841:INFO:              m2cgen: Not installed
2023-10-30 12:29:09,841:INFO:           evidently: Not installed
2023-10-30 12:29:09,841:INFO:               fugue: Not installed
2023-10-30 12:29:09,841:INFO:           streamlit: Not installed
2023-10-30 12:29:09,841:INFO:             prophet: Not installed
2023-10-30 12:29:09,841:INFO:None
2023-10-30 12:29:09,842:INFO:Set up data.
2023-10-30 12:29:09,854:INFO:Set up folding strategy.
2023-10-30 12:29:09,855:INFO:Set up train/test split.
2023-10-30 12:29:30,414:INFO:PyCaret ClassificationExperiment
2023-10-30 12:29:30,414:INFO:Logging name: clf-default-name
2023-10-30 12:29:30,414:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:29:30,414:INFO:version 3.1.0
2023-10-30 12:29:30,414:INFO:Initializing setup()
2023-10-30 12:29:30,414:INFO:self.USI: 7126
2023-10-30 12:29:30,414:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:29:30,414:INFO:Checking environment
2023-10-30 12:29:30,414:INFO:python_version: 3.10.2
2023-10-30 12:29:30,414:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:29:30,414:INFO:machine: AMD64
2023-10-30 12:29:30,414:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:29:30,420:INFO:Memory: svmem(total=16952647680, available=2495528960, percent=85.3, used=14457118720, free=2495528960)
2023-10-30 12:29:30,420:INFO:Physical Core: 4
2023-10-30 12:29:30,420:INFO:Logical Core: 8
2023-10-30 12:29:30,420:INFO:Checking libraries
2023-10-30 12:29:30,420:INFO:System:
2023-10-30 12:29:30,420:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:29:30,420:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:29:30,420:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:29:30,420:INFO:PyCaret required dependencies:
2023-10-30 12:29:30,420:INFO:                 pip: 23.0.1
2023-10-30 12:29:30,420:INFO:          setuptools: 65.5.0
2023-10-30 12:29:30,420:INFO:             pycaret: 3.1.0
2023-10-30 12:29:30,420:INFO:             IPython: 8.15.0
2023-10-30 12:29:30,421:INFO:          ipywidgets: 8.1.1
2023-10-30 12:29:30,421:INFO:                tqdm: 4.66.1
2023-10-30 12:29:30,421:INFO:               numpy: 1.23.5
2023-10-30 12:29:30,421:INFO:              pandas: 1.5.3
2023-10-30 12:29:30,421:INFO:              jinja2: 3.1.2
2023-10-30 12:29:30,421:INFO:               scipy: 1.10.1
2023-10-30 12:29:30,421:INFO:              joblib: 1.3.2
2023-10-30 12:29:30,421:INFO:             sklearn: 1.2.2
2023-10-30 12:29:30,421:INFO:                pyod: 1.1.0
2023-10-30 12:29:30,421:INFO:            imblearn: 0.11.0
2023-10-30 12:29:30,421:INFO:   category_encoders: 2.6.2
2023-10-30 12:29:30,421:INFO:            lightgbm: 4.1.0
2023-10-30 12:29:30,421:INFO:               numba: 0.58.0
2023-10-30 12:29:30,421:INFO:            requests: 2.31.0
2023-10-30 12:29:30,421:INFO:          matplotlib: 3.8.0
2023-10-30 12:29:30,421:INFO:          scikitplot: 0.3.7
2023-10-30 12:29:30,421:INFO:         yellowbrick: 1.5
2023-10-30 12:29:30,421:INFO:              plotly: 5.17.0
2023-10-30 12:29:30,421:INFO:    plotly-resampler: Not installed
2023-10-30 12:29:30,421:INFO:             kaleido: 0.2.1
2023-10-30 12:29:30,421:INFO:           schemdraw: 0.15
2023-10-30 12:29:30,421:INFO:         statsmodels: 0.14.0
2023-10-30 12:29:30,421:INFO:              sktime: 0.21.1
2023-10-30 12:29:30,421:INFO:               tbats: 1.1.3
2023-10-30 12:29:30,421:INFO:            pmdarima: 2.0.3
2023-10-30 12:29:30,421:INFO:              psutil: 5.9.5
2023-10-30 12:29:30,421:INFO:          markupsafe: 2.1.3
2023-10-30 12:29:30,421:INFO:             pickle5: Not installed
2023-10-30 12:29:30,421:INFO:         cloudpickle: 2.2.1
2023-10-30 12:29:30,421:INFO:         deprecation: 2.1.0
2023-10-30 12:29:30,421:INFO:              xxhash: 3.3.0
2023-10-30 12:29:30,422:INFO:           wurlitzer: Not installed
2023-10-30 12:29:30,422:INFO:PyCaret optional dependencies:
2023-10-30 12:29:30,422:INFO:                shap: Not installed
2023-10-30 12:29:30,422:INFO:           interpret: Not installed
2023-10-30 12:29:30,422:INFO:                umap: Not installed
2023-10-30 12:29:30,422:INFO:     ydata_profiling: Not installed
2023-10-30 12:29:30,422:INFO:  explainerdashboard: Not installed
2023-10-30 12:29:30,422:INFO:             autoviz: Not installed
2023-10-30 12:29:30,422:INFO:           fairlearn: Not installed
2023-10-30 12:29:30,422:INFO:          deepchecks: Not installed
2023-10-30 12:29:30,422:INFO:             xgboost: 2.0.0
2023-10-30 12:29:30,422:INFO:            catboost: Not installed
2023-10-30 12:29:30,422:INFO:              kmodes: Not installed
2023-10-30 12:29:30,422:INFO:             mlxtend: Not installed
2023-10-30 12:29:30,422:INFO:       statsforecast: Not installed
2023-10-30 12:29:30,422:INFO:        tune_sklearn: Not installed
2023-10-30 12:29:30,422:INFO:                 ray: Not installed
2023-10-30 12:29:30,422:INFO:            hyperopt: Not installed
2023-10-30 12:29:30,422:INFO:              optuna: Not installed
2023-10-30 12:29:30,422:INFO:               skopt: Not installed
2023-10-30 12:29:30,422:INFO:              mlflow: Not installed
2023-10-30 12:29:30,422:INFO:              gradio: Not installed
2023-10-30 12:29:30,422:INFO:             fastapi: Not installed
2023-10-30 12:29:30,422:INFO:             uvicorn: Not installed
2023-10-30 12:29:30,422:INFO:              m2cgen: Not installed
2023-10-30 12:29:30,422:INFO:           evidently: Not installed
2023-10-30 12:29:30,422:INFO:               fugue: Not installed
2023-10-30 12:29:30,422:INFO:           streamlit: Not installed
2023-10-30 12:29:30,422:INFO:             prophet: Not installed
2023-10-30 12:29:30,422:INFO:None
2023-10-30 12:29:30,422:INFO:Set up data.
2023-10-30 12:29:30,434:INFO:Set up folding strategy.
2023-10-30 12:29:30,434:INFO:Set up train/test split.
2023-10-30 12:29:44,649:INFO:PyCaret ClassificationExperiment
2023-10-30 12:29:44,649:INFO:Logging name: clf-default-name
2023-10-30 12:29:44,650:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:29:44,650:INFO:version 3.1.0
2023-10-30 12:29:44,650:INFO:Initializing setup()
2023-10-30 12:29:44,650:INFO:self.USI: 6287
2023-10-30 12:29:44,650:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:29:44,650:INFO:Checking environment
2023-10-30 12:29:44,650:INFO:python_version: 3.10.2
2023-10-30 12:29:44,650:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:29:44,650:INFO:machine: AMD64
2023-10-30 12:29:44,650:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:29:44,654:INFO:Memory: svmem(total=16952647680, available=2524061696, percent=85.1, used=14428585984, free=2524061696)
2023-10-30 12:29:44,654:INFO:Physical Core: 4
2023-10-30 12:29:44,654:INFO:Logical Core: 8
2023-10-30 12:29:44,654:INFO:Checking libraries
2023-10-30 12:29:44,654:INFO:System:
2023-10-30 12:29:44,654:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:29:44,654:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:29:44,654:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:29:44,654:INFO:PyCaret required dependencies:
2023-10-30 12:29:44,654:INFO:                 pip: 23.0.1
2023-10-30 12:29:44,654:INFO:          setuptools: 65.5.0
2023-10-30 12:29:44,654:INFO:             pycaret: 3.1.0
2023-10-30 12:29:44,654:INFO:             IPython: 8.15.0
2023-10-30 12:29:44,654:INFO:          ipywidgets: 8.1.1
2023-10-30 12:29:44,654:INFO:                tqdm: 4.66.1
2023-10-30 12:29:44,655:INFO:               numpy: 1.23.5
2023-10-30 12:29:44,655:INFO:              pandas: 1.5.3
2023-10-30 12:29:44,655:INFO:              jinja2: 3.1.2
2023-10-30 12:29:44,655:INFO:               scipy: 1.10.1
2023-10-30 12:29:44,655:INFO:              joblib: 1.3.2
2023-10-30 12:29:44,655:INFO:             sklearn: 1.2.2
2023-10-30 12:29:44,655:INFO:                pyod: 1.1.0
2023-10-30 12:29:44,655:INFO:            imblearn: 0.11.0
2023-10-30 12:29:44,655:INFO:   category_encoders: 2.6.2
2023-10-30 12:29:44,655:INFO:            lightgbm: 4.1.0
2023-10-30 12:29:44,655:INFO:               numba: 0.58.0
2023-10-30 12:29:44,655:INFO:            requests: 2.31.0
2023-10-30 12:29:44,655:INFO:          matplotlib: 3.8.0
2023-10-30 12:29:44,655:INFO:          scikitplot: 0.3.7
2023-10-30 12:29:44,655:INFO:         yellowbrick: 1.5
2023-10-30 12:29:44,655:INFO:              plotly: 5.17.0
2023-10-30 12:29:44,655:INFO:    plotly-resampler: Not installed
2023-10-30 12:29:44,655:INFO:             kaleido: 0.2.1
2023-10-30 12:29:44,655:INFO:           schemdraw: 0.15
2023-10-30 12:29:44,655:INFO:         statsmodels: 0.14.0
2023-10-30 12:29:44,655:INFO:              sktime: 0.21.1
2023-10-30 12:29:44,655:INFO:               tbats: 1.1.3
2023-10-30 12:29:44,655:INFO:            pmdarima: 2.0.3
2023-10-30 12:29:44,655:INFO:              psutil: 5.9.5
2023-10-30 12:29:44,655:INFO:          markupsafe: 2.1.3
2023-10-30 12:29:44,655:INFO:             pickle5: Not installed
2023-10-30 12:29:44,655:INFO:         cloudpickle: 2.2.1
2023-10-30 12:29:44,655:INFO:         deprecation: 2.1.0
2023-10-30 12:29:44,655:INFO:              xxhash: 3.3.0
2023-10-30 12:29:44,655:INFO:           wurlitzer: Not installed
2023-10-30 12:29:44,655:INFO:PyCaret optional dependencies:
2023-10-30 12:29:44,656:INFO:                shap: Not installed
2023-10-30 12:29:44,656:INFO:           interpret: Not installed
2023-10-30 12:29:44,656:INFO:                umap: Not installed
2023-10-30 12:29:44,656:INFO:     ydata_profiling: Not installed
2023-10-30 12:29:44,656:INFO:  explainerdashboard: Not installed
2023-10-30 12:29:44,656:INFO:             autoviz: Not installed
2023-10-30 12:29:44,656:INFO:           fairlearn: Not installed
2023-10-30 12:29:44,656:INFO:          deepchecks: Not installed
2023-10-30 12:29:44,656:INFO:             xgboost: 2.0.0
2023-10-30 12:29:44,656:INFO:            catboost: Not installed
2023-10-30 12:29:44,656:INFO:              kmodes: Not installed
2023-10-30 12:29:44,656:INFO:             mlxtend: Not installed
2023-10-30 12:29:44,656:INFO:       statsforecast: Not installed
2023-10-30 12:29:44,656:INFO:        tune_sklearn: Not installed
2023-10-30 12:29:44,656:INFO:                 ray: Not installed
2023-10-30 12:29:44,656:INFO:            hyperopt: Not installed
2023-10-30 12:29:44,656:INFO:              optuna: Not installed
2023-10-30 12:29:44,656:INFO:               skopt: Not installed
2023-10-30 12:29:44,656:INFO:              mlflow: Not installed
2023-10-30 12:29:44,656:INFO:              gradio: Not installed
2023-10-30 12:29:44,656:INFO:             fastapi: Not installed
2023-10-30 12:29:44,657:INFO:             uvicorn: Not installed
2023-10-30 12:29:44,657:INFO:              m2cgen: Not installed
2023-10-30 12:29:44,657:INFO:           evidently: Not installed
2023-10-30 12:29:44,657:INFO:               fugue: Not installed
2023-10-30 12:29:44,657:INFO:           streamlit: Not installed
2023-10-30 12:29:44,657:INFO:             prophet: Not installed
2023-10-30 12:29:44,657:INFO:None
2023-10-30 12:29:44,657:INFO:Set up data.
2023-10-30 12:29:44,669:INFO:Set up folding strategy.
2023-10-30 12:29:44,669:INFO:Set up train/test split.
2023-10-30 12:31:53,582:INFO:PyCaret ClassificationExperiment
2023-10-30 12:31:53,582:INFO:Logging name: clf-default-name
2023-10-30 12:31:53,582:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:31:53,582:INFO:version 3.1.0
2023-10-30 12:31:53,582:INFO:Initializing setup()
2023-10-30 12:31:53,582:INFO:self.USI: 3c7f
2023-10-30 12:31:53,582:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:31:53,582:INFO:Checking environment
2023-10-30 12:31:53,582:INFO:python_version: 3.10.2
2023-10-30 12:31:53,582:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:31:53,582:INFO:machine: AMD64
2023-10-30 12:31:53,582:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:31:53,588:INFO:Memory: svmem(total=16952647680, available=2553380864, percent=84.9, used=14399266816, free=2553380864)
2023-10-30 12:31:53,589:INFO:Physical Core: 4
2023-10-30 12:31:53,589:INFO:Logical Core: 8
2023-10-30 12:31:53,589:INFO:Checking libraries
2023-10-30 12:31:53,589:INFO:System:
2023-10-30 12:31:53,589:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:31:53,589:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:31:53,589:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:31:53,589:INFO:PyCaret required dependencies:
2023-10-30 12:31:53,589:INFO:                 pip: 23.0.1
2023-10-30 12:31:53,590:INFO:          setuptools: 65.5.0
2023-10-30 12:31:53,590:INFO:             pycaret: 3.1.0
2023-10-30 12:31:53,590:INFO:             IPython: 8.15.0
2023-10-30 12:31:53,590:INFO:          ipywidgets: 8.1.1
2023-10-30 12:31:53,590:INFO:                tqdm: 4.66.1
2023-10-30 12:31:53,590:INFO:               numpy: 1.23.5
2023-10-30 12:31:53,590:INFO:              pandas: 1.5.3
2023-10-30 12:31:53,590:INFO:              jinja2: 3.1.2
2023-10-30 12:31:53,590:INFO:               scipy: 1.10.1
2023-10-30 12:31:53,590:INFO:              joblib: 1.3.2
2023-10-30 12:31:53,590:INFO:             sklearn: 1.2.2
2023-10-30 12:31:53,590:INFO:                pyod: 1.1.0
2023-10-30 12:31:53,590:INFO:            imblearn: 0.11.0
2023-10-30 12:31:53,590:INFO:   category_encoders: 2.6.2
2023-10-30 12:31:53,590:INFO:            lightgbm: 4.1.0
2023-10-30 12:31:53,590:INFO:               numba: 0.58.0
2023-10-30 12:31:53,590:INFO:            requests: 2.31.0
2023-10-30 12:31:53,590:INFO:          matplotlib: 3.8.0
2023-10-30 12:31:53,590:INFO:          scikitplot: 0.3.7
2023-10-30 12:31:53,590:INFO:         yellowbrick: 1.5
2023-10-30 12:31:53,590:INFO:              plotly: 5.17.0
2023-10-30 12:31:53,590:INFO:    plotly-resampler: Not installed
2023-10-30 12:31:53,590:INFO:             kaleido: 0.2.1
2023-10-30 12:31:53,590:INFO:           schemdraw: 0.15
2023-10-30 12:31:53,591:INFO:         statsmodels: 0.14.0
2023-10-30 12:31:53,591:INFO:              sktime: 0.21.1
2023-10-30 12:31:53,591:INFO:               tbats: 1.1.3
2023-10-30 12:31:53,591:INFO:            pmdarima: 2.0.3
2023-10-30 12:31:53,591:INFO:              psutil: 5.9.5
2023-10-30 12:31:53,591:INFO:          markupsafe: 2.1.3
2023-10-30 12:31:53,591:INFO:             pickle5: Not installed
2023-10-30 12:31:53,591:INFO:         cloudpickle: 2.2.1
2023-10-30 12:31:53,591:INFO:         deprecation: 2.1.0
2023-10-30 12:31:53,591:INFO:              xxhash: 3.3.0
2023-10-30 12:31:53,591:INFO:           wurlitzer: Not installed
2023-10-30 12:31:53,591:INFO:PyCaret optional dependencies:
2023-10-30 12:31:53,591:INFO:                shap: Not installed
2023-10-30 12:31:53,591:INFO:           interpret: Not installed
2023-10-30 12:31:53,591:INFO:                umap: Not installed
2023-10-30 12:31:53,591:INFO:     ydata_profiling: Not installed
2023-10-30 12:31:53,591:INFO:  explainerdashboard: Not installed
2023-10-30 12:31:53,591:INFO:             autoviz: Not installed
2023-10-30 12:31:53,591:INFO:           fairlearn: Not installed
2023-10-30 12:31:53,592:INFO:          deepchecks: Not installed
2023-10-30 12:31:53,592:INFO:             xgboost: 2.0.0
2023-10-30 12:31:53,592:INFO:            catboost: Not installed
2023-10-30 12:31:53,592:INFO:              kmodes: Not installed
2023-10-30 12:31:53,592:INFO:             mlxtend: Not installed
2023-10-30 12:31:53,592:INFO:       statsforecast: Not installed
2023-10-30 12:31:53,592:INFO:        tune_sklearn: Not installed
2023-10-30 12:31:53,592:INFO:                 ray: Not installed
2023-10-30 12:31:53,592:INFO:            hyperopt: Not installed
2023-10-30 12:31:53,592:INFO:              optuna: Not installed
2023-10-30 12:31:53,592:INFO:               skopt: Not installed
2023-10-30 12:31:53,592:INFO:              mlflow: Not installed
2023-10-30 12:31:53,592:INFO:              gradio: Not installed
2023-10-30 12:31:53,592:INFO:             fastapi: Not installed
2023-10-30 12:31:53,592:INFO:             uvicorn: Not installed
2023-10-30 12:31:53,592:INFO:              m2cgen: Not installed
2023-10-30 12:31:53,593:INFO:           evidently: Not installed
2023-10-30 12:31:53,593:INFO:               fugue: Not installed
2023-10-30 12:31:53,593:INFO:           streamlit: Not installed
2023-10-30 12:31:53,593:INFO:             prophet: Not installed
2023-10-30 12:31:53,593:INFO:None
2023-10-30 12:31:53,593:INFO:Set up data.
2023-10-30 12:31:53,601:INFO:Set up folding strategy.
2023-10-30 12:31:53,601:INFO:Set up train/test split.
2023-10-30 12:32:08,634:INFO:PyCaret ClassificationExperiment
2023-10-30 12:32:08,634:INFO:Logging name: clf-default-name
2023-10-30 12:32:08,634:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:32:08,634:INFO:version 3.1.0
2023-10-30 12:32:08,634:INFO:Initializing setup()
2023-10-30 12:32:08,634:INFO:self.USI: b392
2023-10-30 12:32:08,634:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:32:08,634:INFO:Checking environment
2023-10-30 12:32:08,634:INFO:python_version: 3.10.2
2023-10-30 12:32:08,634:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:32:08,634:INFO:machine: AMD64
2023-10-30 12:32:08,634:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:32:08,638:INFO:Memory: svmem(total=16952647680, available=2790920192, percent=83.5, used=14161727488, free=2790920192)
2023-10-30 12:32:08,638:INFO:Physical Core: 4
2023-10-30 12:32:08,639:INFO:Logical Core: 8
2023-10-30 12:32:08,639:INFO:Checking libraries
2023-10-30 12:32:08,639:INFO:System:
2023-10-30 12:32:08,639:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:32:08,639:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:32:08,639:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:32:08,639:INFO:PyCaret required dependencies:
2023-10-30 12:32:08,639:INFO:                 pip: 23.0.1
2023-10-30 12:32:08,639:INFO:          setuptools: 65.5.0
2023-10-30 12:32:08,639:INFO:             pycaret: 3.1.0
2023-10-30 12:32:08,639:INFO:             IPython: 8.15.0
2023-10-30 12:32:08,639:INFO:          ipywidgets: 8.1.1
2023-10-30 12:32:08,639:INFO:                tqdm: 4.66.1
2023-10-30 12:32:08,639:INFO:               numpy: 1.23.5
2023-10-30 12:32:08,639:INFO:              pandas: 1.5.3
2023-10-30 12:32:08,639:INFO:              jinja2: 3.1.2
2023-10-30 12:32:08,639:INFO:               scipy: 1.10.1
2023-10-30 12:32:08,639:INFO:              joblib: 1.3.2
2023-10-30 12:32:08,640:INFO:             sklearn: 1.2.2
2023-10-30 12:32:08,640:INFO:                pyod: 1.1.0
2023-10-30 12:32:08,640:INFO:            imblearn: 0.11.0
2023-10-30 12:32:08,640:INFO:   category_encoders: 2.6.2
2023-10-30 12:32:08,640:INFO:            lightgbm: 4.1.0
2023-10-30 12:32:08,640:INFO:               numba: 0.58.0
2023-10-30 12:32:08,640:INFO:            requests: 2.31.0
2023-10-30 12:32:08,640:INFO:          matplotlib: 3.8.0
2023-10-30 12:32:08,640:INFO:          scikitplot: 0.3.7
2023-10-30 12:32:08,640:INFO:         yellowbrick: 1.5
2023-10-30 12:32:08,640:INFO:              plotly: 5.17.0
2023-10-30 12:32:08,640:INFO:    plotly-resampler: Not installed
2023-10-30 12:32:08,640:INFO:             kaleido: 0.2.1
2023-10-30 12:32:08,640:INFO:           schemdraw: 0.15
2023-10-30 12:32:08,640:INFO:         statsmodels: 0.14.0
2023-10-30 12:32:08,640:INFO:              sktime: 0.21.1
2023-10-30 12:32:08,640:INFO:               tbats: 1.1.3
2023-10-30 12:32:08,640:INFO:            pmdarima: 2.0.3
2023-10-30 12:32:08,640:INFO:              psutil: 5.9.5
2023-10-30 12:32:08,640:INFO:          markupsafe: 2.1.3
2023-10-30 12:32:08,641:INFO:             pickle5: Not installed
2023-10-30 12:32:08,641:INFO:         cloudpickle: 2.2.1
2023-10-30 12:32:08,641:INFO:         deprecation: 2.1.0
2023-10-30 12:32:08,641:INFO:              xxhash: 3.3.0
2023-10-30 12:32:08,641:INFO:           wurlitzer: Not installed
2023-10-30 12:32:08,641:INFO:PyCaret optional dependencies:
2023-10-30 12:32:08,641:INFO:                shap: Not installed
2023-10-30 12:32:08,641:INFO:           interpret: Not installed
2023-10-30 12:32:08,641:INFO:                umap: Not installed
2023-10-30 12:32:08,641:INFO:     ydata_profiling: Not installed
2023-10-30 12:32:08,641:INFO:  explainerdashboard: Not installed
2023-10-30 12:32:08,641:INFO:             autoviz: Not installed
2023-10-30 12:32:08,641:INFO:           fairlearn: Not installed
2023-10-30 12:32:08,641:INFO:          deepchecks: Not installed
2023-10-30 12:32:08,641:INFO:             xgboost: 2.0.0
2023-10-30 12:32:08,642:INFO:            catboost: Not installed
2023-10-30 12:32:08,642:INFO:              kmodes: Not installed
2023-10-30 12:32:08,642:INFO:             mlxtend: Not installed
2023-10-30 12:32:08,642:INFO:       statsforecast: Not installed
2023-10-30 12:32:08,642:INFO:        tune_sklearn: Not installed
2023-10-30 12:32:08,642:INFO:                 ray: Not installed
2023-10-30 12:32:08,642:INFO:            hyperopt: Not installed
2023-10-30 12:32:08,642:INFO:              optuna: Not installed
2023-10-30 12:32:08,642:INFO:               skopt: Not installed
2023-10-30 12:32:08,642:INFO:              mlflow: Not installed
2023-10-30 12:32:08,642:INFO:              gradio: Not installed
2023-10-30 12:32:08,642:INFO:             fastapi: Not installed
2023-10-30 12:32:08,642:INFO:             uvicorn: Not installed
2023-10-30 12:32:08,642:INFO:              m2cgen: Not installed
2023-10-30 12:32:08,642:INFO:           evidently: Not installed
2023-10-30 12:32:08,642:INFO:               fugue: Not installed
2023-10-30 12:32:08,642:INFO:           streamlit: Not installed
2023-10-30 12:32:08,642:INFO:             prophet: Not installed
2023-10-30 12:32:08,642:INFO:None
2023-10-30 12:32:08,643:INFO:Set up data.
2023-10-30 12:32:08,651:INFO:Set up folding strategy.
2023-10-30 12:32:08,651:INFO:Set up train/test split.
2023-10-30 12:32:32,478:INFO:PyCaret ClassificationExperiment
2023-10-30 12:32:32,478:INFO:Logging name: clf-default-name
2023-10-30 12:32:32,479:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:32:32,479:INFO:version 3.1.0
2023-10-30 12:32:32,479:INFO:Initializing setup()
2023-10-30 12:32:32,479:INFO:self.USI: 8bf1
2023-10-30 12:32:32,479:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:32:32,479:INFO:Checking environment
2023-10-30 12:32:32,479:INFO:python_version: 3.10.2
2023-10-30 12:32:32,479:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:32:32,479:INFO:machine: AMD64
2023-10-30 12:32:32,479:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:32:32,486:INFO:Memory: svmem(total=16952647680, available=2800128000, percent=83.5, used=14152519680, free=2800128000)
2023-10-30 12:32:32,486:INFO:Physical Core: 4
2023-10-30 12:32:32,486:INFO:Logical Core: 8
2023-10-30 12:32:32,486:INFO:Checking libraries
2023-10-30 12:32:32,486:INFO:System:
2023-10-30 12:32:32,486:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:32:32,486:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:32:32,486:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:32:32,487:INFO:PyCaret required dependencies:
2023-10-30 12:32:32,487:INFO:                 pip: 23.0.1
2023-10-30 12:32:32,487:INFO:          setuptools: 65.5.0
2023-10-30 12:32:32,488:INFO:             pycaret: 3.1.0
2023-10-30 12:32:32,488:INFO:             IPython: 8.15.0
2023-10-30 12:32:32,488:INFO:          ipywidgets: 8.1.1
2023-10-30 12:32:32,488:INFO:                tqdm: 4.66.1
2023-10-30 12:32:32,488:INFO:               numpy: 1.23.5
2023-10-30 12:32:32,488:INFO:              pandas: 1.5.3
2023-10-30 12:32:32,488:INFO:              jinja2: 3.1.2
2023-10-30 12:32:32,488:INFO:               scipy: 1.10.1
2023-10-30 12:32:32,488:INFO:              joblib: 1.3.2
2023-10-30 12:32:32,488:INFO:             sklearn: 1.2.2
2023-10-30 12:32:32,488:INFO:                pyod: 1.1.0
2023-10-30 12:32:32,488:INFO:            imblearn: 0.11.0
2023-10-30 12:32:32,488:INFO:   category_encoders: 2.6.2
2023-10-30 12:32:32,488:INFO:            lightgbm: 4.1.0
2023-10-30 12:32:32,488:INFO:               numba: 0.58.0
2023-10-30 12:32:32,488:INFO:            requests: 2.31.0
2023-10-30 12:32:32,488:INFO:          matplotlib: 3.8.0
2023-10-30 12:32:32,488:INFO:          scikitplot: 0.3.7
2023-10-30 12:32:32,488:INFO:         yellowbrick: 1.5
2023-10-30 12:32:32,488:INFO:              plotly: 5.17.0
2023-10-30 12:32:32,488:INFO:    plotly-resampler: Not installed
2023-10-30 12:32:32,488:INFO:             kaleido: 0.2.1
2023-10-30 12:32:32,489:INFO:           schemdraw: 0.15
2023-10-30 12:32:32,489:INFO:         statsmodels: 0.14.0
2023-10-30 12:32:32,489:INFO:              sktime: 0.21.1
2023-10-30 12:32:32,489:INFO:               tbats: 1.1.3
2023-10-30 12:32:32,489:INFO:            pmdarima: 2.0.3
2023-10-30 12:32:32,489:INFO:              psutil: 5.9.5
2023-10-30 12:32:32,489:INFO:          markupsafe: 2.1.3
2023-10-30 12:32:32,489:INFO:             pickle5: Not installed
2023-10-30 12:32:32,489:INFO:         cloudpickle: 2.2.1
2023-10-30 12:32:32,489:INFO:         deprecation: 2.1.0
2023-10-30 12:32:32,489:INFO:              xxhash: 3.3.0
2023-10-30 12:32:32,489:INFO:           wurlitzer: Not installed
2023-10-30 12:32:32,489:INFO:PyCaret optional dependencies:
2023-10-30 12:32:32,489:INFO:                shap: Not installed
2023-10-30 12:32:32,489:INFO:           interpret: Not installed
2023-10-30 12:32:32,489:INFO:                umap: Not installed
2023-10-30 12:32:32,489:INFO:     ydata_profiling: Not installed
2023-10-30 12:32:32,489:INFO:  explainerdashboard: Not installed
2023-10-30 12:32:32,489:INFO:             autoviz: Not installed
2023-10-30 12:32:32,489:INFO:           fairlearn: Not installed
2023-10-30 12:32:32,489:INFO:          deepchecks: Not installed
2023-10-30 12:32:32,489:INFO:             xgboost: 2.0.0
2023-10-30 12:32:32,489:INFO:            catboost: Not installed
2023-10-30 12:32:32,489:INFO:              kmodes: Not installed
2023-10-30 12:32:32,489:INFO:             mlxtend: Not installed
2023-10-30 12:32:32,489:INFO:       statsforecast: Not installed
2023-10-30 12:32:32,489:INFO:        tune_sklearn: Not installed
2023-10-30 12:32:32,489:INFO:                 ray: Not installed
2023-10-30 12:32:32,489:INFO:            hyperopt: Not installed
2023-10-30 12:32:32,489:INFO:              optuna: Not installed
2023-10-30 12:32:32,489:INFO:               skopt: Not installed
2023-10-30 12:32:32,489:INFO:              mlflow: Not installed
2023-10-30 12:32:32,489:INFO:              gradio: Not installed
2023-10-30 12:32:32,489:INFO:             fastapi: Not installed
2023-10-30 12:32:32,489:INFO:             uvicorn: Not installed
2023-10-30 12:32:32,490:INFO:              m2cgen: Not installed
2023-10-30 12:32:32,490:INFO:           evidently: Not installed
2023-10-30 12:32:32,490:INFO:               fugue: Not installed
2023-10-30 12:32:32,490:INFO:           streamlit: Not installed
2023-10-30 12:32:32,490:INFO:             prophet: Not installed
2023-10-30 12:32:32,490:INFO:None
2023-10-30 12:32:32,490:INFO:Set up data.
2023-10-30 12:32:32,496:INFO:Set up folding strategy.
2023-10-30 12:32:32,496:INFO:Set up train/test split.
2023-10-30 12:39:08,831:INFO:PyCaret ClassificationExperiment
2023-10-30 12:39:08,831:INFO:Logging name: clf-default-name
2023-10-30 12:39:08,831:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:39:08,831:INFO:version 3.1.0
2023-10-30 12:39:08,831:INFO:Initializing setup()
2023-10-30 12:39:08,831:INFO:self.USI: 2c22
2023-10-30 12:39:08,831:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:39:08,831:INFO:Checking environment
2023-10-30 12:39:08,831:INFO:python_version: 3.10.2
2023-10-30 12:39:08,831:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:39:08,831:INFO:machine: AMD64
2023-10-30 12:39:08,831:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:39:08,835:INFO:Memory: svmem(total=16952647680, available=2606784512, percent=84.6, used=14345863168, free=2606784512)
2023-10-30 12:39:08,835:INFO:Physical Core: 4
2023-10-30 12:39:08,835:INFO:Logical Core: 8
2023-10-30 12:39:08,836:INFO:Checking libraries
2023-10-30 12:39:08,836:INFO:System:
2023-10-30 12:39:08,836:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:39:08,836:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:39:08,836:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:39:08,836:INFO:PyCaret required dependencies:
2023-10-30 12:39:08,836:INFO:                 pip: 23.0.1
2023-10-30 12:39:08,836:INFO:          setuptools: 65.5.0
2023-10-30 12:39:08,836:INFO:             pycaret: 3.1.0
2023-10-30 12:39:08,836:INFO:             IPython: 8.15.0
2023-10-30 12:39:08,836:INFO:          ipywidgets: 8.1.1
2023-10-30 12:39:08,836:INFO:                tqdm: 4.66.1
2023-10-30 12:39:08,836:INFO:               numpy: 1.23.5
2023-10-30 12:39:08,836:INFO:              pandas: 1.5.3
2023-10-30 12:39:08,836:INFO:              jinja2: 3.1.2
2023-10-30 12:39:08,836:INFO:               scipy: 1.10.1
2023-10-30 12:39:08,836:INFO:              joblib: 1.3.2
2023-10-30 12:39:08,836:INFO:             sklearn: 1.2.2
2023-10-30 12:39:08,836:INFO:                pyod: 1.1.0
2023-10-30 12:39:08,836:INFO:            imblearn: 0.11.0
2023-10-30 12:39:08,836:INFO:   category_encoders: 2.6.2
2023-10-30 12:39:08,836:INFO:            lightgbm: 4.1.0
2023-10-30 12:39:08,836:INFO:               numba: 0.58.0
2023-10-30 12:39:08,836:INFO:            requests: 2.31.0
2023-10-30 12:39:08,836:INFO:          matplotlib: 3.8.0
2023-10-30 12:39:08,836:INFO:          scikitplot: 0.3.7
2023-10-30 12:39:08,836:INFO:         yellowbrick: 1.5
2023-10-30 12:39:08,837:INFO:              plotly: 5.17.0
2023-10-30 12:39:08,837:INFO:    plotly-resampler: Not installed
2023-10-30 12:39:08,837:INFO:             kaleido: 0.2.1
2023-10-30 12:39:08,837:INFO:           schemdraw: 0.15
2023-10-30 12:39:08,837:INFO:         statsmodels: 0.14.0
2023-10-30 12:39:08,837:INFO:              sktime: 0.21.1
2023-10-30 12:39:08,837:INFO:               tbats: 1.1.3
2023-10-30 12:39:08,837:INFO:            pmdarima: 2.0.3
2023-10-30 12:39:08,837:INFO:              psutil: 5.9.5
2023-10-30 12:39:08,837:INFO:          markupsafe: 2.1.3
2023-10-30 12:39:08,837:INFO:             pickle5: Not installed
2023-10-30 12:39:08,837:INFO:         cloudpickle: 2.2.1
2023-10-30 12:39:08,837:INFO:         deprecation: 2.1.0
2023-10-30 12:39:08,837:INFO:              xxhash: 3.3.0
2023-10-30 12:39:08,837:INFO:           wurlitzer: Not installed
2023-10-30 12:39:08,837:INFO:PyCaret optional dependencies:
2023-10-30 12:39:08,837:INFO:                shap: Not installed
2023-10-30 12:39:08,837:INFO:           interpret: Not installed
2023-10-30 12:39:08,837:INFO:                umap: Not installed
2023-10-30 12:39:08,837:INFO:     ydata_profiling: Not installed
2023-10-30 12:39:08,837:INFO:  explainerdashboard: Not installed
2023-10-30 12:39:08,837:INFO:             autoviz: Not installed
2023-10-30 12:39:08,837:INFO:           fairlearn: Not installed
2023-10-30 12:39:08,838:INFO:          deepchecks: Not installed
2023-10-30 12:39:08,838:INFO:             xgboost: 2.0.0
2023-10-30 12:39:08,838:INFO:            catboost: Not installed
2023-10-30 12:39:08,838:INFO:              kmodes: Not installed
2023-10-30 12:39:08,838:INFO:             mlxtend: Not installed
2023-10-30 12:39:08,838:INFO:       statsforecast: Not installed
2023-10-30 12:39:08,838:INFO:        tune_sklearn: Not installed
2023-10-30 12:39:08,838:INFO:                 ray: Not installed
2023-10-30 12:39:08,838:INFO:            hyperopt: Not installed
2023-10-30 12:39:08,838:INFO:              optuna: Not installed
2023-10-30 12:39:08,838:INFO:               skopt: Not installed
2023-10-30 12:39:08,838:INFO:              mlflow: Not installed
2023-10-30 12:39:08,838:INFO:              gradio: Not installed
2023-10-30 12:39:08,838:INFO:             fastapi: Not installed
2023-10-30 12:39:08,838:INFO:             uvicorn: Not installed
2023-10-30 12:39:08,838:INFO:              m2cgen: Not installed
2023-10-30 12:39:08,838:INFO:           evidently: Not installed
2023-10-30 12:39:08,838:INFO:               fugue: Not installed
2023-10-30 12:39:08,838:INFO:           streamlit: Not installed
2023-10-30 12:39:08,838:INFO:             prophet: Not installed
2023-10-30 12:39:08,839:INFO:None
2023-10-30 12:39:08,839:INFO:Set up data.
2023-10-30 12:39:08,852:INFO:Set up folding strategy.
2023-10-30 12:39:08,852:INFO:Set up train/test split.
2023-10-30 12:43:51,984:INFO:PyCaret ClassificationExperiment
2023-10-30 12:43:51,985:INFO:Logging name: clf-default-name
2023-10-30 12:43:51,985:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:43:51,985:INFO:version 3.1.0
2023-10-30 12:43:51,985:INFO:Initializing setup()
2023-10-30 12:43:51,985:INFO:self.USI: 6b93
2023-10-30 12:43:51,985:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:43:51,985:INFO:Checking environment
2023-10-30 12:43:51,985:INFO:python_version: 3.10.2
2023-10-30 12:43:51,985:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:43:51,985:INFO:machine: AMD64
2023-10-30 12:43:51,985:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:43:51,990:INFO:Memory: svmem(total=16952647680, available=2954555392, percent=82.6, used=13998092288, free=2954555392)
2023-10-30 12:43:51,991:INFO:Physical Core: 4
2023-10-30 12:43:51,991:INFO:Logical Core: 8
2023-10-30 12:43:51,991:INFO:Checking libraries
2023-10-30 12:43:51,991:INFO:System:
2023-10-30 12:43:51,991:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:43:51,991:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:43:51,991:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:43:51,991:INFO:PyCaret required dependencies:
2023-10-30 12:43:51,991:INFO:                 pip: 23.0.1
2023-10-30 12:43:51,991:INFO:          setuptools: 65.5.0
2023-10-30 12:43:51,991:INFO:             pycaret: 3.1.0
2023-10-30 12:43:51,991:INFO:             IPython: 8.15.0
2023-10-30 12:43:51,991:INFO:          ipywidgets: 8.1.1
2023-10-30 12:43:51,991:INFO:                tqdm: 4.66.1
2023-10-30 12:43:51,991:INFO:               numpy: 1.23.5
2023-10-30 12:43:51,991:INFO:              pandas: 1.5.3
2023-10-30 12:43:51,991:INFO:              jinja2: 3.1.2
2023-10-30 12:43:51,991:INFO:               scipy: 1.10.1
2023-10-30 12:43:51,991:INFO:              joblib: 1.3.2
2023-10-30 12:43:51,991:INFO:             sklearn: 1.2.2
2023-10-30 12:43:51,991:INFO:                pyod: 1.1.0
2023-10-30 12:43:51,991:INFO:            imblearn: 0.11.0
2023-10-30 12:43:51,991:INFO:   category_encoders: 2.6.2
2023-10-30 12:43:51,991:INFO:            lightgbm: 4.1.0
2023-10-30 12:43:51,991:INFO:               numba: 0.58.0
2023-10-30 12:43:51,991:INFO:            requests: 2.31.0
2023-10-30 12:43:51,991:INFO:          matplotlib: 3.8.0
2023-10-30 12:43:51,991:INFO:          scikitplot: 0.3.7
2023-10-30 12:43:51,991:INFO:         yellowbrick: 1.5
2023-10-30 12:43:51,992:INFO:              plotly: 5.17.0
2023-10-30 12:43:51,992:INFO:    plotly-resampler: Not installed
2023-10-30 12:43:51,992:INFO:             kaleido: 0.2.1
2023-10-30 12:43:51,992:INFO:           schemdraw: 0.15
2023-10-30 12:43:51,992:INFO:         statsmodels: 0.14.0
2023-10-30 12:43:51,992:INFO:              sktime: 0.21.1
2023-10-30 12:43:51,992:INFO:               tbats: 1.1.3
2023-10-30 12:43:51,992:INFO:            pmdarima: 2.0.3
2023-10-30 12:43:51,992:INFO:              psutil: 5.9.5
2023-10-30 12:43:51,992:INFO:          markupsafe: 2.1.3
2023-10-30 12:43:51,992:INFO:             pickle5: Not installed
2023-10-30 12:43:51,992:INFO:         cloudpickle: 2.2.1
2023-10-30 12:43:51,992:INFO:         deprecation: 2.1.0
2023-10-30 12:43:51,992:INFO:              xxhash: 3.3.0
2023-10-30 12:43:51,992:INFO:           wurlitzer: Not installed
2023-10-30 12:43:51,992:INFO:PyCaret optional dependencies:
2023-10-30 12:43:51,992:INFO:                shap: Not installed
2023-10-30 12:43:51,992:INFO:           interpret: Not installed
2023-10-30 12:43:51,992:INFO:                umap: Not installed
2023-10-30 12:43:51,992:INFO:     ydata_profiling: Not installed
2023-10-30 12:43:51,992:INFO:  explainerdashboard: Not installed
2023-10-30 12:43:51,992:INFO:             autoviz: Not installed
2023-10-30 12:43:51,992:INFO:           fairlearn: Not installed
2023-10-30 12:43:51,992:INFO:          deepchecks: Not installed
2023-10-30 12:43:51,992:INFO:             xgboost: 2.0.0
2023-10-30 12:43:51,992:INFO:            catboost: Not installed
2023-10-30 12:43:51,992:INFO:              kmodes: Not installed
2023-10-30 12:43:51,992:INFO:             mlxtend: Not installed
2023-10-30 12:43:51,992:INFO:       statsforecast: Not installed
2023-10-30 12:43:51,992:INFO:        tune_sklearn: Not installed
2023-10-30 12:43:51,992:INFO:                 ray: Not installed
2023-10-30 12:43:51,993:INFO:            hyperopt: Not installed
2023-10-30 12:43:51,993:INFO:              optuna: Not installed
2023-10-30 12:43:51,993:INFO:               skopt: Not installed
2023-10-30 12:43:51,993:INFO:              mlflow: Not installed
2023-10-30 12:43:51,993:INFO:              gradio: Not installed
2023-10-30 12:43:51,993:INFO:             fastapi: Not installed
2023-10-30 12:43:51,993:INFO:             uvicorn: Not installed
2023-10-30 12:43:51,993:INFO:              m2cgen: Not installed
2023-10-30 12:43:51,993:INFO:           evidently: Not installed
2023-10-30 12:43:51,993:INFO:               fugue: Not installed
2023-10-30 12:43:51,993:INFO:           streamlit: Not installed
2023-10-30 12:43:51,993:INFO:             prophet: Not installed
2023-10-30 12:43:51,993:INFO:None
2023-10-30 12:43:51,993:INFO:Set up data.
2023-10-30 12:43:52,007:INFO:Set up folding strategy.
2023-10-30 12:43:52,007:INFO:Set up train/test split.
2023-10-30 12:45:43,053:INFO:PyCaret ClassificationExperiment
2023-10-30 12:45:43,053:INFO:Logging name: clf-default-name
2023-10-30 12:45:43,053:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:45:43,053:INFO:version 3.1.0
2023-10-30 12:45:43,053:INFO:Initializing setup()
2023-10-30 12:45:43,054:INFO:self.USI: 3c04
2023-10-30 12:45:43,054:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:45:43,054:INFO:Checking environment
2023-10-30 12:45:43,054:INFO:python_version: 3.10.2
2023-10-30 12:45:43,054:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:45:43,054:INFO:machine: AMD64
2023-10-30 12:45:43,054:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:45:43,058:INFO:Memory: svmem(total=16952647680, available=3022860288, percent=82.2, used=13929787392, free=3022860288)
2023-10-30 12:45:43,059:INFO:Physical Core: 4
2023-10-30 12:45:43,059:INFO:Logical Core: 8
2023-10-30 12:45:43,059:INFO:Checking libraries
2023-10-30 12:45:43,059:INFO:System:
2023-10-30 12:45:43,059:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:45:43,059:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:45:43,059:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:45:43,059:INFO:PyCaret required dependencies:
2023-10-30 12:45:43,059:INFO:                 pip: 23.0.1
2023-10-30 12:45:43,059:INFO:          setuptools: 65.5.0
2023-10-30 12:45:43,059:INFO:             pycaret: 3.1.0
2023-10-30 12:45:43,059:INFO:             IPython: 8.15.0
2023-10-30 12:45:43,059:INFO:          ipywidgets: 8.1.1
2023-10-30 12:45:43,059:INFO:                tqdm: 4.66.1
2023-10-30 12:45:43,059:INFO:               numpy: 1.23.5
2023-10-30 12:45:43,059:INFO:              pandas: 1.5.3
2023-10-30 12:45:43,059:INFO:              jinja2: 3.1.2
2023-10-30 12:45:43,059:INFO:               scipy: 1.10.1
2023-10-30 12:45:43,059:INFO:              joblib: 1.3.2
2023-10-30 12:45:43,059:INFO:             sklearn: 1.2.2
2023-10-30 12:45:43,059:INFO:                pyod: 1.1.0
2023-10-30 12:45:43,059:INFO:            imblearn: 0.11.0
2023-10-30 12:45:43,059:INFO:   category_encoders: 2.6.2
2023-10-30 12:45:43,059:INFO:            lightgbm: 4.1.0
2023-10-30 12:45:43,059:INFO:               numba: 0.58.0
2023-10-30 12:45:43,059:INFO:            requests: 2.31.0
2023-10-30 12:45:43,059:INFO:          matplotlib: 3.8.0
2023-10-30 12:45:43,059:INFO:          scikitplot: 0.3.7
2023-10-30 12:45:43,060:INFO:         yellowbrick: 1.5
2023-10-30 12:45:43,060:INFO:              plotly: 5.17.0
2023-10-30 12:45:43,060:INFO:    plotly-resampler: Not installed
2023-10-30 12:45:43,060:INFO:             kaleido: 0.2.1
2023-10-30 12:45:43,060:INFO:           schemdraw: 0.15
2023-10-30 12:45:43,060:INFO:         statsmodels: 0.14.0
2023-10-30 12:45:43,060:INFO:              sktime: 0.21.1
2023-10-30 12:45:43,060:INFO:               tbats: 1.1.3
2023-10-30 12:45:43,060:INFO:            pmdarima: 2.0.3
2023-10-30 12:45:43,060:INFO:              psutil: 5.9.5
2023-10-30 12:45:43,060:INFO:          markupsafe: 2.1.3
2023-10-30 12:45:43,060:INFO:             pickle5: Not installed
2023-10-30 12:45:43,060:INFO:         cloudpickle: 2.2.1
2023-10-30 12:45:43,060:INFO:         deprecation: 2.1.0
2023-10-30 12:45:43,060:INFO:              xxhash: 3.3.0
2023-10-30 12:45:43,060:INFO:           wurlitzer: Not installed
2023-10-30 12:45:43,060:INFO:PyCaret optional dependencies:
2023-10-30 12:45:43,060:INFO:                shap: Not installed
2023-10-30 12:45:43,060:INFO:           interpret: Not installed
2023-10-30 12:45:43,060:INFO:                umap: Not installed
2023-10-30 12:45:43,060:INFO:     ydata_profiling: Not installed
2023-10-30 12:45:43,060:INFO:  explainerdashboard: Not installed
2023-10-30 12:45:43,060:INFO:             autoviz: Not installed
2023-10-30 12:45:43,060:INFO:           fairlearn: Not installed
2023-10-30 12:45:43,060:INFO:          deepchecks: Not installed
2023-10-30 12:45:43,060:INFO:             xgboost: 2.0.0
2023-10-30 12:45:43,060:INFO:            catboost: Not installed
2023-10-30 12:45:43,060:INFO:              kmodes: Not installed
2023-10-30 12:45:43,060:INFO:             mlxtend: Not installed
2023-10-30 12:45:43,060:INFO:       statsforecast: Not installed
2023-10-30 12:45:43,060:INFO:        tune_sklearn: Not installed
2023-10-30 12:45:43,060:INFO:                 ray: Not installed
2023-10-30 12:45:43,060:INFO:            hyperopt: Not installed
2023-10-30 12:45:43,060:INFO:              optuna: Not installed
2023-10-30 12:45:43,060:INFO:               skopt: Not installed
2023-10-30 12:45:43,061:INFO:              mlflow: Not installed
2023-10-30 12:45:43,061:INFO:              gradio: Not installed
2023-10-30 12:45:43,061:INFO:             fastapi: Not installed
2023-10-30 12:45:43,061:INFO:             uvicorn: Not installed
2023-10-30 12:45:43,061:INFO:              m2cgen: Not installed
2023-10-30 12:45:43,061:INFO:           evidently: Not installed
2023-10-30 12:45:43,061:INFO:               fugue: Not installed
2023-10-30 12:45:43,061:INFO:           streamlit: Not installed
2023-10-30 12:45:43,061:INFO:             prophet: Not installed
2023-10-30 12:45:43,061:INFO:None
2023-10-30 12:45:43,061:INFO:Set up data.
2023-10-30 12:45:43,075:INFO:Set up folding strategy.
2023-10-30 12:45:43,075:INFO:Set up train/test split.
2023-10-30 12:45:52,886:INFO:PyCaret ClassificationExperiment
2023-10-30 12:45:52,886:INFO:Logging name: clf-default-name
2023-10-30 12:45:52,886:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:45:52,886:INFO:version 3.1.0
2023-10-30 12:45:52,886:INFO:Initializing setup()
2023-10-30 12:45:52,886:INFO:self.USI: addb
2023-10-30 12:45:52,886:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:45:52,886:INFO:Checking environment
2023-10-30 12:45:52,886:INFO:python_version: 3.10.2
2023-10-30 12:45:52,886:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:45:52,886:INFO:machine: AMD64
2023-10-30 12:45:52,886:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:45:52,890:INFO:Memory: svmem(total=16952647680, available=3172630528, percent=81.3, used=13780017152, free=3172630528)
2023-10-30 12:45:52,890:INFO:Physical Core: 4
2023-10-30 12:45:52,890:INFO:Logical Core: 8
2023-10-30 12:45:52,890:INFO:Checking libraries
2023-10-30 12:45:52,890:INFO:System:
2023-10-30 12:45:52,890:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:45:52,890:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:45:52,890:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:45:52,890:INFO:PyCaret required dependencies:
2023-10-30 12:45:52,890:INFO:                 pip: 23.0.1
2023-10-30 12:45:52,890:INFO:          setuptools: 65.5.0
2023-10-30 12:45:52,890:INFO:             pycaret: 3.1.0
2023-10-30 12:45:52,890:INFO:             IPython: 8.15.0
2023-10-30 12:45:52,890:INFO:          ipywidgets: 8.1.1
2023-10-30 12:45:52,890:INFO:                tqdm: 4.66.1
2023-10-30 12:45:52,890:INFO:               numpy: 1.23.5
2023-10-30 12:45:52,890:INFO:              pandas: 1.5.3
2023-10-30 12:45:52,890:INFO:              jinja2: 3.1.2
2023-10-30 12:45:52,891:INFO:               scipy: 1.10.1
2023-10-30 12:45:52,891:INFO:              joblib: 1.3.2
2023-10-30 12:45:52,891:INFO:             sklearn: 1.2.2
2023-10-30 12:45:52,891:INFO:                pyod: 1.1.0
2023-10-30 12:45:52,891:INFO:            imblearn: 0.11.0
2023-10-30 12:45:52,891:INFO:   category_encoders: 2.6.2
2023-10-30 12:45:52,891:INFO:            lightgbm: 4.1.0
2023-10-30 12:45:52,891:INFO:               numba: 0.58.0
2023-10-30 12:45:52,891:INFO:            requests: 2.31.0
2023-10-30 12:45:52,891:INFO:          matplotlib: 3.8.0
2023-10-30 12:45:52,891:INFO:          scikitplot: 0.3.7
2023-10-30 12:45:52,891:INFO:         yellowbrick: 1.5
2023-10-30 12:45:52,891:INFO:              plotly: 5.17.0
2023-10-30 12:45:52,891:INFO:    plotly-resampler: Not installed
2023-10-30 12:45:52,891:INFO:             kaleido: 0.2.1
2023-10-30 12:45:52,891:INFO:           schemdraw: 0.15
2023-10-30 12:45:52,891:INFO:         statsmodels: 0.14.0
2023-10-30 12:45:52,891:INFO:              sktime: 0.21.1
2023-10-30 12:45:52,891:INFO:               tbats: 1.1.3
2023-10-30 12:45:52,891:INFO:            pmdarima: 2.0.3
2023-10-30 12:45:52,891:INFO:              psutil: 5.9.5
2023-10-30 12:45:52,891:INFO:          markupsafe: 2.1.3
2023-10-30 12:45:52,891:INFO:             pickle5: Not installed
2023-10-30 12:45:52,891:INFO:         cloudpickle: 2.2.1
2023-10-30 12:45:52,891:INFO:         deprecation: 2.1.0
2023-10-30 12:45:52,891:INFO:              xxhash: 3.3.0
2023-10-30 12:45:52,891:INFO:           wurlitzer: Not installed
2023-10-30 12:45:52,891:INFO:PyCaret optional dependencies:
2023-10-30 12:45:52,891:INFO:                shap: Not installed
2023-10-30 12:45:52,891:INFO:           interpret: Not installed
2023-10-30 12:45:52,891:INFO:                umap: Not installed
2023-10-30 12:45:52,891:INFO:     ydata_profiling: Not installed
2023-10-30 12:45:52,891:INFO:  explainerdashboard: Not installed
2023-10-30 12:45:52,891:INFO:             autoviz: Not installed
2023-10-30 12:45:52,891:INFO:           fairlearn: Not installed
2023-10-30 12:45:52,891:INFO:          deepchecks: Not installed
2023-10-30 12:45:52,891:INFO:             xgboost: 2.0.0
2023-10-30 12:45:52,891:INFO:            catboost: Not installed
2023-10-30 12:45:52,892:INFO:              kmodes: Not installed
2023-10-30 12:45:52,892:INFO:             mlxtend: Not installed
2023-10-30 12:45:52,892:INFO:       statsforecast: Not installed
2023-10-30 12:45:52,892:INFO:        tune_sklearn: Not installed
2023-10-30 12:45:52,892:INFO:                 ray: Not installed
2023-10-30 12:45:52,892:INFO:            hyperopt: Not installed
2023-10-30 12:45:52,892:INFO:              optuna: Not installed
2023-10-30 12:45:52,892:INFO:               skopt: Not installed
2023-10-30 12:45:52,892:INFO:              mlflow: Not installed
2023-10-30 12:45:52,892:INFO:              gradio: Not installed
2023-10-30 12:45:52,892:INFO:             fastapi: Not installed
2023-10-30 12:45:52,892:INFO:             uvicorn: Not installed
2023-10-30 12:45:52,892:INFO:              m2cgen: Not installed
2023-10-30 12:45:52,892:INFO:           evidently: Not installed
2023-10-30 12:45:52,892:INFO:               fugue: Not installed
2023-10-30 12:45:52,892:INFO:           streamlit: Not installed
2023-10-30 12:45:52,892:INFO:             prophet: Not installed
2023-10-30 12:45:52,892:INFO:None
2023-10-30 12:45:52,892:INFO:Set up data.
2023-10-30 12:45:52,906:INFO:Set up folding strategy.
2023-10-30 12:45:52,906:INFO:Set up train/test split.
2023-10-30 12:48:15,492:INFO:PyCaret ClassificationExperiment
2023-10-30 12:48:15,492:INFO:Logging name: clf-default-name
2023-10-30 12:48:15,493:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-30 12:48:15,493:INFO:version 3.1.0
2023-10-30 12:48:15,493:INFO:Initializing setup()
2023-10-30 12:48:15,493:INFO:self.USI: 2b2c
2023-10-30 12:48:15,493:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-30 12:48:15,493:INFO:Checking environment
2023-10-30 12:48:15,493:INFO:python_version: 3.10.2
2023-10-30 12:48:15,493:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-30 12:48:15,493:INFO:machine: AMD64
2023-10-30 12:48:15,493:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-30 12:48:15,501:INFO:Memory: svmem(total=16952647680, available=3071512576, percent=81.9, used=13881135104, free=3071512576)
2023-10-30 12:48:15,501:INFO:Physical Core: 4
2023-10-30 12:48:15,501:INFO:Logical Core: 8
2023-10-30 12:48:15,501:INFO:Checking libraries
2023-10-30 12:48:15,501:INFO:System:
2023-10-30 12:48:15,501:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-30 12:48:15,501:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-30 12:48:15,501:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-30 12:48:15,501:INFO:PyCaret required dependencies:
2023-10-30 12:48:15,501:INFO:                 pip: 23.0.1
2023-10-30 12:48:15,501:INFO:          setuptools: 65.5.0
2023-10-30 12:48:15,502:INFO:             pycaret: 3.1.0
2023-10-30 12:48:15,502:INFO:             IPython: 8.15.0
2023-10-30 12:48:15,502:INFO:          ipywidgets: 8.1.1
2023-10-30 12:48:15,502:INFO:                tqdm: 4.66.1
2023-10-30 12:48:15,502:INFO:               numpy: 1.23.5
2023-10-30 12:48:15,502:INFO:              pandas: 1.5.3
2023-10-30 12:48:15,502:INFO:              jinja2: 3.1.2
2023-10-30 12:48:15,502:INFO:               scipy: 1.10.1
2023-10-30 12:48:15,502:INFO:              joblib: 1.3.2
2023-10-30 12:48:15,502:INFO:             sklearn: 1.2.2
2023-10-30 12:48:15,502:INFO:                pyod: 1.1.0
2023-10-30 12:48:15,502:INFO:            imblearn: 0.11.0
2023-10-30 12:48:15,502:INFO:   category_encoders: 2.6.2
2023-10-30 12:48:15,502:INFO:            lightgbm: 4.1.0
2023-10-30 12:48:15,502:INFO:               numba: 0.58.0
2023-10-30 12:48:15,502:INFO:            requests: 2.31.0
2023-10-30 12:48:15,502:INFO:          matplotlib: 3.8.0
2023-10-30 12:48:15,502:INFO:          scikitplot: 0.3.7
2023-10-30 12:48:15,502:INFO:         yellowbrick: 1.5
2023-10-30 12:48:15,502:INFO:              plotly: 5.17.0
2023-10-30 12:48:15,502:INFO:    plotly-resampler: Not installed
2023-10-30 12:48:15,502:INFO:             kaleido: 0.2.1
2023-10-30 12:48:15,502:INFO:           schemdraw: 0.15
2023-10-30 12:48:15,502:INFO:         statsmodels: 0.14.0
2023-10-30 12:48:15,502:INFO:              sktime: 0.21.1
2023-10-30 12:48:15,502:INFO:               tbats: 1.1.3
2023-10-30 12:48:15,502:INFO:            pmdarima: 2.0.3
2023-10-30 12:48:15,502:INFO:              psutil: 5.9.5
2023-10-30 12:48:15,502:INFO:          markupsafe: 2.1.3
2023-10-30 12:48:15,502:INFO:             pickle5: Not installed
2023-10-30 12:48:15,502:INFO:         cloudpickle: 2.2.1
2023-10-30 12:48:15,502:INFO:         deprecation: 2.1.0
2023-10-30 12:48:15,502:INFO:              xxhash: 3.3.0
2023-10-30 12:48:15,502:INFO:           wurlitzer: Not installed
2023-10-30 12:48:15,502:INFO:PyCaret optional dependencies:
2023-10-30 12:48:15,502:INFO:                shap: Not installed
2023-10-30 12:48:15,502:INFO:           interpret: Not installed
2023-10-30 12:48:15,502:INFO:                umap: Not installed
2023-10-30 12:48:15,502:INFO:     ydata_profiling: Not installed
2023-10-30 12:48:15,503:INFO:  explainerdashboard: Not installed
2023-10-30 12:48:15,503:INFO:             autoviz: Not installed
2023-10-30 12:48:15,503:INFO:           fairlearn: Not installed
2023-10-30 12:48:15,503:INFO:          deepchecks: Not installed
2023-10-30 12:48:15,503:INFO:             xgboost: 2.0.0
2023-10-30 12:48:15,503:INFO:            catboost: Not installed
2023-10-30 12:48:15,503:INFO:              kmodes: Not installed
2023-10-30 12:48:15,503:INFO:             mlxtend: Not installed
2023-10-30 12:48:15,503:INFO:       statsforecast: Not installed
2023-10-30 12:48:15,503:INFO:        tune_sklearn: Not installed
2023-10-30 12:48:15,503:INFO:                 ray: Not installed
2023-10-30 12:48:15,503:INFO:            hyperopt: Not installed
2023-10-30 12:48:15,503:INFO:              optuna: Not installed
2023-10-30 12:48:15,503:INFO:               skopt: Not installed
2023-10-30 12:48:15,503:INFO:              mlflow: Not installed
2023-10-30 12:48:15,503:INFO:              gradio: Not installed
2023-10-30 12:48:15,503:INFO:             fastapi: Not installed
2023-10-30 12:48:15,503:INFO:             uvicorn: Not installed
2023-10-30 12:48:15,503:INFO:              m2cgen: Not installed
2023-10-30 12:48:15,503:INFO:           evidently: Not installed
2023-10-30 12:48:15,503:INFO:               fugue: Not installed
2023-10-30 12:48:15,503:INFO:           streamlit: Not installed
2023-10-30 12:48:15,503:INFO:             prophet: Not installed
2023-10-30 12:48:15,503:INFO:None
2023-10-30 12:48:15,503:INFO:Set up data.
2023-10-30 12:48:15,512:INFO:Set up folding strategy.
2023-10-30 12:48:15,513:INFO:Set up train/test split.
2023-10-31 11:14:07,047:INFO:PyCaret ClassificationExperiment
2023-10-31 11:14:07,047:INFO:Logging name: clf-default-name
2023-10-31 11:14:07,047:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-31 11:14:07,047:INFO:version 3.1.0
2023-10-31 11:14:07,047:INFO:Initializing setup()
2023-10-31 11:14:07,048:INFO:self.USI: 65d4
2023-10-31 11:14:07,048:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:14:07,048:INFO:Checking environment
2023-10-31 11:14:07,048:INFO:python_version: 3.10.2
2023-10-31 11:14:07,048:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:14:07,048:INFO:machine: AMD64
2023-10-31 11:14:07,048:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:14:07,056:INFO:Memory: svmem(total=16952647680, available=2516824064, percent=85.2, used=14435823616, free=2516824064)
2023-10-31 11:14:07,057:INFO:Physical Core: 4
2023-10-31 11:14:07,057:INFO:Logical Core: 8
2023-10-31 11:14:07,057:INFO:Checking libraries
2023-10-31 11:14:07,057:INFO:System:
2023-10-31 11:14:07,057:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:14:07,057:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:14:07,057:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:14:07,057:INFO:PyCaret required dependencies:
2023-10-31 11:14:07,058:INFO:                 pip: 23.0.1
2023-10-31 11:14:07,058:INFO:          setuptools: 65.5.0
2023-10-31 11:14:07,058:INFO:             pycaret: 3.1.0
2023-10-31 11:14:07,058:INFO:             IPython: 8.15.0
2023-10-31 11:14:07,058:INFO:          ipywidgets: 8.1.1
2023-10-31 11:14:07,058:INFO:                tqdm: 4.66.1
2023-10-31 11:14:07,058:INFO:               numpy: 1.23.5
2023-10-31 11:14:07,058:INFO:              pandas: 1.5.3
2023-10-31 11:14:07,058:INFO:              jinja2: 3.1.2
2023-10-31 11:14:07,058:INFO:               scipy: 1.10.1
2023-10-31 11:14:07,058:INFO:              joblib: 1.3.2
2023-10-31 11:14:07,058:INFO:             sklearn: 1.2.2
2023-10-31 11:14:07,058:INFO:                pyod: 1.1.0
2023-10-31 11:14:07,058:INFO:            imblearn: 0.11.0
2023-10-31 11:14:07,058:INFO:   category_encoders: 2.6.2
2023-10-31 11:14:07,058:INFO:            lightgbm: 4.1.0
2023-10-31 11:14:07,058:INFO:               numba: 0.58.0
2023-10-31 11:14:07,059:INFO:            requests: 2.31.0
2023-10-31 11:14:07,059:INFO:          matplotlib: 3.8.0
2023-10-31 11:14:07,059:INFO:          scikitplot: 0.3.7
2023-10-31 11:14:07,059:INFO:         yellowbrick: 1.5
2023-10-31 11:14:07,059:INFO:              plotly: 5.17.0
2023-10-31 11:14:07,059:INFO:    plotly-resampler: Not installed
2023-10-31 11:14:07,059:INFO:             kaleido: 0.2.1
2023-10-31 11:14:07,059:INFO:           schemdraw: 0.15
2023-10-31 11:14:07,059:INFO:         statsmodels: 0.14.0
2023-10-31 11:14:07,059:INFO:              sktime: 0.21.1
2023-10-31 11:14:07,059:INFO:               tbats: 1.1.3
2023-10-31 11:14:07,059:INFO:            pmdarima: 2.0.3
2023-10-31 11:14:07,059:INFO:              psutil: 5.9.5
2023-10-31 11:14:07,059:INFO:          markupsafe: 2.1.3
2023-10-31 11:14:07,059:INFO:             pickle5: Not installed
2023-10-31 11:14:07,059:INFO:         cloudpickle: 2.2.1
2023-10-31 11:14:07,059:INFO:         deprecation: 2.1.0
2023-10-31 11:14:07,059:INFO:              xxhash: 3.3.0
2023-10-31 11:14:07,059:INFO:           wurlitzer: Not installed
2023-10-31 11:14:07,059:INFO:PyCaret optional dependencies:
2023-10-31 11:14:07,059:INFO:                shap: Not installed
2023-10-31 11:14:07,059:INFO:           interpret: Not installed
2023-10-31 11:14:07,059:INFO:                umap: Not installed
2023-10-31 11:14:07,059:INFO:     ydata_profiling: Not installed
2023-10-31 11:14:07,059:INFO:  explainerdashboard: Not installed
2023-10-31 11:14:07,059:INFO:             autoviz: Not installed
2023-10-31 11:14:07,059:INFO:           fairlearn: Not installed
2023-10-31 11:14:07,059:INFO:          deepchecks: Not installed
2023-10-31 11:14:07,059:INFO:             xgboost: 2.0.0
2023-10-31 11:14:07,060:INFO:            catboost: Not installed
2023-10-31 11:14:07,060:INFO:              kmodes: Not installed
2023-10-31 11:14:07,060:INFO:             mlxtend: Not installed
2023-10-31 11:14:07,060:INFO:       statsforecast: Not installed
2023-10-31 11:14:07,060:INFO:        tune_sklearn: Not installed
2023-10-31 11:14:07,060:INFO:                 ray: Not installed
2023-10-31 11:14:07,060:INFO:            hyperopt: Not installed
2023-10-31 11:14:07,060:INFO:              optuna: Not installed
2023-10-31 11:14:07,060:INFO:               skopt: Not installed
2023-10-31 11:14:07,060:INFO:              mlflow: Not installed
2023-10-31 11:14:07,060:INFO:              gradio: Not installed
2023-10-31 11:14:07,060:INFO:             fastapi: Not installed
2023-10-31 11:14:07,060:INFO:             uvicorn: Not installed
2023-10-31 11:14:07,060:INFO:              m2cgen: Not installed
2023-10-31 11:14:07,060:INFO:           evidently: Not installed
2023-10-31 11:14:07,060:INFO:               fugue: Not installed
2023-10-31 11:14:07,060:INFO:           streamlit: Not installed
2023-10-31 11:14:07,060:INFO:             prophet: Not installed
2023-10-31 11:14:07,060:INFO:None
2023-10-31 11:14:07,060:INFO:Set up data.
2023-10-31 11:14:07,091:INFO:Set up folding strategy.
2023-10-31 11:14:07,092:INFO:Set up train/test split.
2023-10-31 11:21:02,178:INFO:PyCaret ClassificationExperiment
2023-10-31 11:21:02,178:INFO:Logging name: clf-default-name
2023-10-31 11:21:02,178:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-31 11:21:02,178:INFO:version 3.1.0
2023-10-31 11:21:02,178:INFO:Initializing setup()
2023-10-31 11:21:02,178:INFO:self.USI: e514
2023-10-31 11:21:02,178:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', 'is_multiclass', '_ml_usecase', 'y', 'y_test', 'idx', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'fix_imbalance', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:21:02,178:INFO:Checking environment
2023-10-31 11:21:02,178:INFO:python_version: 3.10.2
2023-10-31 11:21:02,179:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:21:02,179:INFO:machine: AMD64
2023-10-31 11:21:02,179:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:21:02,187:INFO:Memory: svmem(total=16952647680, available=2918481920, percent=82.8, used=14034165760, free=2918481920)
2023-10-31 11:21:02,187:INFO:Physical Core: 4
2023-10-31 11:21:02,187:INFO:Logical Core: 8
2023-10-31 11:21:02,187:INFO:Checking libraries
2023-10-31 11:21:02,187:INFO:System:
2023-10-31 11:21:02,187:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:21:02,187:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:21:02,187:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:21:02,188:INFO:PyCaret required dependencies:
2023-10-31 11:21:02,188:INFO:                 pip: 23.0.1
2023-10-31 11:21:02,188:INFO:          setuptools: 65.5.0
2023-10-31 11:21:02,188:INFO:             pycaret: 3.1.0
2023-10-31 11:21:02,188:INFO:             IPython: 8.15.0
2023-10-31 11:21:02,188:INFO:          ipywidgets: 8.1.1
2023-10-31 11:21:02,188:INFO:                tqdm: 4.66.1
2023-10-31 11:21:02,188:INFO:               numpy: 1.23.5
2023-10-31 11:21:02,188:INFO:              pandas: 1.5.3
2023-10-31 11:21:02,188:INFO:              jinja2: 3.1.2
2023-10-31 11:21:02,188:INFO:               scipy: 1.10.1
2023-10-31 11:21:02,188:INFO:              joblib: 1.3.2
2023-10-31 11:21:02,188:INFO:             sklearn: 1.2.2
2023-10-31 11:21:02,188:INFO:                pyod: 1.1.0
2023-10-31 11:21:02,188:INFO:            imblearn: 0.11.0
2023-10-31 11:21:02,188:INFO:   category_encoders: 2.6.2
2023-10-31 11:21:02,188:INFO:            lightgbm: 4.1.0
2023-10-31 11:21:02,188:INFO:               numba: 0.58.0
2023-10-31 11:21:02,188:INFO:            requests: 2.31.0
2023-10-31 11:21:02,188:INFO:          matplotlib: 3.8.0
2023-10-31 11:21:02,188:INFO:          scikitplot: 0.3.7
2023-10-31 11:21:02,188:INFO:         yellowbrick: 1.5
2023-10-31 11:21:02,188:INFO:              plotly: 5.17.0
2023-10-31 11:21:02,188:INFO:    plotly-resampler: Not installed
2023-10-31 11:21:02,188:INFO:             kaleido: 0.2.1
2023-10-31 11:21:02,188:INFO:           schemdraw: 0.15
2023-10-31 11:21:02,188:INFO:         statsmodels: 0.14.0
2023-10-31 11:21:02,188:INFO:              sktime: 0.21.1
2023-10-31 11:21:02,188:INFO:               tbats: 1.1.3
2023-10-31 11:21:02,188:INFO:            pmdarima: 2.0.3
2023-10-31 11:21:02,189:INFO:              psutil: 5.9.5
2023-10-31 11:21:02,189:INFO:          markupsafe: 2.1.3
2023-10-31 11:21:02,189:INFO:             pickle5: Not installed
2023-10-31 11:21:02,189:INFO:         cloudpickle: 2.2.1
2023-10-31 11:21:02,189:INFO:         deprecation: 2.1.0
2023-10-31 11:21:02,189:INFO:              xxhash: 3.3.0
2023-10-31 11:21:02,189:INFO:           wurlitzer: Not installed
2023-10-31 11:21:02,189:INFO:PyCaret optional dependencies:
2023-10-31 11:21:02,189:INFO:                shap: Not installed
2023-10-31 11:21:02,189:INFO:           interpret: Not installed
2023-10-31 11:21:02,189:INFO:                umap: Not installed
2023-10-31 11:21:02,189:INFO:     ydata_profiling: Not installed
2023-10-31 11:21:02,189:INFO:  explainerdashboard: Not installed
2023-10-31 11:21:02,189:INFO:             autoviz: Not installed
2023-10-31 11:21:02,189:INFO:           fairlearn: Not installed
2023-10-31 11:21:02,189:INFO:          deepchecks: Not installed
2023-10-31 11:21:02,189:INFO:             xgboost: 2.0.0
2023-10-31 11:21:02,189:INFO:            catboost: Not installed
2023-10-31 11:21:02,189:INFO:              kmodes: Not installed
2023-10-31 11:21:02,189:INFO:             mlxtend: Not installed
2023-10-31 11:21:02,189:INFO:       statsforecast: Not installed
2023-10-31 11:21:02,189:INFO:        tune_sklearn: Not installed
2023-10-31 11:21:02,189:INFO:                 ray: Not installed
2023-10-31 11:21:02,189:INFO:            hyperopt: Not installed
2023-10-31 11:21:02,189:INFO:              optuna: Not installed
2023-10-31 11:21:02,189:INFO:               skopt: Not installed
2023-10-31 11:21:02,189:INFO:              mlflow: Not installed
2023-10-31 11:21:02,189:INFO:              gradio: Not installed
2023-10-31 11:21:02,189:INFO:             fastapi: Not installed
2023-10-31 11:21:02,189:INFO:             uvicorn: Not installed
2023-10-31 11:21:02,189:INFO:              m2cgen: Not installed
2023-10-31 11:21:02,189:INFO:           evidently: Not installed
2023-10-31 11:21:02,189:INFO:               fugue: Not installed
2023-10-31 11:21:02,189:INFO:           streamlit: Not installed
2023-10-31 11:21:02,190:INFO:             prophet: Not installed
2023-10-31 11:21:02,190:INFO:None
2023-10-31 11:21:02,190:INFO:Set up data.
2023-10-31 11:21:02,204:INFO:Set up folding strategy.
2023-10-31 11:21:02,204:INFO:Set up train/test split.
2023-10-31 11:21:20,081:INFO:PyCaret RegressionExperiment
2023-10-31 11:21:20,081:INFO:Logging name: reg-default-name
2023-10-31 11:21:20,081:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 11:21:20,082:INFO:version 3.1.0
2023-10-31 11:21:20,082:INFO:Initializing setup()
2023-10-31 11:21:20,082:INFO:self.USI: 1d83
2023-10-31 11:21:20,082:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:21:20,082:INFO:Checking environment
2023-10-31 11:21:20,082:INFO:python_version: 3.10.2
2023-10-31 11:21:20,082:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:21:20,082:INFO:machine: AMD64
2023-10-31 11:21:20,082:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:21:20,087:INFO:Memory: svmem(total=16952647680, available=2940706816, percent=82.7, used=14011940864, free=2940706816)
2023-10-31 11:21:20,087:INFO:Physical Core: 4
2023-10-31 11:21:20,087:INFO:Logical Core: 8
2023-10-31 11:21:20,087:INFO:Checking libraries
2023-10-31 11:21:20,087:INFO:System:
2023-10-31 11:21:20,087:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:21:20,088:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:21:20,088:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:21:20,088:INFO:PyCaret required dependencies:
2023-10-31 11:21:20,088:INFO:                 pip: 23.0.1
2023-10-31 11:21:20,088:INFO:          setuptools: 65.5.0
2023-10-31 11:21:20,088:INFO:             pycaret: 3.1.0
2023-10-31 11:21:20,088:INFO:             IPython: 8.15.0
2023-10-31 11:21:20,088:INFO:          ipywidgets: 8.1.1
2023-10-31 11:21:20,088:INFO:                tqdm: 4.66.1
2023-10-31 11:21:20,088:INFO:               numpy: 1.23.5
2023-10-31 11:21:20,088:INFO:              pandas: 1.5.3
2023-10-31 11:21:20,088:INFO:              jinja2: 3.1.2
2023-10-31 11:21:20,088:INFO:               scipy: 1.10.1
2023-10-31 11:21:20,088:INFO:              joblib: 1.3.2
2023-10-31 11:21:20,088:INFO:             sklearn: 1.2.2
2023-10-31 11:21:20,088:INFO:                pyod: 1.1.0
2023-10-31 11:21:20,088:INFO:            imblearn: 0.11.0
2023-10-31 11:21:20,088:INFO:   category_encoders: 2.6.2
2023-10-31 11:21:20,088:INFO:            lightgbm: 4.1.0
2023-10-31 11:21:20,088:INFO:               numba: 0.58.0
2023-10-31 11:21:20,088:INFO:            requests: 2.31.0
2023-10-31 11:21:20,088:INFO:          matplotlib: 3.8.0
2023-10-31 11:21:20,088:INFO:          scikitplot: 0.3.7
2023-10-31 11:21:20,088:INFO:         yellowbrick: 1.5
2023-10-31 11:21:20,088:INFO:              plotly: 5.17.0
2023-10-31 11:21:20,088:INFO:    plotly-resampler: Not installed
2023-10-31 11:21:20,089:INFO:             kaleido: 0.2.1
2023-10-31 11:21:20,089:INFO:           schemdraw: 0.15
2023-10-31 11:21:20,089:INFO:         statsmodels: 0.14.0
2023-10-31 11:21:20,089:INFO:              sktime: 0.21.1
2023-10-31 11:21:20,089:INFO:               tbats: 1.1.3
2023-10-31 11:21:20,089:INFO:            pmdarima: 2.0.3
2023-10-31 11:21:20,089:INFO:              psutil: 5.9.5
2023-10-31 11:21:20,089:INFO:          markupsafe: 2.1.3
2023-10-31 11:21:20,089:INFO:             pickle5: Not installed
2023-10-31 11:21:20,089:INFO:         cloudpickle: 2.2.1
2023-10-31 11:21:20,089:INFO:         deprecation: 2.1.0
2023-10-31 11:21:20,089:INFO:              xxhash: 3.3.0
2023-10-31 11:21:20,089:INFO:           wurlitzer: Not installed
2023-10-31 11:21:20,089:INFO:PyCaret optional dependencies:
2023-10-31 11:21:20,089:INFO:                shap: Not installed
2023-10-31 11:21:20,089:INFO:           interpret: Not installed
2023-10-31 11:21:20,089:INFO:                umap: Not installed
2023-10-31 11:21:20,089:INFO:     ydata_profiling: Not installed
2023-10-31 11:21:20,089:INFO:  explainerdashboard: Not installed
2023-10-31 11:21:20,089:INFO:             autoviz: Not installed
2023-10-31 11:21:20,089:INFO:           fairlearn: Not installed
2023-10-31 11:21:20,089:INFO:          deepchecks: Not installed
2023-10-31 11:21:20,089:INFO:             xgboost: 2.0.0
2023-10-31 11:21:20,089:INFO:            catboost: Not installed
2023-10-31 11:21:20,089:INFO:              kmodes: Not installed
2023-10-31 11:21:20,089:INFO:             mlxtend: Not installed
2023-10-31 11:21:20,089:INFO:       statsforecast: Not installed
2023-10-31 11:21:20,089:INFO:        tune_sklearn: Not installed
2023-10-31 11:21:20,089:INFO:                 ray: Not installed
2023-10-31 11:21:20,089:INFO:            hyperopt: Not installed
2023-10-31 11:21:20,089:INFO:              optuna: Not installed
2023-10-31 11:21:20,089:INFO:               skopt: Not installed
2023-10-31 11:21:20,089:INFO:              mlflow: Not installed
2023-10-31 11:21:20,089:INFO:              gradio: Not installed
2023-10-31 11:21:20,089:INFO:             fastapi: Not installed
2023-10-31 11:21:20,089:INFO:             uvicorn: Not installed
2023-10-31 11:21:20,089:INFO:              m2cgen: Not installed
2023-10-31 11:21:20,089:INFO:           evidently: Not installed
2023-10-31 11:21:20,089:INFO:               fugue: Not installed
2023-10-31 11:21:20,089:INFO:           streamlit: Not installed
2023-10-31 11:21:20,089:INFO:             prophet: Not installed
2023-10-31 11:21:20,089:INFO:None
2023-10-31 11:21:20,089:INFO:Set up data.
2023-10-31 11:21:20,100:INFO:Set up folding strategy.
2023-10-31 11:21:20,101:INFO:Set up train/test split.
2023-10-31 11:21:20,113:INFO:Set up index.
2023-10-31 11:21:20,113:INFO:Assigning column types.
2023-10-31 11:21:54,056:INFO:PyCaret RegressionExperiment
2023-10-31 11:21:54,056:INFO:Logging name: reg-default-name
2023-10-31 11:21:54,056:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 11:21:54,056:INFO:version 3.1.0
2023-10-31 11:21:54,056:INFO:Initializing setup()
2023-10-31 11:21:54,056:INFO:self.USI: 5609
2023-10-31 11:21:54,056:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:21:54,056:INFO:Checking environment
2023-10-31 11:21:54,056:INFO:python_version: 3.10.2
2023-10-31 11:21:54,056:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:21:54,056:INFO:machine: AMD64
2023-10-31 11:21:54,056:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:21:54,061:INFO:Memory: svmem(total=16952647680, available=2998165504, percent=82.3, used=13954482176, free=2998165504)
2023-10-31 11:21:54,061:INFO:Physical Core: 4
2023-10-31 11:21:54,061:INFO:Logical Core: 8
2023-10-31 11:21:54,061:INFO:Checking libraries
2023-10-31 11:21:54,061:INFO:System:
2023-10-31 11:21:54,062:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:21:54,062:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:21:54,062:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:21:54,062:INFO:PyCaret required dependencies:
2023-10-31 11:21:54,062:INFO:                 pip: 23.0.1
2023-10-31 11:21:54,062:INFO:          setuptools: 65.5.0
2023-10-31 11:21:54,062:INFO:             pycaret: 3.1.0
2023-10-31 11:21:54,062:INFO:             IPython: 8.15.0
2023-10-31 11:21:54,062:INFO:          ipywidgets: 8.1.1
2023-10-31 11:21:54,062:INFO:                tqdm: 4.66.1
2023-10-31 11:21:54,062:INFO:               numpy: 1.23.5
2023-10-31 11:21:54,062:INFO:              pandas: 1.5.3
2023-10-31 11:21:54,062:INFO:              jinja2: 3.1.2
2023-10-31 11:21:54,062:INFO:               scipy: 1.10.1
2023-10-31 11:21:54,062:INFO:              joblib: 1.3.2
2023-10-31 11:21:54,063:INFO:             sklearn: 1.2.2
2023-10-31 11:21:54,063:INFO:                pyod: 1.1.0
2023-10-31 11:21:54,063:INFO:            imblearn: 0.11.0
2023-10-31 11:21:54,063:INFO:   category_encoders: 2.6.2
2023-10-31 11:21:54,063:INFO:            lightgbm: 4.1.0
2023-10-31 11:21:54,063:INFO:               numba: 0.58.0
2023-10-31 11:21:54,063:INFO:            requests: 2.31.0
2023-10-31 11:21:54,063:INFO:          matplotlib: 3.8.0
2023-10-31 11:21:54,063:INFO:          scikitplot: 0.3.7
2023-10-31 11:21:54,063:INFO:         yellowbrick: 1.5
2023-10-31 11:21:54,063:INFO:              plotly: 5.17.0
2023-10-31 11:21:54,063:INFO:    plotly-resampler: Not installed
2023-10-31 11:21:54,063:INFO:             kaleido: 0.2.1
2023-10-31 11:21:54,063:INFO:           schemdraw: 0.15
2023-10-31 11:21:54,063:INFO:         statsmodels: 0.14.0
2023-10-31 11:21:54,063:INFO:              sktime: 0.21.1
2023-10-31 11:21:54,063:INFO:               tbats: 1.1.3
2023-10-31 11:21:54,063:INFO:            pmdarima: 2.0.3
2023-10-31 11:21:54,063:INFO:              psutil: 5.9.5
2023-10-31 11:21:54,063:INFO:          markupsafe: 2.1.3
2023-10-31 11:21:54,063:INFO:             pickle5: Not installed
2023-10-31 11:21:54,063:INFO:         cloudpickle: 2.2.1
2023-10-31 11:21:54,063:INFO:         deprecation: 2.1.0
2023-10-31 11:21:54,064:INFO:              xxhash: 3.3.0
2023-10-31 11:21:54,064:INFO:           wurlitzer: Not installed
2023-10-31 11:21:54,064:INFO:PyCaret optional dependencies:
2023-10-31 11:21:54,064:INFO:                shap: Not installed
2023-10-31 11:21:54,064:INFO:           interpret: Not installed
2023-10-31 11:21:54,064:INFO:                umap: Not installed
2023-10-31 11:21:54,064:INFO:     ydata_profiling: Not installed
2023-10-31 11:21:54,064:INFO:  explainerdashboard: Not installed
2023-10-31 11:21:54,064:INFO:             autoviz: Not installed
2023-10-31 11:21:54,064:INFO:           fairlearn: Not installed
2023-10-31 11:21:54,064:INFO:          deepchecks: Not installed
2023-10-31 11:21:54,064:INFO:             xgboost: 2.0.0
2023-10-31 11:21:54,064:INFO:            catboost: Not installed
2023-10-31 11:21:54,064:INFO:              kmodes: Not installed
2023-10-31 11:21:54,064:INFO:             mlxtend: Not installed
2023-10-31 11:21:54,064:INFO:       statsforecast: Not installed
2023-10-31 11:21:54,065:INFO:        tune_sklearn: Not installed
2023-10-31 11:21:54,065:INFO:                 ray: Not installed
2023-10-31 11:21:54,065:INFO:            hyperopt: Not installed
2023-10-31 11:21:54,065:INFO:              optuna: Not installed
2023-10-31 11:21:54,065:INFO:               skopt: Not installed
2023-10-31 11:21:54,065:INFO:              mlflow: Not installed
2023-10-31 11:21:54,065:INFO:              gradio: Not installed
2023-10-31 11:21:54,065:INFO:             fastapi: Not installed
2023-10-31 11:21:54,065:INFO:             uvicorn: Not installed
2023-10-31 11:21:54,065:INFO:              m2cgen: Not installed
2023-10-31 11:21:54,065:INFO:           evidently: Not installed
2023-10-31 11:21:54,065:INFO:               fugue: Not installed
2023-10-31 11:21:54,065:INFO:           streamlit: Not installed
2023-10-31 11:21:54,066:INFO:             prophet: Not installed
2023-10-31 11:21:54,066:INFO:None
2023-10-31 11:21:54,066:INFO:Set up data.
2023-10-31 11:21:54,073:INFO:Set up folding strategy.
2023-10-31 11:21:54,073:INFO:Set up train/test split.
2023-10-31 11:21:54,079:INFO:Set up index.
2023-10-31 11:21:54,079:INFO:Assigning column types.
2023-10-31 11:21:54,083:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-31 11:21:54,084:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,087:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,186:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,189:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,197:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,242:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,279:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,281:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-31 11:21:54,284:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,288:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,335:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,367:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,373:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,378:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,464:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,466:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-31 11:21:54,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,562:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,571:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,669:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,672:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-31 11:21:54,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,767:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,767:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,827:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,859:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,862:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-31 11:21:54,911:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:54,944:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:54,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:54,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:21:55,028:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:55,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:55,030:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-31 11:21:55,124:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:55,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:55,249:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:55,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:55,272:INFO:Preparing preprocessing pipeline...
2023-10-31 11:21:55,272:INFO:Set up simple imputation.
2023-10-31 11:21:55,280:INFO:Set up encoding of categorical features.
2023-10-31 11:21:55,398:INFO:Finished creating preprocessing pipeline.
2023-10-31 11:21:55,409:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year', 'log_yield',
                                             'log_hectares', 'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=na...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-10-31 11:21:55,410:INFO:Creating final display dataframe.
2023-10-31 11:21:55,645:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 9)
4        Transformed data shape       (15479, 29)
5   Transformed train set shape       (10835, 29)
6    Transformed test set shape        (4644, 29)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              5609
2023-10-31 11:21:55,781:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:55,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:55,875:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:21:55,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:21:55,879:INFO:setup() successfully completed in 1.82s...............
2023-10-31 11:22:45,348:INFO:PyCaret RegressionExperiment
2023-10-31 11:22:45,349:INFO:Logging name: reg-default-name
2023-10-31 11:22:45,349:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 11:22:45,349:INFO:version 3.1.0
2023-10-31 11:22:45,349:INFO:Initializing setup()
2023-10-31 11:22:45,349:INFO:self.USI: e0cf
2023-10-31 11:22:45,349:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:22:45,349:INFO:Checking environment
2023-10-31 11:22:45,349:INFO:python_version: 3.10.2
2023-10-31 11:22:45,349:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:22:45,349:INFO:machine: AMD64
2023-10-31 11:22:45,349:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:22:45,354:INFO:Memory: svmem(total=16952647680, available=2816946176, percent=83.4, used=14135701504, free=2816946176)
2023-10-31 11:22:45,354:INFO:Physical Core: 4
2023-10-31 11:22:45,354:INFO:Logical Core: 8
2023-10-31 11:22:45,354:INFO:Checking libraries
2023-10-31 11:22:45,354:INFO:System:
2023-10-31 11:22:45,354:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:22:45,354:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:22:45,354:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:22:45,355:INFO:PyCaret required dependencies:
2023-10-31 11:22:45,355:INFO:                 pip: 23.0.1
2023-10-31 11:22:45,355:INFO:          setuptools: 65.5.0
2023-10-31 11:22:45,355:INFO:             pycaret: 3.1.0
2023-10-31 11:22:45,355:INFO:             IPython: 8.15.0
2023-10-31 11:22:45,355:INFO:          ipywidgets: 8.1.1
2023-10-31 11:22:45,355:INFO:                tqdm: 4.66.1
2023-10-31 11:22:45,355:INFO:               numpy: 1.23.5
2023-10-31 11:22:45,355:INFO:              pandas: 1.5.3
2023-10-31 11:22:45,355:INFO:              jinja2: 3.1.2
2023-10-31 11:22:45,355:INFO:               scipy: 1.10.1
2023-10-31 11:22:45,356:INFO:              joblib: 1.3.2
2023-10-31 11:22:45,356:INFO:             sklearn: 1.2.2
2023-10-31 11:22:45,356:INFO:                pyod: 1.1.0
2023-10-31 11:22:45,356:INFO:            imblearn: 0.11.0
2023-10-31 11:22:45,356:INFO:   category_encoders: 2.6.2
2023-10-31 11:22:45,356:INFO:            lightgbm: 4.1.0
2023-10-31 11:22:45,356:INFO:               numba: 0.58.0
2023-10-31 11:22:45,356:INFO:            requests: 2.31.0
2023-10-31 11:22:45,356:INFO:          matplotlib: 3.8.0
2023-10-31 11:22:45,356:INFO:          scikitplot: 0.3.7
2023-10-31 11:22:45,356:INFO:         yellowbrick: 1.5
2023-10-31 11:22:45,356:INFO:              plotly: 5.17.0
2023-10-31 11:22:45,356:INFO:    plotly-resampler: Not installed
2023-10-31 11:22:45,356:INFO:             kaleido: 0.2.1
2023-10-31 11:22:45,356:INFO:           schemdraw: 0.15
2023-10-31 11:22:45,356:INFO:         statsmodels: 0.14.0
2023-10-31 11:22:45,356:INFO:              sktime: 0.21.1
2023-10-31 11:22:45,357:INFO:               tbats: 1.1.3
2023-10-31 11:22:45,357:INFO:            pmdarima: 2.0.3
2023-10-31 11:22:45,357:INFO:              psutil: 5.9.5
2023-10-31 11:22:45,357:INFO:          markupsafe: 2.1.3
2023-10-31 11:22:45,357:INFO:             pickle5: Not installed
2023-10-31 11:22:45,357:INFO:         cloudpickle: 2.2.1
2023-10-31 11:22:45,357:INFO:         deprecation: 2.1.0
2023-10-31 11:22:45,357:INFO:              xxhash: 3.3.0
2023-10-31 11:22:45,357:INFO:           wurlitzer: Not installed
2023-10-31 11:22:45,357:INFO:PyCaret optional dependencies:
2023-10-31 11:22:45,357:INFO:                shap: Not installed
2023-10-31 11:22:45,357:INFO:           interpret: Not installed
2023-10-31 11:22:45,357:INFO:                umap: Not installed
2023-10-31 11:22:45,357:INFO:     ydata_profiling: Not installed
2023-10-31 11:22:45,357:INFO:  explainerdashboard: Not installed
2023-10-31 11:22:45,357:INFO:             autoviz: Not installed
2023-10-31 11:22:45,357:INFO:           fairlearn: Not installed
2023-10-31 11:22:45,358:INFO:          deepchecks: Not installed
2023-10-31 11:22:45,358:INFO:             xgboost: 2.0.0
2023-10-31 11:22:45,358:INFO:            catboost: Not installed
2023-10-31 11:22:45,358:INFO:              kmodes: Not installed
2023-10-31 11:22:45,358:INFO:             mlxtend: Not installed
2023-10-31 11:22:45,358:INFO:       statsforecast: Not installed
2023-10-31 11:22:45,358:INFO:        tune_sklearn: Not installed
2023-10-31 11:22:45,358:INFO:                 ray: Not installed
2023-10-31 11:22:45,358:INFO:            hyperopt: Not installed
2023-10-31 11:22:45,358:INFO:              optuna: Not installed
2023-10-31 11:22:45,358:INFO:               skopt: Not installed
2023-10-31 11:22:45,358:INFO:              mlflow: Not installed
2023-10-31 11:22:45,358:INFO:              gradio: Not installed
2023-10-31 11:22:45,358:INFO:             fastapi: Not installed
2023-10-31 11:22:45,358:INFO:             uvicorn: Not installed
2023-10-31 11:22:45,358:INFO:              m2cgen: Not installed
2023-10-31 11:22:45,358:INFO:           evidently: Not installed
2023-10-31 11:22:45,358:INFO:               fugue: Not installed
2023-10-31 11:22:45,358:INFO:           streamlit: Not installed
2023-10-31 11:22:45,359:INFO:             prophet: Not installed
2023-10-31 11:22:45,359:INFO:None
2023-10-31 11:22:45,359:INFO:Set up data.
2023-10-31 11:22:45,367:INFO:Set up folding strategy.
2023-10-31 11:22:45,367:INFO:Set up train/test split.
2023-10-31 11:22:45,371:INFO:Set up index.
2023-10-31 11:22:45,372:INFO:Assigning column types.
2023-10-31 11:22:45,376:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-31 11:22:45,377:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,381:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,385:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,496:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,500:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,503:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,508:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,593:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,595:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-31 11:22:45,599:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,602:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,692:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,699:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,743:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,775:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,777:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-31 11:22:45,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,857:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,866:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,913:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,948:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:45,948:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:45,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:45,951:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-31 11:22:46,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,033:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,115:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,117:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-31 11:22:46,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,195:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:22:46,275:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,278:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-31 11:22:46,356:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,448:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:46,451:INFO:Preparing preprocessing pipeline...
2023-10-31 11:22:46,451:INFO:Set up simple imputation.
2023-10-31 11:22:46,453:INFO:Set up encoding of categorical features.
2023-10-31 11:22:46,544:INFO:Finished creating preprocessing pipeline.
2023-10-31 11:22:46,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year', 'log_yield',
                                             'log_hectares', 'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=na...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-10-31 11:22:46,550:INFO:Creating final display dataframe.
2023-10-31 11:22:46,808:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 9)
4        Transformed data shape       (15479, 29)
5   Transformed train set shape       (10835, 29)
6    Transformed test set shape        (4644, 29)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e0cf
2023-10-31 11:22:46,932:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:46,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:47,038:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:22:47,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:22:47,043:INFO:setup() successfully completed in 1.7s...............
2023-10-31 11:23:33,468:INFO:PyCaret RegressionExperiment
2023-10-31 11:23:33,468:INFO:Logging name: reg-default-name
2023-10-31 11:23:33,468:INFO:ML Usecase: MLUsecase.REGRESSION
2023-10-31 11:23:33,468:INFO:version 3.1.0
2023-10-31 11:23:33,468:INFO:Initializing setup()
2023-10-31 11:23:33,468:INFO:self.USI: 0531
2023-10-31 11:23:33,468:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-10-31 11:23:33,468:INFO:Checking environment
2023-10-31 11:23:33,468:INFO:python_version: 3.10.2
2023-10-31 11:23:33,468:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-10-31 11:23:33,468:INFO:machine: AMD64
2023-10-31 11:23:33,468:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-31 11:23:33,476:INFO:Memory: svmem(total=16952647680, available=2830065664, percent=83.3, used=14122582016, free=2830065664)
2023-10-31 11:23:33,476:INFO:Physical Core: 4
2023-10-31 11:23:33,476:INFO:Logical Core: 8
2023-10-31 11:23:33,476:INFO:Checking libraries
2023-10-31 11:23:33,476:INFO:System:
2023-10-31 11:23:33,476:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-10-31 11:23:33,476:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-10-31 11:23:33,476:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-31 11:23:33,476:INFO:PyCaret required dependencies:
2023-10-31 11:23:33,476:INFO:                 pip: 23.0.1
2023-10-31 11:23:33,476:INFO:          setuptools: 65.5.0
2023-10-31 11:23:33,476:INFO:             pycaret: 3.1.0
2023-10-31 11:23:33,476:INFO:             IPython: 8.15.0
2023-10-31 11:23:33,476:INFO:          ipywidgets: 8.1.1
2023-10-31 11:23:33,476:INFO:                tqdm: 4.66.1
2023-10-31 11:23:33,476:INFO:               numpy: 1.23.5
2023-10-31 11:23:33,476:INFO:              pandas: 1.5.3
2023-10-31 11:23:33,477:INFO:              jinja2: 3.1.2
2023-10-31 11:23:33,477:INFO:               scipy: 1.10.1
2023-10-31 11:23:33,477:INFO:              joblib: 1.3.2
2023-10-31 11:23:33,477:INFO:             sklearn: 1.2.2
2023-10-31 11:23:33,477:INFO:                pyod: 1.1.0
2023-10-31 11:23:33,477:INFO:            imblearn: 0.11.0
2023-10-31 11:23:33,477:INFO:   category_encoders: 2.6.2
2023-10-31 11:23:33,477:INFO:            lightgbm: 4.1.0
2023-10-31 11:23:33,477:INFO:               numba: 0.58.0
2023-10-31 11:23:33,477:INFO:            requests: 2.31.0
2023-10-31 11:23:33,477:INFO:          matplotlib: 3.8.0
2023-10-31 11:23:33,477:INFO:          scikitplot: 0.3.7
2023-10-31 11:23:33,477:INFO:         yellowbrick: 1.5
2023-10-31 11:23:33,477:INFO:              plotly: 5.17.0
2023-10-31 11:23:33,477:INFO:    plotly-resampler: Not installed
2023-10-31 11:23:33,477:INFO:             kaleido: 0.2.1
2023-10-31 11:23:33,477:INFO:           schemdraw: 0.15
2023-10-31 11:23:33,477:INFO:         statsmodels: 0.14.0
2023-10-31 11:23:33,477:INFO:              sktime: 0.21.1
2023-10-31 11:23:33,477:INFO:               tbats: 1.1.3
2023-10-31 11:23:33,477:INFO:            pmdarima: 2.0.3
2023-10-31 11:23:33,477:INFO:              psutil: 5.9.5
2023-10-31 11:23:33,477:INFO:          markupsafe: 2.1.3
2023-10-31 11:23:33,477:INFO:             pickle5: Not installed
2023-10-31 11:23:33,477:INFO:         cloudpickle: 2.2.1
2023-10-31 11:23:33,477:INFO:         deprecation: 2.1.0
2023-10-31 11:23:33,477:INFO:              xxhash: 3.3.0
2023-10-31 11:23:33,477:INFO:           wurlitzer: Not installed
2023-10-31 11:23:33,477:INFO:PyCaret optional dependencies:
2023-10-31 11:23:33,477:INFO:                shap: Not installed
2023-10-31 11:23:33,477:INFO:           interpret: Not installed
2023-10-31 11:23:33,477:INFO:                umap: Not installed
2023-10-31 11:23:33,477:INFO:     ydata_profiling: Not installed
2023-10-31 11:23:33,477:INFO:  explainerdashboard: Not installed
2023-10-31 11:23:33,477:INFO:             autoviz: Not installed
2023-10-31 11:23:33,477:INFO:           fairlearn: Not installed
2023-10-31 11:23:33,477:INFO:          deepchecks: Not installed
2023-10-31 11:23:33,477:INFO:             xgboost: 2.0.0
2023-10-31 11:23:33,477:INFO:            catboost: Not installed
2023-10-31 11:23:33,477:INFO:              kmodes: Not installed
2023-10-31 11:23:33,477:INFO:             mlxtend: Not installed
2023-10-31 11:23:33,477:INFO:       statsforecast: Not installed
2023-10-31 11:23:33,477:INFO:        tune_sklearn: Not installed
2023-10-31 11:23:33,477:INFO:                 ray: Not installed
2023-10-31 11:23:33,477:INFO:            hyperopt: Not installed
2023-10-31 11:23:33,478:INFO:              optuna: Not installed
2023-10-31 11:23:33,478:INFO:               skopt: Not installed
2023-10-31 11:23:33,478:INFO:              mlflow: Not installed
2023-10-31 11:23:33,478:INFO:              gradio: Not installed
2023-10-31 11:23:33,478:INFO:             fastapi: Not installed
2023-10-31 11:23:33,478:INFO:             uvicorn: Not installed
2023-10-31 11:23:33,478:INFO:              m2cgen: Not installed
2023-10-31 11:23:33,478:INFO:           evidently: Not installed
2023-10-31 11:23:33,478:INFO:               fugue: Not installed
2023-10-31 11:23:33,478:INFO:           streamlit: Not installed
2023-10-31 11:23:33,478:INFO:             prophet: Not installed
2023-10-31 11:23:33,478:INFO:None
2023-10-31 11:23:33,478:INFO:Set up data.
2023-10-31 11:23:33,488:INFO:Set up folding strategy.
2023-10-31 11:23:33,488:INFO:Set up train/test split.
2023-10-31 11:23:33,493:INFO:Set up index.
2023-10-31 11:23:33,493:INFO:Assigning column types.
2023-10-31 11:23:33,496:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-31 11:23:33,496:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,500:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,504:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,602:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:33,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:33,605:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,608:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,657:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,693:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:33,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:33,695:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-10-31 11:23:33,699:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,776:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:33,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:33,780:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,784:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,856:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:33,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:33,858:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-10-31 11:23:33,864:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,935:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,935:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:33,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:33,944:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-31 11:23:33,984:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,015:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,017:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-10-31 11:23:34,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,095:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,175:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,178:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-31 11:23:34,238:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,272:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-31 11:23:34,361:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,363:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-10-31 11:23:34,450:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,536:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:34,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:34,541:INFO:Preparing preprocessing pipeline...
2023-10-31 11:23:34,541:INFO:Set up simple imputation.
2023-10-31 11:23:34,546:INFO:Set up encoding of categorical features.
2023-10-31 11:23:34,662:INFO:Finished creating preprocessing pipeline.
2023-10-31 11:23:34,668:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year', 'log_yield',
                                             'log_hectares', 'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=na...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-10-31 11:23:34,668:INFO:Creating final display dataframe.
2023-10-31 11:23:34,916:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 9)
4        Transformed data shape       (15479, 29)
5   Transformed train set shape       (10835, 29)
6    Transformed test set shape        (4644, 29)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              0531
2023-10-31 11:23:35,019:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:35,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:35,110:INFO:Soft dependency imported: xgboost: 2.0.0
2023-10-31 11:23:35,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-31 11:23:35,112:INFO:setup() successfully completed in 1.65s...............
2023-10-31 11:24:17,615:INFO:Initializing compare_models()
2023-10-31 11:24:17,615:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-10-31 11:24:17,615:INFO:Checking exceptions
2023-10-31 11:24:17,619:INFO:Preparing display monitor
2023-10-31 11:24:17,650:INFO:Initializing Linear Regression
2023-10-31 11:24:17,651:INFO:Total runtime is 1.692374547322591e-05 minutes
2023-10-31 11:24:17,654:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:17,654:INFO:Initializing create_model()
2023-10-31 11:24:17,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:17,654:INFO:Checking exceptions
2023-10-31 11:24:17,654:INFO:Importing libraries
2023-10-31 11:24:17,655:INFO:Copying training dataset
2023-10-31 11:24:17,660:INFO:Defining folds
2023-10-31 11:24:17,660:INFO:Declaring metric variables
2023-10-31 11:24:17,663:INFO:Importing untrained model
2023-10-31 11:24:17,665:INFO:Linear Regression Imported successfully
2023-10-31 11:24:17,672:INFO:Starting cross validation
2023-10-31 11:24:17,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:30,659:INFO:Calculating mean and std
2023-10-31 11:24:30,660:INFO:Creating metrics dataframe
2023-10-31 11:24:30,663:INFO:Uploading results into container
2023-10-31 11:24:30,664:INFO:Uploading model into container now
2023-10-31 11:24:30,664:INFO:_master_model_container: 1
2023-10-31 11:24:30,664:INFO:_display_container: 2
2023-10-31 11:24:30,664:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-10-31 11:24:30,664:INFO:create_model() successfully completed......................................
2023-10-31 11:24:30,783:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:30,783:INFO:Creating metrics dataframe
2023-10-31 11:24:30,790:INFO:Initializing Lasso Regression
2023-10-31 11:24:30,790:INFO:Total runtime is 0.2190022627512614 minutes
2023-10-31 11:24:30,794:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:30,794:INFO:Initializing create_model()
2023-10-31 11:24:30,794:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:30,794:INFO:Checking exceptions
2023-10-31 11:24:30,794:INFO:Importing libraries
2023-10-31 11:24:30,794:INFO:Copying training dataset
2023-10-31 11:24:30,804:INFO:Defining folds
2023-10-31 11:24:30,804:INFO:Declaring metric variables
2023-10-31 11:24:30,808:INFO:Importing untrained model
2023-10-31 11:24:30,811:INFO:Lasso Regression Imported successfully
2023-10-31 11:24:30,818:INFO:Starting cross validation
2023-10-31 11:24:30,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:31,207:INFO:Calculating mean and std
2023-10-31 11:24:31,208:INFO:Creating metrics dataframe
2023-10-31 11:24:31,211:INFO:Uploading results into container
2023-10-31 11:24:31,211:INFO:Uploading model into container now
2023-10-31 11:24:31,212:INFO:_master_model_container: 2
2023-10-31 11:24:31,212:INFO:_display_container: 2
2023-10-31 11:24:31,212:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-10-31 11:24:31,213:INFO:create_model() successfully completed......................................
2023-10-31 11:24:31,330:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:31,330:INFO:Creating metrics dataframe
2023-10-31 11:24:31,340:INFO:Initializing Ridge Regression
2023-10-31 11:24:31,341:INFO:Total runtime is 0.22818638086318968 minutes
2023-10-31 11:24:31,343:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:31,344:INFO:Initializing create_model()
2023-10-31 11:24:31,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:31,344:INFO:Checking exceptions
2023-10-31 11:24:31,344:INFO:Importing libraries
2023-10-31 11:24:31,344:INFO:Copying training dataset
2023-10-31 11:24:31,349:INFO:Defining folds
2023-10-31 11:24:31,349:INFO:Declaring metric variables
2023-10-31 11:24:31,353:INFO:Importing untrained model
2023-10-31 11:24:31,358:INFO:Ridge Regression Imported successfully
2023-10-31 11:24:31,365:INFO:Starting cross validation
2023-10-31 11:24:31,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:31,567:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.30624e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,571:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.24297e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,571:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.55396e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,572:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75115e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,577:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.42607e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,580:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.27117e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,687:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.2258e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,688:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.4111e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-10-31 11:24:31,717:INFO:Calculating mean and std
2023-10-31 11:24:31,720:INFO:Creating metrics dataframe
2023-10-31 11:24:31,721:INFO:Uploading results into container
2023-10-31 11:24:31,722:INFO:Uploading model into container now
2023-10-31 11:24:31,722:INFO:_master_model_container: 3
2023-10-31 11:24:31,722:INFO:_display_container: 2
2023-10-31 11:24:31,723:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-10-31 11:24:31,723:INFO:create_model() successfully completed......................................
2023-10-31 11:24:31,836:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:31,836:INFO:Creating metrics dataframe
2023-10-31 11:24:31,844:INFO:Initializing Elastic Net
2023-10-31 11:24:31,844:INFO:Total runtime is 0.23656775554021198 minutes
2023-10-31 11:24:31,847:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:31,847:INFO:Initializing create_model()
2023-10-31 11:24:31,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:31,847:INFO:Checking exceptions
2023-10-31 11:24:31,847:INFO:Importing libraries
2023-10-31 11:24:31,847:INFO:Copying training dataset
2023-10-31 11:24:31,853:INFO:Defining folds
2023-10-31 11:24:31,854:INFO:Declaring metric variables
2023-10-31 11:24:31,857:INFO:Importing untrained model
2023-10-31 11:24:31,861:INFO:Elastic Net Imported successfully
2023-10-31 11:24:31,867:INFO:Starting cross validation
2023-10-31 11:24:31,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:32,212:INFO:Calculating mean and std
2023-10-31 11:24:32,213:INFO:Creating metrics dataframe
2023-10-31 11:24:32,215:INFO:Uploading results into container
2023-10-31 11:24:32,215:INFO:Uploading model into container now
2023-10-31 11:24:32,216:INFO:_master_model_container: 4
2023-10-31 11:24:32,216:INFO:_display_container: 2
2023-10-31 11:24:32,216:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-10-31 11:24:32,216:INFO:create_model() successfully completed......................................
2023-10-31 11:24:32,327:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:32,327:INFO:Creating metrics dataframe
2023-10-31 11:24:32,334:INFO:Initializing Least Angle Regression
2023-10-31 11:24:32,334:INFO:Total runtime is 0.24473691383997598 minutes
2023-10-31 11:24:32,340:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:32,340:INFO:Initializing create_model()
2023-10-31 11:24:32,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:32,340:INFO:Checking exceptions
2023-10-31 11:24:32,340:INFO:Importing libraries
2023-10-31 11:24:32,340:INFO:Copying training dataset
2023-10-31 11:24:32,344:INFO:Defining folds
2023-10-31 11:24:32,344:INFO:Declaring metric variables
2023-10-31 11:24:32,347:INFO:Importing untrained model
2023-10-31 11:24:32,352:INFO:Least Angle Regression Imported successfully
2023-10-31 11:24:32,361:INFO:Starting cross validation
2023-10-31 11:24:32,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:32,687:INFO:Calculating mean and std
2023-10-31 11:24:32,688:INFO:Creating metrics dataframe
2023-10-31 11:24:32,692:INFO:Uploading results into container
2023-10-31 11:24:32,693:INFO:Uploading model into container now
2023-10-31 11:24:32,694:INFO:_master_model_container: 5
2023-10-31 11:24:32,694:INFO:_display_container: 2
2023-10-31 11:24:32,696:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-10-31 11:24:32,696:INFO:create_model() successfully completed......................................
2023-10-31 11:24:32,817:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:32,818:INFO:Creating metrics dataframe
2023-10-31 11:24:32,828:INFO:Initializing Lasso Least Angle Regression
2023-10-31 11:24:32,828:INFO:Total runtime is 0.2529658834139506 minutes
2023-10-31 11:24:32,832:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:32,832:INFO:Initializing create_model()
2023-10-31 11:24:32,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:32,832:INFO:Checking exceptions
2023-10-31 11:24:32,832:INFO:Importing libraries
2023-10-31 11:24:32,832:INFO:Copying training dataset
2023-10-31 11:24:32,839:INFO:Defining folds
2023-10-31 11:24:32,839:INFO:Declaring metric variables
2023-10-31 11:24:32,841:INFO:Importing untrained model
2023-10-31 11:24:32,846:INFO:Lasso Least Angle Regression Imported successfully
2023-10-31 11:24:32,851:INFO:Starting cross validation
2023-10-31 11:24:32,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:33,197:INFO:Calculating mean and std
2023-10-31 11:24:33,197:INFO:Creating metrics dataframe
2023-10-31 11:24:33,199:INFO:Uploading results into container
2023-10-31 11:24:33,200:INFO:Uploading model into container now
2023-10-31 11:24:33,200:INFO:_master_model_container: 6
2023-10-31 11:24:33,200:INFO:_display_container: 2
2023-10-31 11:24:33,201:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-10-31 11:24:33,201:INFO:create_model() successfully completed......................................
2023-10-31 11:24:33,322:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:33,322:INFO:Creating metrics dataframe
2023-10-31 11:24:33,331:INFO:Initializing Orthogonal Matching Pursuit
2023-10-31 11:24:33,331:INFO:Total runtime is 0.26134683688481647 minutes
2023-10-31 11:24:33,335:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:33,335:INFO:Initializing create_model()
2023-10-31 11:24:33,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:33,336:INFO:Checking exceptions
2023-10-31 11:24:33,336:INFO:Importing libraries
2023-10-31 11:24:33,336:INFO:Copying training dataset
2023-10-31 11:24:33,348:INFO:Defining folds
2023-10-31 11:24:33,348:INFO:Declaring metric variables
2023-10-31 11:24:33,353:INFO:Importing untrained model
2023-10-31 11:24:33,359:INFO:Orthogonal Matching Pursuit Imported successfully
2023-10-31 11:24:33,370:INFO:Starting cross validation
2023-10-31 11:24:33,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:33,743:INFO:Calculating mean and std
2023-10-31 11:24:33,744:INFO:Creating metrics dataframe
2023-10-31 11:24:33,747:INFO:Uploading results into container
2023-10-31 11:24:33,747:INFO:Uploading model into container now
2023-10-31 11:24:33,747:INFO:_master_model_container: 7
2023-10-31 11:24:33,747:INFO:_display_container: 2
2023-10-31 11:24:33,747:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-10-31 11:24:33,747:INFO:create_model() successfully completed......................................
2023-10-31 11:24:33,853:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:33,854:INFO:Creating metrics dataframe
2023-10-31 11:24:33,863:INFO:Initializing Bayesian Ridge
2023-10-31 11:24:33,863:INFO:Total runtime is 0.27021054426829016 minutes
2023-10-31 11:24:33,866:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:33,866:INFO:Initializing create_model()
2023-10-31 11:24:33,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:33,866:INFO:Checking exceptions
2023-10-31 11:24:33,866:INFO:Importing libraries
2023-10-31 11:24:33,866:INFO:Copying training dataset
2023-10-31 11:24:33,873:INFO:Defining folds
2023-10-31 11:24:33,873:INFO:Declaring metric variables
2023-10-31 11:24:33,879:INFO:Importing untrained model
2023-10-31 11:24:33,884:INFO:Bayesian Ridge Imported successfully
2023-10-31 11:24:33,893:INFO:Starting cross validation
2023-10-31 11:24:33,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:34,230:INFO:Calculating mean and std
2023-10-31 11:24:34,231:INFO:Creating metrics dataframe
2023-10-31 11:24:34,233:INFO:Uploading results into container
2023-10-31 11:24:34,234:INFO:Uploading model into container now
2023-10-31 11:24:34,234:INFO:_master_model_container: 8
2023-10-31 11:24:34,234:INFO:_display_container: 2
2023-10-31 11:24:34,235:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-10-31 11:24:34,235:INFO:create_model() successfully completed......................................
2023-10-31 11:24:34,343:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:34,343:INFO:Creating metrics dataframe
2023-10-31 11:24:34,355:INFO:Initializing Passive Aggressive Regressor
2023-10-31 11:24:34,355:INFO:Total runtime is 0.27841398318608596 minutes
2023-10-31 11:24:34,358:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:34,359:INFO:Initializing create_model()
2023-10-31 11:24:34,359:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:34,359:INFO:Checking exceptions
2023-10-31 11:24:34,359:INFO:Importing libraries
2023-10-31 11:24:34,359:INFO:Copying training dataset
2023-10-31 11:24:34,364:INFO:Defining folds
2023-10-31 11:24:34,364:INFO:Declaring metric variables
2023-10-31 11:24:34,367:INFO:Importing untrained model
2023-10-31 11:24:34,371:INFO:Passive Aggressive Regressor Imported successfully
2023-10-31 11:24:34,376:INFO:Starting cross validation
2023-10-31 11:24:34,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:34,733:INFO:Calculating mean and std
2023-10-31 11:24:34,734:INFO:Creating metrics dataframe
2023-10-31 11:24:34,738:INFO:Uploading results into container
2023-10-31 11:24:34,738:INFO:Uploading model into container now
2023-10-31 11:24:34,739:INFO:_master_model_container: 9
2023-10-31 11:24:34,739:INFO:_display_container: 2
2023-10-31 11:24:34,739:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-31 11:24:34,739:INFO:create_model() successfully completed......................................
2023-10-31 11:24:34,844:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:34,844:INFO:Creating metrics dataframe
2023-10-31 11:24:34,854:INFO:Initializing Huber Regressor
2023-10-31 11:24:34,855:INFO:Total runtime is 0.2867424368858337 minutes
2023-10-31 11:24:34,858:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:34,858:INFO:Initializing create_model()
2023-10-31 11:24:34,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:34,859:INFO:Checking exceptions
2023-10-31 11:24:34,859:INFO:Importing libraries
2023-10-31 11:24:34,859:INFO:Copying training dataset
2023-10-31 11:24:34,863:INFO:Defining folds
2023-10-31 11:24:34,864:INFO:Declaring metric variables
2023-10-31 11:24:34,867:INFO:Importing untrained model
2023-10-31 11:24:34,872:INFO:Huber Regressor Imported successfully
2023-10-31 11:24:34,877:INFO:Starting cross validation
2023-10-31 11:24:34,879:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:35,651:INFO:Calculating mean and std
2023-10-31 11:24:35,654:INFO:Creating metrics dataframe
2023-10-31 11:24:35,656:INFO:Uploading results into container
2023-10-31 11:24:35,656:INFO:Uploading model into container now
2023-10-31 11:24:35,656:INFO:_master_model_container: 10
2023-10-31 11:24:35,657:INFO:_display_container: 2
2023-10-31 11:24:35,657:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-10-31 11:24:35,657:INFO:create_model() successfully completed......................................
2023-10-31 11:24:35,772:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:35,773:INFO:Creating metrics dataframe
2023-10-31 11:24:35,784:INFO:Initializing K Neighbors Regressor
2023-10-31 11:24:35,784:INFO:Total runtime is 0.3022303700447082 minutes
2023-10-31 11:24:35,790:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:35,790:INFO:Initializing create_model()
2023-10-31 11:24:35,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:35,790:INFO:Checking exceptions
2023-10-31 11:24:35,790:INFO:Importing libraries
2023-10-31 11:24:35,790:INFO:Copying training dataset
2023-10-31 11:24:35,798:INFO:Defining folds
2023-10-31 11:24:35,798:INFO:Declaring metric variables
2023-10-31 11:24:35,804:INFO:Importing untrained model
2023-10-31 11:24:35,808:INFO:K Neighbors Regressor Imported successfully
2023-10-31 11:24:35,815:INFO:Starting cross validation
2023-10-31 11:24:35,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:36,296:INFO:Calculating mean and std
2023-10-31 11:24:36,297:INFO:Creating metrics dataframe
2023-10-31 11:24:36,299:INFO:Uploading results into container
2023-10-31 11:24:36,300:INFO:Uploading model into container now
2023-10-31 11:24:36,300:INFO:_master_model_container: 11
2023-10-31 11:24:36,300:INFO:_display_container: 2
2023-10-31 11:24:36,300:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-10-31 11:24:36,301:INFO:create_model() successfully completed......................................
2023-10-31 11:24:36,420:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:36,421:INFO:Creating metrics dataframe
2023-10-31 11:24:36,436:INFO:Initializing Decision Tree Regressor
2023-10-31 11:24:36,437:INFO:Total runtime is 0.3131193359692891 minutes
2023-10-31 11:24:36,442:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:36,442:INFO:Initializing create_model()
2023-10-31 11:24:36,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:36,443:INFO:Checking exceptions
2023-10-31 11:24:36,443:INFO:Importing libraries
2023-10-31 11:24:36,443:INFO:Copying training dataset
2023-10-31 11:24:36,451:INFO:Defining folds
2023-10-31 11:24:36,451:INFO:Declaring metric variables
2023-10-31 11:24:36,457:INFO:Importing untrained model
2023-10-31 11:24:36,462:INFO:Decision Tree Regressor Imported successfully
2023-10-31 11:24:36,470:INFO:Starting cross validation
2023-10-31 11:24:36,471:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:37,002:INFO:Calculating mean and std
2023-10-31 11:24:37,004:INFO:Creating metrics dataframe
2023-10-31 11:24:37,006:INFO:Uploading results into container
2023-10-31 11:24:37,007:INFO:Uploading model into container now
2023-10-31 11:24:37,007:INFO:_master_model_container: 12
2023-10-31 11:24:37,008:INFO:_display_container: 2
2023-10-31 11:24:37,008:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-10-31 11:24:37,008:INFO:create_model() successfully completed......................................
2023-10-31 11:24:37,128:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:37,129:INFO:Creating metrics dataframe
2023-10-31 11:24:37,139:INFO:Initializing Random Forest Regressor
2023-10-31 11:24:37,139:INFO:Total runtime is 0.32481536070505773 minutes
2023-10-31 11:24:37,143:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:37,144:INFO:Initializing create_model()
2023-10-31 11:24:37,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:37,144:INFO:Checking exceptions
2023-10-31 11:24:37,144:INFO:Importing libraries
2023-10-31 11:24:37,144:INFO:Copying training dataset
2023-10-31 11:24:37,152:INFO:Defining folds
2023-10-31 11:24:37,152:INFO:Declaring metric variables
2023-10-31 11:24:37,157:INFO:Importing untrained model
2023-10-31 11:24:37,160:INFO:Random Forest Regressor Imported successfully
2023-10-31 11:24:37,168:INFO:Starting cross validation
2023-10-31 11:24:37,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:48,669:INFO:Calculating mean and std
2023-10-31 11:24:48,671:INFO:Creating metrics dataframe
2023-10-31 11:24:48,676:INFO:Uploading results into container
2023-10-31 11:24:48,676:INFO:Uploading model into container now
2023-10-31 11:24:48,677:INFO:_master_model_container: 13
2023-10-31 11:24:48,677:INFO:_display_container: 2
2023-10-31 11:24:48,677:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-10-31 11:24:48,677:INFO:create_model() successfully completed......................................
2023-10-31 11:24:48,847:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:48,847:INFO:Creating metrics dataframe
2023-10-31 11:24:48,861:INFO:Initializing Extra Trees Regressor
2023-10-31 11:24:48,861:INFO:Total runtime is 0.5201802730560302 minutes
2023-10-31 11:24:48,864:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:48,864:INFO:Initializing create_model()
2023-10-31 11:24:48,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:48,864:INFO:Checking exceptions
2023-10-31 11:24:48,864:INFO:Importing libraries
2023-10-31 11:24:48,864:INFO:Copying training dataset
2023-10-31 11:24:48,874:INFO:Defining folds
2023-10-31 11:24:48,874:INFO:Declaring metric variables
2023-10-31 11:24:48,877:INFO:Importing untrained model
2023-10-31 11:24:48,882:INFO:Extra Trees Regressor Imported successfully
2023-10-31 11:24:48,891:INFO:Starting cross validation
2023-10-31 11:24:48,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:53,956:INFO:Calculating mean and std
2023-10-31 11:24:53,957:INFO:Creating metrics dataframe
2023-10-31 11:24:53,961:INFO:Uploading results into container
2023-10-31 11:24:53,962:INFO:Uploading model into container now
2023-10-31 11:24:53,963:INFO:_master_model_container: 14
2023-10-31 11:24:53,963:INFO:_display_container: 2
2023-10-31 11:24:53,963:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-10-31 11:24:53,963:INFO:create_model() successfully completed......................................
2023-10-31 11:24:54,087:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:54,087:INFO:Creating metrics dataframe
2023-10-31 11:24:54,096:INFO:Initializing AdaBoost Regressor
2023-10-31 11:24:54,096:INFO:Total runtime is 0.6074243783950805 minutes
2023-10-31 11:24:54,099:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:54,100:INFO:Initializing create_model()
2023-10-31 11:24:54,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:54,100:INFO:Checking exceptions
2023-10-31 11:24:54,100:INFO:Importing libraries
2023-10-31 11:24:54,100:INFO:Copying training dataset
2023-10-31 11:24:54,106:INFO:Defining folds
2023-10-31 11:24:54,107:INFO:Declaring metric variables
2023-10-31 11:24:54,112:INFO:Importing untrained model
2023-10-31 11:24:54,114:INFO:AdaBoost Regressor Imported successfully
2023-10-31 11:24:54,121:INFO:Starting cross validation
2023-10-31 11:24:54,122:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:24:56,362:INFO:Calculating mean and std
2023-10-31 11:24:56,363:INFO:Creating metrics dataframe
2023-10-31 11:24:56,367:INFO:Uploading results into container
2023-10-31 11:24:56,368:INFO:Uploading model into container now
2023-10-31 11:24:56,369:INFO:_master_model_container: 15
2023-10-31 11:24:56,369:INFO:_display_container: 2
2023-10-31 11:24:56,369:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-10-31 11:24:56,370:INFO:create_model() successfully completed......................................
2023-10-31 11:24:56,483:INFO:SubProcess create_model() end ==================================
2023-10-31 11:24:56,483:INFO:Creating metrics dataframe
2023-10-31 11:24:56,496:INFO:Initializing Gradient Boosting Regressor
2023-10-31 11:24:56,496:INFO:Total runtime is 0.6474290211995442 minutes
2023-10-31 11:24:56,500:INFO:SubProcess create_model() called ==================================
2023-10-31 11:24:56,500:INFO:Initializing create_model()
2023-10-31 11:24:56,500:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:24:56,500:INFO:Checking exceptions
2023-10-31 11:24:56,500:INFO:Importing libraries
2023-10-31 11:24:56,500:INFO:Copying training dataset
2023-10-31 11:24:56,507:INFO:Defining folds
2023-10-31 11:24:56,507:INFO:Declaring metric variables
2023-10-31 11:24:56,511:INFO:Importing untrained model
2023-10-31 11:24:56,513:INFO:Gradient Boosting Regressor Imported successfully
2023-10-31 11:24:56,520:INFO:Starting cross validation
2023-10-31 11:24:56,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:25:03,117:INFO:Calculating mean and std
2023-10-31 11:25:03,119:INFO:Creating metrics dataframe
2023-10-31 11:25:03,122:INFO:Uploading results into container
2023-10-31 11:25:03,123:INFO:Uploading model into container now
2023-10-31 11:25:03,123:INFO:_master_model_container: 16
2023-10-31 11:25:03,123:INFO:_display_container: 2
2023-10-31 11:25:03,124:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-10-31 11:25:03,124:INFO:create_model() successfully completed......................................
2023-10-31 11:25:03,231:INFO:SubProcess create_model() end ==================================
2023-10-31 11:25:03,231:INFO:Creating metrics dataframe
2023-10-31 11:25:03,243:INFO:Initializing Extreme Gradient Boosting
2023-10-31 11:25:03,243:INFO:Total runtime is 0.7598868330319721 minutes
2023-10-31 11:25:03,246:INFO:SubProcess create_model() called ==================================
2023-10-31 11:25:03,246:INFO:Initializing create_model()
2023-10-31 11:25:03,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:25:03,246:INFO:Checking exceptions
2023-10-31 11:25:03,246:INFO:Importing libraries
2023-10-31 11:25:03,246:INFO:Copying training dataset
2023-10-31 11:25:03,253:INFO:Defining folds
2023-10-31 11:25:03,253:INFO:Declaring metric variables
2023-10-31 11:25:03,256:INFO:Importing untrained model
2023-10-31 11:25:03,260:INFO:Extreme Gradient Boosting Imported successfully
2023-10-31 11:25:03,268:INFO:Starting cross validation
2023-10-31 11:25:03,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:25:04,389:INFO:Calculating mean and std
2023-10-31 11:25:04,390:INFO:Creating metrics dataframe
2023-10-31 11:25:04,393:INFO:Uploading results into container
2023-10-31 11:25:04,394:INFO:Uploading model into container now
2023-10-31 11:25:04,394:INFO:_master_model_container: 17
2023-10-31 11:25:04,394:INFO:_display_container: 2
2023-10-31 11:25:04,395:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-10-31 11:25:04,395:INFO:create_model() successfully completed......................................
2023-10-31 11:25:04,506:INFO:SubProcess create_model() end ==================================
2023-10-31 11:25:04,506:INFO:Creating metrics dataframe
2023-10-31 11:25:04,518:INFO:Initializing Light Gradient Boosting Machine
2023-10-31 11:25:04,518:INFO:Total runtime is 0.7811367670694985 minutes
2023-10-31 11:25:04,522:INFO:SubProcess create_model() called ==================================
2023-10-31 11:25:04,523:INFO:Initializing create_model()
2023-10-31 11:25:04,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:25:04,523:INFO:Checking exceptions
2023-10-31 11:25:04,523:INFO:Importing libraries
2023-10-31 11:25:04,523:INFO:Copying training dataset
2023-10-31 11:25:04,530:INFO:Defining folds
2023-10-31 11:25:04,530:INFO:Declaring metric variables
2023-10-31 11:25:04,536:INFO:Importing untrained model
2023-10-31 11:25:04,540:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-31 11:25:04,547:INFO:Starting cross validation
2023-10-31 11:25:04,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:25:05,650:INFO:Calculating mean and std
2023-10-31 11:25:05,652:INFO:Creating metrics dataframe
2023-10-31 11:25:05,655:INFO:Uploading results into container
2023-10-31 11:25:05,656:INFO:Uploading model into container now
2023-10-31 11:25:05,656:INFO:_master_model_container: 18
2023-10-31 11:25:05,656:INFO:_display_container: 2
2023-10-31 11:25:05,657:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-10-31 11:25:05,657:INFO:create_model() successfully completed......................................
2023-10-31 11:25:05,787:INFO:SubProcess create_model() end ==================================
2023-10-31 11:25:05,787:INFO:Creating metrics dataframe
2023-10-31 11:25:05,798:INFO:Initializing Dummy Regressor
2023-10-31 11:25:05,799:INFO:Total runtime is 0.8024864355723061 minutes
2023-10-31 11:25:05,802:INFO:SubProcess create_model() called ==================================
2023-10-31 11:25:05,803:INFO:Initializing create_model()
2023-10-31 11:25:05,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFA7F4F40>, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:25:05,803:INFO:Checking exceptions
2023-10-31 11:25:05,803:INFO:Importing libraries
2023-10-31 11:25:05,803:INFO:Copying training dataset
2023-10-31 11:25:05,810:INFO:Defining folds
2023-10-31 11:25:05,810:INFO:Declaring metric variables
2023-10-31 11:25:05,813:INFO:Importing untrained model
2023-10-31 11:25:05,818:INFO:Dummy Regressor Imported successfully
2023-10-31 11:25:05,825:INFO:Starting cross validation
2023-10-31 11:25:05,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-31 11:25:06,140:INFO:Calculating mean and std
2023-10-31 11:25:06,141:INFO:Creating metrics dataframe
2023-10-31 11:25:06,144:INFO:Uploading results into container
2023-10-31 11:25:06,144:INFO:Uploading model into container now
2023-10-31 11:25:06,145:INFO:_master_model_container: 19
2023-10-31 11:25:06,145:INFO:_display_container: 2
2023-10-31 11:25:06,145:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-10-31 11:25:06,145:INFO:create_model() successfully completed......................................
2023-10-31 11:25:06,272:INFO:SubProcess create_model() end ==================================
2023-10-31 11:25:06,273:INFO:Creating metrics dataframe
2023-10-31 11:25:06,295:INFO:Initializing create_model()
2023-10-31 11:25:06,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-31 11:25:06,295:INFO:Checking exceptions
2023-10-31 11:25:06,296:INFO:Importing libraries
2023-10-31 11:25:06,296:INFO:Copying training dataset
2023-10-31 11:25:06,302:INFO:Defining folds
2023-10-31 11:25:06,302:INFO:Declaring metric variables
2023-10-31 11:25:06,302:INFO:Importing untrained model
2023-10-31 11:25:06,302:INFO:Declaring custom model
2023-10-31 11:25:06,303:INFO:Decision Tree Regressor Imported successfully
2023-10-31 11:25:06,305:INFO:Cross validation set to False
2023-10-31 11:25:06,305:INFO:Fitting Model
2023-10-31 11:25:06,452:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-10-31 11:25:06,452:INFO:create_model() successfully completed......................................
2023-10-31 11:25:06,585:INFO:_master_model_container: 19
2023-10-31 11:25:06,585:INFO:_display_container: 2
2023-10-31 11:25:06,585:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-10-31 11:25:06,585:INFO:compare_models() successfully completed......................................
2023-10-31 11:40:37,040:INFO:Initializing evaluate_model()
2023-10-31 11:40:37,040:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-10-31 11:40:37,056:INFO:Initializing plot_model()
2023-10-31 11:40:37,056:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 11:40:37,056:INFO:Checking exceptions
2023-10-31 11:40:37,060:INFO:Preloading libraries
2023-10-31 11:40:37,061:INFO:Copying training dataset
2023-10-31 11:40:37,061:INFO:Plot type: pipeline
2023-10-31 11:40:37,217:INFO:Visual Rendered Successfully
2023-10-31 11:40:37,354:INFO:plot_model() successfully completed......................................
2023-10-31 11:40:42,235:INFO:Initializing plot_model()
2023-10-31 11:40:42,235:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 11:40:42,236:INFO:Checking exceptions
2023-10-31 11:40:42,238:INFO:Preloading libraries
2023-10-31 11:40:42,239:INFO:Copying training dataset
2023-10-31 11:40:42,240:INFO:Plot type: rfe
2023-10-31 11:40:42,460:INFO:Fitting Model
2023-10-31 13:02:35,338:INFO:Visual Rendered Successfully
2023-10-31 13:02:35,441:INFO:plot_model() successfully completed......................................
2023-10-31 13:02:35,928:INFO:Initializing plot_model()
2023-10-31 13:02:35,929:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 13:02:35,929:INFO:Checking exceptions
2023-10-31 13:02:35,932:INFO:Preloading libraries
2023-10-31 13:02:35,934:INFO:Copying training dataset
2023-10-31 13:02:35,934:INFO:Plot type: feature
2023-10-31 13:02:35,934:WARNING:No coef_ found. Trying feature_importances_
2023-10-31 13:02:36,089:INFO:Visual Rendered Successfully
2023-10-31 13:02:36,190:INFO:plot_model() successfully completed......................................
2023-10-31 13:03:15,801:INFO:Initializing plot_model()
2023-10-31 13:03:15,801:INFO:plot_model(plot=cooks, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 13:03:15,801:INFO:Checking exceptions
2023-10-31 13:03:15,803:INFO:Preloading libraries
2023-10-31 13:03:15,804:INFO:Copying training dataset
2023-10-31 13:03:15,804:INFO:Plot type: cooks
2023-10-31 13:03:16,057:INFO:Fitting Model
2023-10-31 13:03:21,905:INFO:Initializing plot_model()
2023-10-31 13:03:21,905:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 13:03:21,905:INFO:Checking exceptions
2023-10-31 13:03:21,910:INFO:Preloading libraries
2023-10-31 13:03:21,911:INFO:Copying training dataset
2023-10-31 13:03:21,911:INFO:Plot type: rfe
2023-10-31 13:03:22,100:INFO:Fitting Model
2023-10-31 13:07:03,871:INFO:Visual Rendered Successfully
2023-10-31 13:07:04,036:INFO:plot_model() successfully completed......................................
2023-10-31 13:07:04,102:INFO:Initializing plot_model()
2023-10-31 13:07:04,102:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE83BE20>, system=True)
2023-10-31 13:07:04,102:INFO:Checking exceptions
2023-10-31 13:07:04,106:INFO:Preloading libraries
2023-10-31 13:07:04,107:INFO:Copying training dataset
2023-10-31 13:07:04,107:INFO:Plot type: feature
2023-10-31 13:07:04,108:WARNING:No coef_ found. Trying feature_importances_
2023-10-31 13:07:04,321:INFO:Visual Rendered Successfully
2023-10-31 13:07:04,469:INFO:plot_model() successfully completed......................................
2023-11-02 14:13:50,782:INFO:PyCaret RegressionExperiment
2023-11-02 14:13:50,782:INFO:Logging name: reg-default-name
2023-11-02 14:13:50,782:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 14:13:50,782:INFO:version 3.1.0
2023-11-02 14:13:50,782:INFO:Initializing setup()
2023-11-02 14:13:50,782:INFO:self.USI: f9a9
2023-11-02 14:13:50,782:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 14:13:50,782:INFO:Checking environment
2023-11-02 14:13:50,782:INFO:python_version: 3.10.2
2023-11-02 14:13:50,782:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:13:50,782:INFO:machine: AMD64
2023-11-02 14:13:50,782:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:13:50,785:INFO:Memory: svmem(total=16952647680, available=2271952896, percent=86.6, used=14680694784, free=2271952896)
2023-11-02 14:13:50,785:INFO:Physical Core: 4
2023-11-02 14:13:50,785:INFO:Logical Core: 8
2023-11-02 14:13:50,785:INFO:Checking libraries
2023-11-02 14:13:50,785:INFO:System:
2023-11-02 14:13:50,785:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:13:50,786:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:13:50,786:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:13:50,786:INFO:PyCaret required dependencies:
2023-11-02 14:13:50,786:INFO:                 pip: 23.0.1
2023-11-02 14:13:50,786:INFO:          setuptools: 65.5.0
2023-11-02 14:13:50,786:INFO:             pycaret: 3.1.0
2023-11-02 14:13:50,786:INFO:             IPython: 8.15.0
2023-11-02 14:13:50,786:INFO:          ipywidgets: 8.1.1
2023-11-02 14:13:50,786:INFO:                tqdm: 4.66.1
2023-11-02 14:13:50,786:INFO:               numpy: 1.23.5
2023-11-02 14:13:50,786:INFO:              pandas: 1.5.3
2023-11-02 14:13:50,786:INFO:              jinja2: 3.1.2
2023-11-02 14:13:50,786:INFO:               scipy: 1.10.1
2023-11-02 14:13:50,786:INFO:              joblib: 1.3.2
2023-11-02 14:13:50,786:INFO:             sklearn: 1.2.2
2023-11-02 14:13:50,786:INFO:                pyod: 1.1.0
2023-11-02 14:13:50,786:INFO:            imblearn: 0.11.0
2023-11-02 14:13:50,786:INFO:   category_encoders: 2.6.2
2023-11-02 14:13:50,786:INFO:            lightgbm: 4.1.0
2023-11-02 14:13:50,786:INFO:               numba: 0.58.0
2023-11-02 14:13:50,786:INFO:            requests: 2.31.0
2023-11-02 14:13:50,786:INFO:          matplotlib: 3.8.0
2023-11-02 14:13:50,786:INFO:          scikitplot: 0.3.7
2023-11-02 14:13:50,786:INFO:         yellowbrick: 1.5
2023-11-02 14:13:50,786:INFO:              plotly: 5.17.0
2023-11-02 14:13:50,786:INFO:    plotly-resampler: Not installed
2023-11-02 14:13:50,786:INFO:             kaleido: 0.2.1
2023-11-02 14:13:50,786:INFO:           schemdraw: 0.15
2023-11-02 14:13:50,786:INFO:         statsmodels: 0.14.0
2023-11-02 14:13:50,786:INFO:              sktime: 0.21.1
2023-11-02 14:13:50,786:INFO:               tbats: 1.1.3
2023-11-02 14:13:50,786:INFO:            pmdarima: 2.0.3
2023-11-02 14:13:50,786:INFO:              psutil: 5.9.5
2023-11-02 14:13:50,786:INFO:          markupsafe: 2.1.3
2023-11-02 14:13:50,786:INFO:             pickle5: Not installed
2023-11-02 14:13:50,786:INFO:         cloudpickle: 2.2.1
2023-11-02 14:13:50,787:INFO:         deprecation: 2.1.0
2023-11-02 14:13:50,787:INFO:              xxhash: 3.3.0
2023-11-02 14:13:50,787:INFO:           wurlitzer: Not installed
2023-11-02 14:13:50,787:INFO:PyCaret optional dependencies:
2023-11-02 14:13:50,787:INFO:                shap: Not installed
2023-11-02 14:13:50,787:INFO:           interpret: Not installed
2023-11-02 14:13:50,787:INFO:                umap: Not installed
2023-11-02 14:13:50,787:INFO:     ydata_profiling: Not installed
2023-11-02 14:13:50,787:INFO:  explainerdashboard: Not installed
2023-11-02 14:13:50,787:INFO:             autoviz: Not installed
2023-11-02 14:13:50,787:INFO:           fairlearn: Not installed
2023-11-02 14:13:50,787:INFO:          deepchecks: Not installed
2023-11-02 14:13:50,787:INFO:             xgboost: 2.0.0
2023-11-02 14:13:50,787:INFO:            catboost: Not installed
2023-11-02 14:13:50,787:INFO:              kmodes: Not installed
2023-11-02 14:13:50,787:INFO:             mlxtend: Not installed
2023-11-02 14:13:50,787:INFO:       statsforecast: Not installed
2023-11-02 14:13:50,787:INFO:        tune_sklearn: Not installed
2023-11-02 14:13:50,787:INFO:                 ray: Not installed
2023-11-02 14:13:50,787:INFO:            hyperopt: Not installed
2023-11-02 14:13:50,787:INFO:              optuna: Not installed
2023-11-02 14:13:50,787:INFO:               skopt: Not installed
2023-11-02 14:13:50,787:INFO:              mlflow: Not installed
2023-11-02 14:13:50,787:INFO:              gradio: Not installed
2023-11-02 14:13:50,787:INFO:             fastapi: Not installed
2023-11-02 14:13:50,787:INFO:             uvicorn: Not installed
2023-11-02 14:13:50,787:INFO:              m2cgen: Not installed
2023-11-02 14:13:50,787:INFO:           evidently: Not installed
2023-11-02 14:13:50,787:INFO:               fugue: Not installed
2023-11-02 14:13:50,787:INFO:           streamlit: Not installed
2023-11-02 14:13:50,787:INFO:             prophet: Not installed
2023-11-02 14:13:50,787:INFO:None
2023-11-02 14:13:50,788:INFO:Set up data.
2023-11-02 14:13:50,796:INFO:Set up folding strategy.
2023-11-02 14:13:50,796:INFO:Set up train/test split.
2023-11-02 14:13:50,800:INFO:Set up index.
2023-11-02 14:13:50,801:INFO:Assigning column types.
2023-11-02 14:13:50,804:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 14:13:50,804:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,809:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,814:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,906:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,907:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:50,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:50,909:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,913:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,917:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:50,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,004:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,007:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 14:13:51,011:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,107:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,113:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,117:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,169:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,211:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,213:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 14:13:51,221:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,271:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,304:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,314:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,392:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,395:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 14:13:51,448:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,481:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,563:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,565:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 14:13:51,613:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,649:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:13:51,736:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,739:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 14:13:51,830:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,977:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:51,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:51,984:INFO:Preparing preprocessing pipeline...
2023-11-02 14:13:51,984:INFO:Set up simple imputation.
2023-11-02 14:13:51,986:INFO:Set up encoding of categorical features.
2023-11-02 14:13:52,120:INFO:Finished creating preprocessing pipeline.
2023-11-02 14:13:52,125:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year', 'log_yield',
                                             'log_hectares', 'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=na...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 14:13:52,125:INFO:Creating final display dataframe.
2023-11-02 14:13:52,380:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 9)
4        Transformed data shape       (15479, 29)
5   Transformed train set shape       (10835, 29)
6    Transformed test set shape        (4644, 29)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              f9a9
2023-11-02 14:13:52,485:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:52,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:52,573:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:13:52,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:13:52,575:INFO:setup() successfully completed in 1.8s...............
2023-11-02 14:14:25,262:INFO:PyCaret RegressionExperiment
2023-11-02 14:14:25,262:INFO:Logging name: reg-default-name
2023-11-02 14:14:25,262:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 14:14:25,262:INFO:version 3.1.0
2023-11-02 14:14:25,262:INFO:Initializing setup()
2023-11-02 14:14:25,262:INFO:self.USI: 1fb8
2023-11-02 14:14:25,262:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 14:14:25,262:INFO:Checking environment
2023-11-02 14:14:25,262:INFO:python_version: 3.10.2
2023-11-02 14:14:25,262:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:14:25,262:INFO:machine: AMD64
2023-11-02 14:14:25,262:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:14:25,266:INFO:Memory: svmem(total=16952647680, available=2206171136, percent=87.0, used=14746476544, free=2206171136)
2023-11-02 14:14:25,266:INFO:Physical Core: 4
2023-11-02 14:14:25,266:INFO:Logical Core: 8
2023-11-02 14:14:25,266:INFO:Checking libraries
2023-11-02 14:14:25,266:INFO:System:
2023-11-02 14:14:25,266:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:14:25,266:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:14:25,266:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:14:25,266:INFO:PyCaret required dependencies:
2023-11-02 14:14:25,267:INFO:                 pip: 23.0.1
2023-11-02 14:14:25,267:INFO:          setuptools: 65.5.0
2023-11-02 14:14:25,267:INFO:             pycaret: 3.1.0
2023-11-02 14:14:25,267:INFO:             IPython: 8.15.0
2023-11-02 14:14:25,267:INFO:          ipywidgets: 8.1.1
2023-11-02 14:14:25,267:INFO:                tqdm: 4.66.1
2023-11-02 14:14:25,267:INFO:               numpy: 1.23.5
2023-11-02 14:14:25,267:INFO:              pandas: 1.5.3
2023-11-02 14:14:25,267:INFO:              jinja2: 3.1.2
2023-11-02 14:14:25,267:INFO:               scipy: 1.10.1
2023-11-02 14:14:25,267:INFO:              joblib: 1.3.2
2023-11-02 14:14:25,267:INFO:             sklearn: 1.2.2
2023-11-02 14:14:25,267:INFO:                pyod: 1.1.0
2023-11-02 14:14:25,267:INFO:            imblearn: 0.11.0
2023-11-02 14:14:25,267:INFO:   category_encoders: 2.6.2
2023-11-02 14:14:25,267:INFO:            lightgbm: 4.1.0
2023-11-02 14:14:25,267:INFO:               numba: 0.58.0
2023-11-02 14:14:25,267:INFO:            requests: 2.31.0
2023-11-02 14:14:25,267:INFO:          matplotlib: 3.8.0
2023-11-02 14:14:25,267:INFO:          scikitplot: 0.3.7
2023-11-02 14:14:25,267:INFO:         yellowbrick: 1.5
2023-11-02 14:14:25,267:INFO:              plotly: 5.17.0
2023-11-02 14:14:25,268:INFO:    plotly-resampler: Not installed
2023-11-02 14:14:25,268:INFO:             kaleido: 0.2.1
2023-11-02 14:14:25,268:INFO:           schemdraw: 0.15
2023-11-02 14:14:25,268:INFO:         statsmodels: 0.14.0
2023-11-02 14:14:25,268:INFO:              sktime: 0.21.1
2023-11-02 14:14:25,268:INFO:               tbats: 1.1.3
2023-11-02 14:14:25,268:INFO:            pmdarima: 2.0.3
2023-11-02 14:14:25,268:INFO:              psutil: 5.9.5
2023-11-02 14:14:25,268:INFO:          markupsafe: 2.1.3
2023-11-02 14:14:25,268:INFO:             pickle5: Not installed
2023-11-02 14:14:25,268:INFO:         cloudpickle: 2.2.1
2023-11-02 14:14:25,268:INFO:         deprecation: 2.1.0
2023-11-02 14:14:25,268:INFO:              xxhash: 3.3.0
2023-11-02 14:14:25,268:INFO:           wurlitzer: Not installed
2023-11-02 14:14:25,268:INFO:PyCaret optional dependencies:
2023-11-02 14:14:25,268:INFO:                shap: Not installed
2023-11-02 14:14:25,268:INFO:           interpret: Not installed
2023-11-02 14:14:25,268:INFO:                umap: Not installed
2023-11-02 14:14:25,268:INFO:     ydata_profiling: Not installed
2023-11-02 14:14:25,268:INFO:  explainerdashboard: Not installed
2023-11-02 14:14:25,268:INFO:             autoviz: Not installed
2023-11-02 14:14:25,268:INFO:           fairlearn: Not installed
2023-11-02 14:14:25,268:INFO:          deepchecks: Not installed
2023-11-02 14:14:25,268:INFO:             xgboost: 2.0.0
2023-11-02 14:14:25,268:INFO:            catboost: Not installed
2023-11-02 14:14:25,268:INFO:              kmodes: Not installed
2023-11-02 14:14:25,268:INFO:             mlxtend: Not installed
2023-11-02 14:14:25,268:INFO:       statsforecast: Not installed
2023-11-02 14:14:25,269:INFO:        tune_sklearn: Not installed
2023-11-02 14:14:25,269:INFO:                 ray: Not installed
2023-11-02 14:14:25,269:INFO:            hyperopt: Not installed
2023-11-02 14:14:25,269:INFO:              optuna: Not installed
2023-11-02 14:14:25,269:INFO:               skopt: Not installed
2023-11-02 14:14:25,269:INFO:              mlflow: Not installed
2023-11-02 14:14:25,269:INFO:              gradio: Not installed
2023-11-02 14:14:25,269:INFO:             fastapi: Not installed
2023-11-02 14:14:25,269:INFO:             uvicorn: Not installed
2023-11-02 14:14:25,269:INFO:              m2cgen: Not installed
2023-11-02 14:14:25,269:INFO:           evidently: Not installed
2023-11-02 14:14:25,269:INFO:               fugue: Not installed
2023-11-02 14:14:25,269:INFO:           streamlit: Not installed
2023-11-02 14:14:25,269:INFO:             prophet: Not installed
2023-11-02 14:14:25,269:INFO:None
2023-11-02 14:14:25,269:INFO:Set up data.
2023-11-02 14:14:25,278:INFO:Set up folding strategy.
2023-11-02 14:14:25,278:INFO:Set up train/test split.
2023-11-02 14:14:25,281:INFO:Set up index.
2023-11-02 14:14:25,282:INFO:Assigning column types.
2023-11-02 14:14:25,285:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 14:14:25,285:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,289:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,296:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,390:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,390:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,392:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,396:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,399:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,476:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,478:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 14:14:25,482:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,485:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,563:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,568:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,571:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,615:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,649:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,652:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 14:14:25,659:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,734:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,743:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,826:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,828:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 14:14:25,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:25,916:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:25,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:25,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:26,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:14:26,002:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:26,005:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 14:14:26,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:26,099:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:26,155:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:14:26,198:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:26,200:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 14:14:26,293:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:26,444:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:26,447:INFO:Preparing preprocessing pipeline...
2023-11-02 14:14:26,447:INFO:Set up simple imputation.
2023-11-02 14:14:26,449:INFO:Set up encoding of categorical features.
2023-11-02 14:14:26,599:INFO:Finished creating preprocessing pipeline.
2023-11-02 14:14:26,606:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 14:14:26,606:INFO:Creating final display dataframe.
2023-11-02 14:14:26,836:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 8)
4        Transformed data shape       (15479, 28)
5   Transformed train set shape       (10835, 28)
6    Transformed test set shape        (4644, 28)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              1fb8
2023-11-02 14:14:26,947:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:26,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:27,037:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:14:27,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:14:27,041:INFO:setup() successfully completed in 1.78s...............
2023-11-02 14:14:31,727:INFO:Initializing compare_models()
2023-11-02 14:14:31,728:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 14:14:31,729:INFO:Checking exceptions
2023-11-02 14:14:31,733:INFO:Preparing display monitor
2023-11-02 14:14:31,754:INFO:Initializing Linear Regression
2023-11-02 14:14:31,754:INFO:Total runtime is 0.0 minutes
2023-11-02 14:14:31,757:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:31,757:INFO:Initializing create_model()
2023-11-02 14:14:31,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:31,758:INFO:Checking exceptions
2023-11-02 14:14:31,758:INFO:Importing libraries
2023-11-02 14:14:31,758:INFO:Copying training dataset
2023-11-02 14:14:31,762:INFO:Defining folds
2023-11-02 14:14:31,762:INFO:Declaring metric variables
2023-11-02 14:14:31,766:INFO:Importing untrained model
2023-11-02 14:14:31,769:INFO:Linear Regression Imported successfully
2023-11-02 14:14:31,778:INFO:Starting cross validation
2023-11-02 14:14:31,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:43,502:INFO:Calculating mean and std
2023-11-02 14:14:43,505:INFO:Creating metrics dataframe
2023-11-02 14:14:43,508:INFO:Uploading results into container
2023-11-02 14:14:43,509:INFO:Uploading model into container now
2023-11-02 14:14:43,510:INFO:_master_model_container: 1
2023-11-02 14:14:43,510:INFO:_display_container: 2
2023-11-02 14:14:43,510:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 14:14:43,510:INFO:create_model() successfully completed......................................
2023-11-02 14:14:43,647:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:43,647:INFO:Creating metrics dataframe
2023-11-02 14:14:43,661:INFO:Initializing Lasso Regression
2023-11-02 14:14:43,661:INFO:Total runtime is 0.19844687779744466 minutes
2023-11-02 14:14:43,664:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:43,664:INFO:Initializing create_model()
2023-11-02 14:14:43,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:43,664:INFO:Checking exceptions
2023-11-02 14:14:43,664:INFO:Importing libraries
2023-11-02 14:14:43,665:INFO:Copying training dataset
2023-11-02 14:14:43,670:INFO:Defining folds
2023-11-02 14:14:43,670:INFO:Declaring metric variables
2023-11-02 14:14:43,675:INFO:Importing untrained model
2023-11-02 14:14:43,679:INFO:Lasso Regression Imported successfully
2023-11-02 14:14:43,686:INFO:Starting cross validation
2023-11-02 14:14:43,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:44,051:INFO:Calculating mean and std
2023-11-02 14:14:44,052:INFO:Creating metrics dataframe
2023-11-02 14:14:44,057:INFO:Uploading results into container
2023-11-02 14:14:44,058:INFO:Uploading model into container now
2023-11-02 14:14:44,058:INFO:_master_model_container: 2
2023-11-02 14:14:44,058:INFO:_display_container: 2
2023-11-02 14:14:44,058:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 14:14:44,058:INFO:create_model() successfully completed......................................
2023-11-02 14:14:44,190:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:44,190:INFO:Creating metrics dataframe
2023-11-02 14:14:44,196:INFO:Initializing Ridge Regression
2023-11-02 14:14:44,196:INFO:Total runtime is 0.2073722004890442 minutes
2023-11-02 14:14:44,199:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:44,199:INFO:Initializing create_model()
2023-11-02 14:14:44,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:44,199:INFO:Checking exceptions
2023-11-02 14:14:44,199:INFO:Importing libraries
2023-11-02 14:14:44,199:INFO:Copying training dataset
2023-11-02 14:14:44,205:INFO:Defining folds
2023-11-02 14:14:44,205:INFO:Declaring metric variables
2023-11-02 14:14:44,208:INFO:Importing untrained model
2023-11-02 14:14:44,215:INFO:Ridge Regression Imported successfully
2023-11-02 14:14:44,221:INFO:Starting cross validation
2023-11-02 14:14:44,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:44,415:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.58324e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,415:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.27275e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,415:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.42715e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,426:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75225e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,432:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.30807e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,433:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.24465e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,529:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.22735e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,532:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.40796e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:14:44,556:INFO:Calculating mean and std
2023-11-02 14:14:44,557:INFO:Creating metrics dataframe
2023-11-02 14:14:44,560:INFO:Uploading results into container
2023-11-02 14:14:44,561:INFO:Uploading model into container now
2023-11-02 14:14:44,561:INFO:_master_model_container: 3
2023-11-02 14:14:44,561:INFO:_display_container: 2
2023-11-02 14:14:44,561:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 14:14:44,562:INFO:create_model() successfully completed......................................
2023-11-02 14:14:44,690:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:44,690:INFO:Creating metrics dataframe
2023-11-02 14:14:44,696:INFO:Initializing Elastic Net
2023-11-02 14:14:44,697:INFO:Total runtime is 0.2157240112622579 minutes
2023-11-02 14:14:44,700:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:44,701:INFO:Initializing create_model()
2023-11-02 14:14:44,701:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:44,701:INFO:Checking exceptions
2023-11-02 14:14:44,701:INFO:Importing libraries
2023-11-02 14:14:44,701:INFO:Copying training dataset
2023-11-02 14:14:44,706:INFO:Defining folds
2023-11-02 14:14:44,706:INFO:Declaring metric variables
2023-11-02 14:14:44,710:INFO:Importing untrained model
2023-11-02 14:14:44,716:INFO:Elastic Net Imported successfully
2023-11-02 14:14:44,723:INFO:Starting cross validation
2023-11-02 14:14:44,724:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:45,077:INFO:Calculating mean and std
2023-11-02 14:14:45,078:INFO:Creating metrics dataframe
2023-11-02 14:14:45,082:INFO:Uploading results into container
2023-11-02 14:14:45,082:INFO:Uploading model into container now
2023-11-02 14:14:45,083:INFO:_master_model_container: 4
2023-11-02 14:14:45,083:INFO:_display_container: 2
2023-11-02 14:14:45,083:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 14:14:45,083:INFO:create_model() successfully completed......................................
2023-11-02 14:14:45,224:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:45,224:INFO:Creating metrics dataframe
2023-11-02 14:14:45,231:INFO:Initializing Least Angle Regression
2023-11-02 14:14:45,231:INFO:Total runtime is 0.22461430231730145 minutes
2023-11-02 14:14:45,234:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:45,234:INFO:Initializing create_model()
2023-11-02 14:14:45,234:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:45,234:INFO:Checking exceptions
2023-11-02 14:14:45,234:INFO:Importing libraries
2023-11-02 14:14:45,234:INFO:Copying training dataset
2023-11-02 14:14:45,240:INFO:Defining folds
2023-11-02 14:14:45,240:INFO:Declaring metric variables
2023-11-02 14:14:45,242:INFO:Importing untrained model
2023-11-02 14:14:45,247:INFO:Least Angle Regression Imported successfully
2023-11-02 14:14:45,253:INFO:Starting cross validation
2023-11-02 14:14:45,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:45,588:INFO:Calculating mean and std
2023-11-02 14:14:45,590:INFO:Creating metrics dataframe
2023-11-02 14:14:45,592:INFO:Uploading results into container
2023-11-02 14:14:45,592:INFO:Uploading model into container now
2023-11-02 14:14:45,593:INFO:_master_model_container: 5
2023-11-02 14:14:45,593:INFO:_display_container: 2
2023-11-02 14:14:45,593:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 14:14:45,593:INFO:create_model() successfully completed......................................
2023-11-02 14:14:45,720:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:45,720:INFO:Creating metrics dataframe
2023-11-02 14:14:45,730:INFO:Initializing Lasso Least Angle Regression
2023-11-02 14:14:45,731:INFO:Total runtime is 0.23294297456741334 minutes
2023-11-02 14:14:45,733:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:45,733:INFO:Initializing create_model()
2023-11-02 14:14:45,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:45,733:INFO:Checking exceptions
2023-11-02 14:14:45,733:INFO:Importing libraries
2023-11-02 14:14:45,733:INFO:Copying training dataset
2023-11-02 14:14:45,740:INFO:Defining folds
2023-11-02 14:14:45,740:INFO:Declaring metric variables
2023-11-02 14:14:45,744:INFO:Importing untrained model
2023-11-02 14:14:45,748:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 14:14:45,754:INFO:Starting cross validation
2023-11-02 14:14:45,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:46,075:INFO:Calculating mean and std
2023-11-02 14:14:46,076:INFO:Creating metrics dataframe
2023-11-02 14:14:46,079:INFO:Uploading results into container
2023-11-02 14:14:46,079:INFO:Uploading model into container now
2023-11-02 14:14:46,080:INFO:_master_model_container: 6
2023-11-02 14:14:46,080:INFO:_display_container: 2
2023-11-02 14:14:46,080:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 14:14:46,080:INFO:create_model() successfully completed......................................
2023-11-02 14:14:46,213:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:46,213:INFO:Creating metrics dataframe
2023-11-02 14:14:46,220:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 14:14:46,220:INFO:Total runtime is 0.24109854300816855 minutes
2023-11-02 14:14:46,224:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:46,225:INFO:Initializing create_model()
2023-11-02 14:14:46,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:46,225:INFO:Checking exceptions
2023-11-02 14:14:46,225:INFO:Importing libraries
2023-11-02 14:14:46,225:INFO:Copying training dataset
2023-11-02 14:14:46,230:INFO:Defining folds
2023-11-02 14:14:46,231:INFO:Declaring metric variables
2023-11-02 14:14:46,234:INFO:Importing untrained model
2023-11-02 14:14:46,238:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 14:14:46,245:INFO:Starting cross validation
2023-11-02 14:14:46,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:46,642:INFO:Calculating mean and std
2023-11-02 14:14:46,643:INFO:Creating metrics dataframe
2023-11-02 14:14:46,645:INFO:Uploading results into container
2023-11-02 14:14:46,646:INFO:Uploading model into container now
2023-11-02 14:14:46,646:INFO:_master_model_container: 7
2023-11-02 14:14:46,646:INFO:_display_container: 2
2023-11-02 14:14:46,646:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 14:14:46,646:INFO:create_model() successfully completed......................................
2023-11-02 14:14:46,768:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:46,768:INFO:Creating metrics dataframe
2023-11-02 14:14:46,777:INFO:Initializing Bayesian Ridge
2023-11-02 14:14:46,777:INFO:Total runtime is 0.25038692951202396 minutes
2023-11-02 14:14:46,782:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:46,782:INFO:Initializing create_model()
2023-11-02 14:14:46,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:46,782:INFO:Checking exceptions
2023-11-02 14:14:46,782:INFO:Importing libraries
2023-11-02 14:14:46,782:INFO:Copying training dataset
2023-11-02 14:14:46,787:INFO:Defining folds
2023-11-02 14:14:46,787:INFO:Declaring metric variables
2023-11-02 14:14:46,791:INFO:Importing untrained model
2023-11-02 14:14:46,795:INFO:Bayesian Ridge Imported successfully
2023-11-02 14:14:46,800:INFO:Starting cross validation
2023-11-02 14:14:46,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:47,152:INFO:Calculating mean and std
2023-11-02 14:14:47,153:INFO:Creating metrics dataframe
2023-11-02 14:14:47,155:INFO:Uploading results into container
2023-11-02 14:14:47,155:INFO:Uploading model into container now
2023-11-02 14:14:47,155:INFO:_master_model_container: 8
2023-11-02 14:14:47,155:INFO:_display_container: 2
2023-11-02 14:14:47,156:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 14:14:47,156:INFO:create_model() successfully completed......................................
2023-11-02 14:14:47,286:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:47,286:INFO:Creating metrics dataframe
2023-11-02 14:14:47,297:INFO:Initializing Passive Aggressive Regressor
2023-11-02 14:14:47,298:INFO:Total runtime is 0.25907332499821983 minutes
2023-11-02 14:14:47,301:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:47,301:INFO:Initializing create_model()
2023-11-02 14:14:47,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:47,301:INFO:Checking exceptions
2023-11-02 14:14:47,301:INFO:Importing libraries
2023-11-02 14:14:47,301:INFO:Copying training dataset
2023-11-02 14:14:47,307:INFO:Defining folds
2023-11-02 14:14:47,307:INFO:Declaring metric variables
2023-11-02 14:14:47,312:INFO:Importing untrained model
2023-11-02 14:14:47,315:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 14:14:47,321:INFO:Starting cross validation
2023-11-02 14:14:47,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:47,682:INFO:Calculating mean and std
2023-11-02 14:14:47,683:INFO:Creating metrics dataframe
2023-11-02 14:14:47,686:INFO:Uploading results into container
2023-11-02 14:14:47,686:INFO:Uploading model into container now
2023-11-02 14:14:47,687:INFO:_master_model_container: 9
2023-11-02 14:14:47,687:INFO:_display_container: 2
2023-11-02 14:14:47,687:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 14:14:47,687:INFO:create_model() successfully completed......................................
2023-11-02 14:14:47,819:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:47,819:INFO:Creating metrics dataframe
2023-11-02 14:14:47,829:INFO:Initializing Huber Regressor
2023-11-02 14:14:47,829:INFO:Total runtime is 0.26791327794392905 minutes
2023-11-02 14:14:47,831:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:47,832:INFO:Initializing create_model()
2023-11-02 14:14:47,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:47,832:INFO:Checking exceptions
2023-11-02 14:14:47,832:INFO:Importing libraries
2023-11-02 14:14:47,832:INFO:Copying training dataset
2023-11-02 14:14:47,836:INFO:Defining folds
2023-11-02 14:14:47,836:INFO:Declaring metric variables
2023-11-02 14:14:47,840:INFO:Importing untrained model
2023-11-02 14:14:47,845:INFO:Huber Regressor Imported successfully
2023-11-02 14:14:47,850:INFO:Starting cross validation
2023-11-02 14:14:47,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:48,649:INFO:Calculating mean and std
2023-11-02 14:14:48,650:INFO:Creating metrics dataframe
2023-11-02 14:14:48,652:INFO:Uploading results into container
2023-11-02 14:14:48,652:INFO:Uploading model into container now
2023-11-02 14:14:48,652:INFO:_master_model_container: 10
2023-11-02 14:14:48,652:INFO:_display_container: 2
2023-11-02 14:14:48,653:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 14:14:48,653:INFO:create_model() successfully completed......................................
2023-11-02 14:14:48,784:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:48,784:INFO:Creating metrics dataframe
2023-11-02 14:14:48,795:INFO:Initializing K Neighbors Regressor
2023-11-02 14:14:48,796:INFO:Total runtime is 0.284037975470225 minutes
2023-11-02 14:14:48,798:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:48,799:INFO:Initializing create_model()
2023-11-02 14:14:48,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:48,799:INFO:Checking exceptions
2023-11-02 14:14:48,799:INFO:Importing libraries
2023-11-02 14:14:48,799:INFO:Copying training dataset
2023-11-02 14:14:48,804:INFO:Defining folds
2023-11-02 14:14:48,804:INFO:Declaring metric variables
2023-11-02 14:14:48,806:INFO:Importing untrained model
2023-11-02 14:14:48,810:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:14:48,843:INFO:Starting cross validation
2023-11-02 14:14:48,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:49,395:INFO:Calculating mean and std
2023-11-02 14:14:49,396:INFO:Creating metrics dataframe
2023-11-02 14:14:49,399:INFO:Uploading results into container
2023-11-02 14:14:49,400:INFO:Uploading model into container now
2023-11-02 14:14:49,401:INFO:_master_model_container: 11
2023-11-02 14:14:49,401:INFO:_display_container: 2
2023-11-02 14:14:49,401:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:14:49,401:INFO:create_model() successfully completed......................................
2023-11-02 14:14:49,534:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:49,535:INFO:Creating metrics dataframe
2023-11-02 14:14:49,544:INFO:Initializing Decision Tree Regressor
2023-11-02 14:14:49,545:INFO:Total runtime is 0.2965104858080546 minutes
2023-11-02 14:14:49,548:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:49,548:INFO:Initializing create_model()
2023-11-02 14:14:49,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:49,548:INFO:Checking exceptions
2023-11-02 14:14:49,548:INFO:Importing libraries
2023-11-02 14:14:49,548:INFO:Copying training dataset
2023-11-02 14:14:49,552:INFO:Defining folds
2023-11-02 14:14:49,552:INFO:Declaring metric variables
2023-11-02 14:14:49,556:INFO:Importing untrained model
2023-11-02 14:14:49,561:INFO:Decision Tree Regressor Imported successfully
2023-11-02 14:14:49,568:INFO:Starting cross validation
2023-11-02 14:14:49,569:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:14:50,045:INFO:Calculating mean and std
2023-11-02 14:14:50,046:INFO:Creating metrics dataframe
2023-11-02 14:14:50,049:INFO:Uploading results into container
2023-11-02 14:14:50,050:INFO:Uploading model into container now
2023-11-02 14:14:50,050:INFO:_master_model_container: 12
2023-11-02 14:14:50,050:INFO:_display_container: 2
2023-11-02 14:14:50,051:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 14:14:50,051:INFO:create_model() successfully completed......................................
2023-11-02 14:14:50,186:INFO:SubProcess create_model() end ==================================
2023-11-02 14:14:50,187:INFO:Creating metrics dataframe
2023-11-02 14:14:50,199:INFO:Initializing Random Forest Regressor
2023-11-02 14:14:50,199:INFO:Total runtime is 0.3074236710866292 minutes
2023-11-02 14:14:50,202:INFO:SubProcess create_model() called ==================================
2023-11-02 14:14:50,202:INFO:Initializing create_model()
2023-11-02 14:14:50,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:14:50,203:INFO:Checking exceptions
2023-11-02 14:14:50,203:INFO:Importing libraries
2023-11-02 14:14:50,203:INFO:Copying training dataset
2023-11-02 14:14:50,210:INFO:Defining folds
2023-11-02 14:14:50,210:INFO:Declaring metric variables
2023-11-02 14:14:50,213:INFO:Importing untrained model
2023-11-02 14:14:50,217:INFO:Random Forest Regressor Imported successfully
2023-11-02 14:14:50,223:INFO:Starting cross validation
2023-11-02 14:14:50,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:01,980:INFO:Calculating mean and std
2023-11-02 14:15:01,981:INFO:Creating metrics dataframe
2023-11-02 14:15:01,983:INFO:Uploading results into container
2023-11-02 14:15:01,984:INFO:Uploading model into container now
2023-11-02 14:15:01,984:INFO:_master_model_container: 13
2023-11-02 14:15:01,984:INFO:_display_container: 2
2023-11-02 14:15:01,984:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 14:15:01,985:INFO:create_model() successfully completed......................................
2023-11-02 14:15:02,113:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:02,113:INFO:Creating metrics dataframe
2023-11-02 14:15:02,123:INFO:Initializing Extra Trees Regressor
2023-11-02 14:15:02,124:INFO:Total runtime is 0.5061680714289347 minutes
2023-11-02 14:15:02,126:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:02,127:INFO:Initializing create_model()
2023-11-02 14:15:02,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:02,127:INFO:Checking exceptions
2023-11-02 14:15:02,127:INFO:Importing libraries
2023-11-02 14:15:02,127:INFO:Copying training dataset
2023-11-02 14:15:02,132:INFO:Defining folds
2023-11-02 14:15:02,133:INFO:Declaring metric variables
2023-11-02 14:15:02,137:INFO:Importing untrained model
2023-11-02 14:15:02,142:INFO:Extra Trees Regressor Imported successfully
2023-11-02 14:15:02,146:INFO:Starting cross validation
2023-11-02 14:15:02,147:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:08,050:INFO:Calculating mean and std
2023-11-02 14:15:08,051:INFO:Creating metrics dataframe
2023-11-02 14:15:08,054:INFO:Uploading results into container
2023-11-02 14:15:08,055:INFO:Uploading model into container now
2023-11-02 14:15:08,056:INFO:_master_model_container: 14
2023-11-02 14:15:08,056:INFO:_display_container: 2
2023-11-02 14:15:08,057:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 14:15:08,057:INFO:create_model() successfully completed......................................
2023-11-02 14:15:08,204:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:08,204:INFO:Creating metrics dataframe
2023-11-02 14:15:08,213:INFO:Initializing AdaBoost Regressor
2023-11-02 14:15:08,214:INFO:Total runtime is 0.6076613664627075 minutes
2023-11-02 14:15:08,216:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:08,216:INFO:Initializing create_model()
2023-11-02 14:15:08,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:08,216:INFO:Checking exceptions
2023-11-02 14:15:08,217:INFO:Importing libraries
2023-11-02 14:15:08,217:INFO:Copying training dataset
2023-11-02 14:15:08,221:INFO:Defining folds
2023-11-02 14:15:08,221:INFO:Declaring metric variables
2023-11-02 14:15:08,223:INFO:Importing untrained model
2023-11-02 14:15:08,227:INFO:AdaBoost Regressor Imported successfully
2023-11-02 14:15:08,236:INFO:Starting cross validation
2023-11-02 14:15:08,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:10,568:INFO:Calculating mean and std
2023-11-02 14:15:10,569:INFO:Creating metrics dataframe
2023-11-02 14:15:10,572:INFO:Uploading results into container
2023-11-02 14:15:10,573:INFO:Uploading model into container now
2023-11-02 14:15:10,574:INFO:_master_model_container: 15
2023-11-02 14:15:10,574:INFO:_display_container: 2
2023-11-02 14:15:10,575:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 14:15:10,575:INFO:create_model() successfully completed......................................
2023-11-02 14:15:10,703:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:10,703:INFO:Creating metrics dataframe
2023-11-02 14:15:10,713:INFO:Initializing Gradient Boosting Regressor
2023-11-02 14:15:10,713:INFO:Total runtime is 0.6493204037348429 minutes
2023-11-02 14:15:10,717:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:10,717:INFO:Initializing create_model()
2023-11-02 14:15:10,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:10,717:INFO:Checking exceptions
2023-11-02 14:15:10,717:INFO:Importing libraries
2023-11-02 14:15:10,718:INFO:Copying training dataset
2023-11-02 14:15:10,722:INFO:Defining folds
2023-11-02 14:15:10,722:INFO:Declaring metric variables
2023-11-02 14:15:10,728:INFO:Importing untrained model
2023-11-02 14:15:10,731:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 14:15:10,737:INFO:Starting cross validation
2023-11-02 14:15:10,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:16,186:INFO:Calculating mean and std
2023-11-02 14:15:16,187:INFO:Creating metrics dataframe
2023-11-02 14:15:16,190:INFO:Uploading results into container
2023-11-02 14:15:16,191:INFO:Uploading model into container now
2023-11-02 14:15:16,191:INFO:_master_model_container: 16
2023-11-02 14:15:16,192:INFO:_display_container: 2
2023-11-02 14:15:16,192:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 14:15:16,192:INFO:create_model() successfully completed......................................
2023-11-02 14:15:16,324:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:16,324:INFO:Creating metrics dataframe
2023-11-02 14:15:16,335:INFO:Initializing Extreme Gradient Boosting
2023-11-02 14:15:16,335:INFO:Total runtime is 0.7430149753888448 minutes
2023-11-02 14:15:16,338:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:16,338:INFO:Initializing create_model()
2023-11-02 14:15:16,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:16,338:INFO:Checking exceptions
2023-11-02 14:15:16,338:INFO:Importing libraries
2023-11-02 14:15:16,338:INFO:Copying training dataset
2023-11-02 14:15:16,343:INFO:Defining folds
2023-11-02 14:15:16,343:INFO:Declaring metric variables
2023-11-02 14:15:16,345:INFO:Importing untrained model
2023-11-02 14:15:16,350:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:15:16,356:INFO:Starting cross validation
2023-11-02 14:15:16,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:17,475:INFO:Calculating mean and std
2023-11-02 14:15:17,476:INFO:Creating metrics dataframe
2023-11-02 14:15:17,479:INFO:Uploading results into container
2023-11-02 14:15:17,480:INFO:Uploading model into container now
2023-11-02 14:15:17,481:INFO:_master_model_container: 17
2023-11-02 14:15:17,481:INFO:_display_container: 2
2023-11-02 14:15:17,482:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:15:17,482:INFO:create_model() successfully completed......................................
2023-11-02 14:15:17,610:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:17,610:INFO:Creating metrics dataframe
2023-11-02 14:15:17,619:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 14:15:17,619:INFO:Total runtime is 0.7644208351771036 minutes
2023-11-02 14:15:17,623:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:17,623:INFO:Initializing create_model()
2023-11-02 14:15:17,623:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:17,623:INFO:Checking exceptions
2023-11-02 14:15:17,623:INFO:Importing libraries
2023-11-02 14:15:17,623:INFO:Copying training dataset
2023-11-02 14:15:17,629:INFO:Defining folds
2023-11-02 14:15:17,629:INFO:Declaring metric variables
2023-11-02 14:15:17,635:INFO:Importing untrained model
2023-11-02 14:15:17,638:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 14:15:17,643:INFO:Starting cross validation
2023-11-02 14:15:17,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:18,938:INFO:Calculating mean and std
2023-11-02 14:15:18,939:INFO:Creating metrics dataframe
2023-11-02 14:15:18,943:INFO:Uploading results into container
2023-11-02 14:15:18,944:INFO:Uploading model into container now
2023-11-02 14:15:18,944:INFO:_master_model_container: 18
2023-11-02 14:15:18,944:INFO:_display_container: 2
2023-11-02 14:15:18,945:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 14:15:18,945:INFO:create_model() successfully completed......................................
2023-11-02 14:15:19,108:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:19,108:INFO:Creating metrics dataframe
2023-11-02 14:15:19,119:INFO:Initializing Dummy Regressor
2023-11-02 14:15:19,119:INFO:Total runtime is 0.789412474632263 minutes
2023-11-02 14:15:19,122:INFO:SubProcess create_model() called ==================================
2023-11-02 14:15:19,122:INFO:Initializing create_model()
2023-11-02 14:15:19,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9840>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:19,123:INFO:Checking exceptions
2023-11-02 14:15:19,123:INFO:Importing libraries
2023-11-02 14:15:19,123:INFO:Copying training dataset
2023-11-02 14:15:19,129:INFO:Defining folds
2023-11-02 14:15:19,129:INFO:Declaring metric variables
2023-11-02 14:15:19,133:INFO:Importing untrained model
2023-11-02 14:15:19,138:INFO:Dummy Regressor Imported successfully
2023-11-02 14:15:19,145:INFO:Starting cross validation
2023-11-02 14:15:19,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:15:19,468:INFO:Calculating mean and std
2023-11-02 14:15:19,469:INFO:Creating metrics dataframe
2023-11-02 14:15:19,471:INFO:Uploading results into container
2023-11-02 14:15:19,472:INFO:Uploading model into container now
2023-11-02 14:15:19,472:INFO:_master_model_container: 19
2023-11-02 14:15:19,472:INFO:_display_container: 2
2023-11-02 14:15:19,472:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 14:15:19,472:INFO:create_model() successfully completed......................................
2023-11-02 14:15:19,605:INFO:SubProcess create_model() end ==================================
2023-11-02 14:15:19,605:INFO:Creating metrics dataframe
2023-11-02 14:15:19,627:INFO:Initializing create_model()
2023-11-02 14:15:19,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:15:19,627:INFO:Checking exceptions
2023-11-02 14:15:19,629:INFO:Importing libraries
2023-11-02 14:15:19,629:INFO:Copying training dataset
2023-11-02 14:15:19,635:INFO:Defining folds
2023-11-02 14:15:19,635:INFO:Declaring metric variables
2023-11-02 14:15:19,635:INFO:Importing untrained model
2023-11-02 14:15:19,635:INFO:Declaring custom model
2023-11-02 14:15:19,635:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:15:19,636:INFO:Cross validation set to False
2023-11-02 14:15:19,637:INFO:Fitting Model
2023-11-02 14:15:19,753:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:15:19,753:INFO:create_model() successfully completed......................................
2023-11-02 14:15:19,912:INFO:_master_model_container: 19
2023-11-02 14:15:19,912:INFO:_display_container: 2
2023-11-02 14:15:19,912:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:15:19,912:INFO:compare_models() successfully completed......................................
2023-11-02 14:15:32,006:INFO:Initializing evaluate_model()
2023-11-02 14:15:32,007:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 14:15:32,019:INFO:Initializing plot_model()
2023-11-02 14:15:32,019:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:32,019:INFO:Checking exceptions
2023-11-02 14:15:32,021:INFO:Preloading libraries
2023-11-02 14:15:32,022:INFO:Copying training dataset
2023-11-02 14:15:32,022:INFO:Plot type: pipeline
2023-11-02 14:15:32,130:INFO:Visual Rendered Successfully
2023-11-02 14:15:32,273:INFO:plot_model() successfully completed......................................
2023-11-02 14:15:34,892:INFO:Initializing plot_model()
2023-11-02 14:15:34,892:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:34,892:INFO:Checking exceptions
2023-11-02 14:15:39,214:INFO:Initializing plot_model()
2023-11-02 14:15:39,214:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:39,214:INFO:Checking exceptions
2023-11-02 14:15:47,706:INFO:Initializing plot_model()
2023-11-02 14:15:47,706:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:47,706:INFO:Checking exceptions
2023-11-02 14:15:54,375:INFO:Initializing plot_model()
2023-11-02 14:15:54,375:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:54,375:INFO:Checking exceptions
2023-11-02 14:15:54,377:INFO:Preloading libraries
2023-11-02 14:15:54,378:INFO:Copying training dataset
2023-11-02 14:15:54,378:INFO:Plot type: pipeline
2023-11-02 14:15:54,452:INFO:Visual Rendered Successfully
2023-11-02 14:15:54,560:INFO:plot_model() successfully completed......................................
2023-11-02 14:15:56,516:INFO:Initializing plot_model()
2023-11-02 14:15:56,516:INFO:plot_model(plot=parameter, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:15:56,516:INFO:Checking exceptions
2023-11-02 14:15:56,518:INFO:Preloading libraries
2023-11-02 14:15:56,519:INFO:Copying training dataset
2023-11-02 14:15:56,519:INFO:Plot type: parameter
2023-11-02 14:15:56,522:INFO:Visual Rendered Successfully
2023-11-02 14:15:56,676:INFO:plot_model() successfully completed......................................
2023-11-02 14:16:09,157:INFO:Initializing plot_model()
2023-11-02 14:16:09,157:INFO:plot_model(plot=residuals, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:16:09,158:INFO:Checking exceptions
2023-11-02 14:16:09,160:INFO:Preloading libraries
2023-11-02 14:16:09,161:INFO:Copying training dataset
2023-11-02 14:16:09,161:INFO:Plot type: residuals
2023-11-02 14:16:09,349:INFO:Fitting Model
2023-11-02 14:16:09,360:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names
  warnings.warn(

2023-11-02 14:16:09,658:INFO:Scoring test/hold-out set
2023-11-02 14:16:10,451:INFO:Visual Rendered Successfully
2023-11-02 14:16:10,618:INFO:plot_model() successfully completed......................................
2023-11-02 14:16:20,041:INFO:Initializing plot_model()
2023-11-02 14:16:20,042:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:16:20,042:INFO:Checking exceptions
2023-11-02 14:16:20,045:INFO:Preloading libraries
2023-11-02 14:16:20,045:INFO:Copying training dataset
2023-11-02 14:16:20,045:INFO:Plot type: vc
2023-11-02 14:16:20,045:INFO:Determining param_name
2023-11-02 14:16:20,046:INFO:param_name: n_neighbors
2023-11-02 14:16:20,217:INFO:Fitting Model
2023-11-02 14:16:30,528:INFO:Visual Rendered Successfully
2023-11-02 14:16:30,669:INFO:plot_model() successfully completed......................................
2023-11-02 14:16:30,720:INFO:Initializing plot_model()
2023-11-02 14:16:30,720:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:16:30,720:INFO:Checking exceptions
2023-11-02 14:16:32,405:INFO:Initializing plot_model()
2023-11-02 14:16:32,405:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B867F8EE0>, system=True)
2023-11-02 14:16:32,405:INFO:Checking exceptions
2023-11-02 14:16:32,408:INFO:Preloading libraries
2023-11-02 14:16:32,409:INFO:Copying training dataset
2023-11-02 14:16:32,409:INFO:Plot type: learning
2023-11-02 14:16:32,579:INFO:Fitting Model
2023-11-02 14:16:39,259:INFO:Visual Rendered Successfully
2023-11-02 14:16:39,396:INFO:plot_model() successfully completed......................................
2023-11-02 14:17:29,212:INFO:PyCaret RegressionExperiment
2023-11-02 14:17:29,213:INFO:Logging name: reg-default-name
2023-11-02 14:17:29,213:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 14:17:29,213:INFO:version 3.1.0
2023-11-02 14:17:29,213:INFO:Initializing setup()
2023-11-02 14:17:29,213:INFO:self.USI: 0ad7
2023-11-02 14:17:29,213:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 14:17:29,213:INFO:Checking environment
2023-11-02 14:17:29,213:INFO:python_version: 3.10.2
2023-11-02 14:17:29,213:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:17:29,213:INFO:machine: AMD64
2023-11-02 14:17:29,213:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:17:29,216:INFO:Memory: svmem(total=16952647680, available=1504903168, percent=91.1, used=15447744512, free=1504903168)
2023-11-02 14:17:29,216:INFO:Physical Core: 4
2023-11-02 14:17:29,216:INFO:Logical Core: 8
2023-11-02 14:17:29,216:INFO:Checking libraries
2023-11-02 14:17:29,216:INFO:System:
2023-11-02 14:17:29,217:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:17:29,217:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:17:29,217:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:17:29,217:INFO:PyCaret required dependencies:
2023-11-02 14:17:29,217:INFO:                 pip: 23.0.1
2023-11-02 14:17:29,217:INFO:          setuptools: 65.5.0
2023-11-02 14:17:29,217:INFO:             pycaret: 3.1.0
2023-11-02 14:17:29,217:INFO:             IPython: 8.15.0
2023-11-02 14:17:29,217:INFO:          ipywidgets: 8.1.1
2023-11-02 14:17:29,217:INFO:                tqdm: 4.66.1
2023-11-02 14:17:29,217:INFO:               numpy: 1.23.5
2023-11-02 14:17:29,217:INFO:              pandas: 1.5.3
2023-11-02 14:17:29,217:INFO:              jinja2: 3.1.2
2023-11-02 14:17:29,217:INFO:               scipy: 1.10.1
2023-11-02 14:17:29,217:INFO:              joblib: 1.3.2
2023-11-02 14:17:29,217:INFO:             sklearn: 1.2.2
2023-11-02 14:17:29,217:INFO:                pyod: 1.1.0
2023-11-02 14:17:29,217:INFO:            imblearn: 0.11.0
2023-11-02 14:17:29,217:INFO:   category_encoders: 2.6.2
2023-11-02 14:17:29,217:INFO:            lightgbm: 4.1.0
2023-11-02 14:17:29,217:INFO:               numba: 0.58.0
2023-11-02 14:17:29,217:INFO:            requests: 2.31.0
2023-11-02 14:17:29,217:INFO:          matplotlib: 3.8.0
2023-11-02 14:17:29,217:INFO:          scikitplot: 0.3.7
2023-11-02 14:17:29,217:INFO:         yellowbrick: 1.5
2023-11-02 14:17:29,217:INFO:              plotly: 5.17.0
2023-11-02 14:17:29,217:INFO:    plotly-resampler: Not installed
2023-11-02 14:17:29,217:INFO:             kaleido: 0.2.1
2023-11-02 14:17:29,217:INFO:           schemdraw: 0.15
2023-11-02 14:17:29,217:INFO:         statsmodels: 0.14.0
2023-11-02 14:17:29,217:INFO:              sktime: 0.21.1
2023-11-02 14:17:29,217:INFO:               tbats: 1.1.3
2023-11-02 14:17:29,217:INFO:            pmdarima: 2.0.3
2023-11-02 14:17:29,217:INFO:              psutil: 5.9.5
2023-11-02 14:17:29,218:INFO:          markupsafe: 2.1.3
2023-11-02 14:17:29,218:INFO:             pickle5: Not installed
2023-11-02 14:17:29,218:INFO:         cloudpickle: 2.2.1
2023-11-02 14:17:29,218:INFO:         deprecation: 2.1.0
2023-11-02 14:17:29,218:INFO:              xxhash: 3.3.0
2023-11-02 14:17:29,218:INFO:           wurlitzer: Not installed
2023-11-02 14:17:29,218:INFO:PyCaret optional dependencies:
2023-11-02 14:17:29,218:INFO:                shap: Not installed
2023-11-02 14:17:29,218:INFO:           interpret: Not installed
2023-11-02 14:17:29,218:INFO:                umap: Not installed
2023-11-02 14:17:29,218:INFO:     ydata_profiling: Not installed
2023-11-02 14:17:29,218:INFO:  explainerdashboard: Not installed
2023-11-02 14:17:29,218:INFO:             autoviz: Not installed
2023-11-02 14:17:29,218:INFO:           fairlearn: Not installed
2023-11-02 14:17:29,218:INFO:          deepchecks: Not installed
2023-11-02 14:17:29,218:INFO:             xgboost: 2.0.0
2023-11-02 14:17:29,218:INFO:            catboost: Not installed
2023-11-02 14:17:29,218:INFO:              kmodes: Not installed
2023-11-02 14:17:29,218:INFO:             mlxtend: Not installed
2023-11-02 14:17:29,218:INFO:       statsforecast: Not installed
2023-11-02 14:17:29,218:INFO:        tune_sklearn: Not installed
2023-11-02 14:17:29,218:INFO:                 ray: Not installed
2023-11-02 14:17:29,218:INFO:            hyperopt: Not installed
2023-11-02 14:17:29,218:INFO:              optuna: Not installed
2023-11-02 14:17:29,218:INFO:               skopt: Not installed
2023-11-02 14:17:29,218:INFO:              mlflow: Not installed
2023-11-02 14:17:29,218:INFO:              gradio: Not installed
2023-11-02 14:17:29,218:INFO:             fastapi: Not installed
2023-11-02 14:17:29,218:INFO:             uvicorn: Not installed
2023-11-02 14:17:29,218:INFO:              m2cgen: Not installed
2023-11-02 14:17:29,218:INFO:           evidently: Not installed
2023-11-02 14:17:29,218:INFO:               fugue: Not installed
2023-11-02 14:17:29,218:INFO:           streamlit: Not installed
2023-11-02 14:17:29,218:INFO:             prophet: Not installed
2023-11-02 14:17:29,218:INFO:None
2023-11-02 14:17:29,218:INFO:Set up data.
2023-11-02 14:17:29,226:INFO:Set up folding strategy.
2023-11-02 14:17:29,226:INFO:Set up train/test split.
2023-11-02 14:17:29,229:INFO:Set up index.
2023-11-02 14:17:29,229:INFO:Assigning column types.
2023-11-02 14:17:29,232:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 14:17:29,232:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,238:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,288:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,325:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,326:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,328:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,332:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,335:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,380:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,412:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,414:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 14:17:29,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,421:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,508:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,513:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,517:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,563:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,599:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,600:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 14:17:29,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,721:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,818:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,820:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 14:17:29,870:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,902:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 14:17:29,987:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:29,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:29,989:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 14:17:30,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:30,070:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 14:17:30,159:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,163:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 14:17:30,269:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,381:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,384:INFO:Preparing preprocessing pipeline...
2023-11-02 14:17:30,385:INFO:Set up simple imputation.
2023-11-02 14:17:30,387:INFO:Set up encoding of categorical features.
2023-11-02 14:17:30,478:INFO:Finished creating preprocessing pipeline.
2023-11-02 14:17:30,483:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 14:17:30,483:INFO:Creating final display dataframe.
2023-11-02 14:17:30,738:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 6)
4        Transformed data shape       (15479, 26)
5   Transformed train set shape       (10835, 26)
6    Transformed test set shape        (4644, 26)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              0ad7
2023-11-02 14:17:30,860:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,960:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:17:30,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:17:30,963:INFO:setup() successfully completed in 1.75s...............
2023-11-02 14:17:38,169:INFO:Initializing compare_models()
2023-11-02 14:17:38,169:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 14:17:38,169:INFO:Checking exceptions
2023-11-02 14:17:38,172:INFO:Preparing display monitor
2023-11-02 14:17:38,193:INFO:Initializing Linear Regression
2023-11-02 14:17:38,193:INFO:Total runtime is 0.0 minutes
2023-11-02 14:17:38,197:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:38,197:INFO:Initializing create_model()
2023-11-02 14:17:38,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:38,197:INFO:Checking exceptions
2023-11-02 14:17:38,198:INFO:Importing libraries
2023-11-02 14:17:38,198:INFO:Copying training dataset
2023-11-02 14:17:38,202:INFO:Defining folds
2023-11-02 14:17:38,202:INFO:Declaring metric variables
2023-11-02 14:17:38,204:INFO:Importing untrained model
2023-11-02 14:17:38,207:INFO:Linear Regression Imported successfully
2023-11-02 14:17:38,216:INFO:Starting cross validation
2023-11-02 14:17:38,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:38,818:INFO:Calculating mean and std
2023-11-02 14:17:38,819:INFO:Creating metrics dataframe
2023-11-02 14:17:38,822:INFO:Uploading results into container
2023-11-02 14:17:38,823:INFO:Uploading model into container now
2023-11-02 14:17:38,824:INFO:_master_model_container: 1
2023-11-02 14:17:38,824:INFO:_display_container: 2
2023-11-02 14:17:38,824:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 14:17:38,824:INFO:create_model() successfully completed......................................
2023-11-02 14:17:39,042:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:39,042:INFO:Creating metrics dataframe
2023-11-02 14:17:39,052:INFO:Initializing Lasso Regression
2023-11-02 14:17:39,052:INFO:Total runtime is 0.014305571715037027 minutes
2023-11-02 14:17:39,055:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:39,056:INFO:Initializing create_model()
2023-11-02 14:17:39,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:39,056:INFO:Checking exceptions
2023-11-02 14:17:39,056:INFO:Importing libraries
2023-11-02 14:17:39,056:INFO:Copying training dataset
2023-11-02 14:17:39,059:INFO:Defining folds
2023-11-02 14:17:39,059:INFO:Declaring metric variables
2023-11-02 14:17:39,062:INFO:Importing untrained model
2023-11-02 14:17:39,067:INFO:Lasso Regression Imported successfully
2023-11-02 14:17:39,104:INFO:Starting cross validation
2023-11-02 14:17:39,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:39,588:INFO:Calculating mean and std
2023-11-02 14:17:39,590:INFO:Creating metrics dataframe
2023-11-02 14:17:39,592:INFO:Uploading results into container
2023-11-02 14:17:39,592:INFO:Uploading model into container now
2023-11-02 14:17:39,593:INFO:_master_model_container: 2
2023-11-02 14:17:39,593:INFO:_display_container: 2
2023-11-02 14:17:39,593:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 14:17:39,593:INFO:create_model() successfully completed......................................
2023-11-02 14:17:39,782:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:39,782:INFO:Creating metrics dataframe
2023-11-02 14:17:39,789:INFO:Initializing Ridge Regression
2023-11-02 14:17:39,789:INFO:Total runtime is 0.026597583293914796 minutes
2023-11-02 14:17:39,792:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:39,792:INFO:Initializing create_model()
2023-11-02 14:17:39,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:39,793:INFO:Checking exceptions
2023-11-02 14:17:39,793:INFO:Importing libraries
2023-11-02 14:17:39,793:INFO:Copying training dataset
2023-11-02 14:17:39,800:INFO:Defining folds
2023-11-02 14:17:39,801:INFO:Declaring metric variables
2023-11-02 14:17:39,804:INFO:Importing untrained model
2023-11-02 14:17:39,807:INFO:Ridge Regression Imported successfully
2023-11-02 14:17:39,813:INFO:Starting cross validation
2023-11-02 14:17:39,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:39,988:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.56014e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:39,993:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.43202e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,001:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.5884e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,003:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.4009e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,005:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.24886e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,005:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.31257e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,011:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.27716e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,012:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75775e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,119:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.23155e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,127:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.41253e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:17:40,156:INFO:Calculating mean and std
2023-11-02 14:17:40,157:INFO:Creating metrics dataframe
2023-11-02 14:17:40,159:INFO:Uploading results into container
2023-11-02 14:17:40,160:INFO:Uploading model into container now
2023-11-02 14:17:40,160:INFO:_master_model_container: 3
2023-11-02 14:17:40,160:INFO:_display_container: 2
2023-11-02 14:17:40,161:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 14:17:40,161:INFO:create_model() successfully completed......................................
2023-11-02 14:17:40,303:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:40,303:INFO:Creating metrics dataframe
2023-11-02 14:17:40,310:INFO:Initializing Elastic Net
2023-11-02 14:17:40,310:INFO:Total runtime is 0.03527781168619792 minutes
2023-11-02 14:17:40,312:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:40,312:INFO:Initializing create_model()
2023-11-02 14:17:40,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:40,313:INFO:Checking exceptions
2023-11-02 14:17:40,313:INFO:Importing libraries
2023-11-02 14:17:40,313:INFO:Copying training dataset
2023-11-02 14:17:40,320:INFO:Defining folds
2023-11-02 14:17:40,320:INFO:Declaring metric variables
2023-11-02 14:17:40,322:INFO:Importing untrained model
2023-11-02 14:17:40,326:INFO:Elastic Net Imported successfully
2023-11-02 14:17:40,334:INFO:Starting cross validation
2023-11-02 14:17:40,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:40,681:INFO:Calculating mean and std
2023-11-02 14:17:40,684:INFO:Creating metrics dataframe
2023-11-02 14:17:40,686:INFO:Uploading results into container
2023-11-02 14:17:40,687:INFO:Uploading model into container now
2023-11-02 14:17:40,687:INFO:_master_model_container: 4
2023-11-02 14:17:40,687:INFO:_display_container: 2
2023-11-02 14:17:40,688:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 14:17:40,688:INFO:create_model() successfully completed......................................
2023-11-02 14:17:40,825:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:40,825:INFO:Creating metrics dataframe
2023-11-02 14:17:40,832:INFO:Initializing Least Angle Regression
2023-11-02 14:17:40,832:INFO:Total runtime is 0.04397220214207967 minutes
2023-11-02 14:17:40,837:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:40,837:INFO:Initializing create_model()
2023-11-02 14:17:40,837:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:40,837:INFO:Checking exceptions
2023-11-02 14:17:40,837:INFO:Importing libraries
2023-11-02 14:17:40,837:INFO:Copying training dataset
2023-11-02 14:17:40,841:INFO:Defining folds
2023-11-02 14:17:40,841:INFO:Declaring metric variables
2023-11-02 14:17:40,844:INFO:Importing untrained model
2023-11-02 14:17:40,850:INFO:Least Angle Regression Imported successfully
2023-11-02 14:17:40,856:INFO:Starting cross validation
2023-11-02 14:17:40,858:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:41,207:INFO:Calculating mean and std
2023-11-02 14:17:41,208:INFO:Creating metrics dataframe
2023-11-02 14:17:41,210:INFO:Uploading results into container
2023-11-02 14:17:41,211:INFO:Uploading model into container now
2023-11-02 14:17:41,211:INFO:_master_model_container: 5
2023-11-02 14:17:41,211:INFO:_display_container: 2
2023-11-02 14:17:41,211:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 14:17:41,212:INFO:create_model() successfully completed......................................
2023-11-02 14:17:41,360:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:41,360:INFO:Creating metrics dataframe
2023-11-02 14:17:41,369:INFO:Initializing Lasso Least Angle Regression
2023-11-02 14:17:41,369:INFO:Total runtime is 0.05293523073196411 minutes
2023-11-02 14:17:41,372:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:41,372:INFO:Initializing create_model()
2023-11-02 14:17:41,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:41,372:INFO:Checking exceptions
2023-11-02 14:17:41,372:INFO:Importing libraries
2023-11-02 14:17:41,372:INFO:Copying training dataset
2023-11-02 14:17:41,378:INFO:Defining folds
2023-11-02 14:17:41,378:INFO:Declaring metric variables
2023-11-02 14:17:41,380:INFO:Importing untrained model
2023-11-02 14:17:41,386:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 14:17:41,392:INFO:Starting cross validation
2023-11-02 14:17:41,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:41,742:INFO:Calculating mean and std
2023-11-02 14:17:41,743:INFO:Creating metrics dataframe
2023-11-02 14:17:41,746:INFO:Uploading results into container
2023-11-02 14:17:41,746:INFO:Uploading model into container now
2023-11-02 14:17:41,747:INFO:_master_model_container: 6
2023-11-02 14:17:41,747:INFO:_display_container: 2
2023-11-02 14:17:41,747:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 14:17:41,747:INFO:create_model() successfully completed......................................
2023-11-02 14:17:41,893:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:41,893:INFO:Creating metrics dataframe
2023-11-02 14:17:41,902:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 14:17:41,902:INFO:Total runtime is 0.06180570522944132 minutes
2023-11-02 14:17:41,904:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:41,905:INFO:Initializing create_model()
2023-11-02 14:17:41,905:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:41,905:INFO:Checking exceptions
2023-11-02 14:17:41,905:INFO:Importing libraries
2023-11-02 14:17:41,905:INFO:Copying training dataset
2023-11-02 14:17:41,910:INFO:Defining folds
2023-11-02 14:17:41,910:INFO:Declaring metric variables
2023-11-02 14:17:41,912:INFO:Importing untrained model
2023-11-02 14:17:41,915:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 14:17:41,924:INFO:Starting cross validation
2023-11-02 14:17:41,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:42,269:INFO:Calculating mean and std
2023-11-02 14:17:42,270:INFO:Creating metrics dataframe
2023-11-02 14:17:42,272:INFO:Uploading results into container
2023-11-02 14:17:42,273:INFO:Uploading model into container now
2023-11-02 14:17:42,273:INFO:_master_model_container: 7
2023-11-02 14:17:42,273:INFO:_display_container: 2
2023-11-02 14:17:42,274:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 14:17:42,274:INFO:create_model() successfully completed......................................
2023-11-02 14:17:42,413:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:42,413:INFO:Creating metrics dataframe
2023-11-02 14:17:42,422:INFO:Initializing Bayesian Ridge
2023-11-02 14:17:42,422:INFO:Total runtime is 0.07047642866770426 minutes
2023-11-02 14:17:42,424:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:42,425:INFO:Initializing create_model()
2023-11-02 14:17:42,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:42,425:INFO:Checking exceptions
2023-11-02 14:17:42,425:INFO:Importing libraries
2023-11-02 14:17:42,425:INFO:Copying training dataset
2023-11-02 14:17:42,430:INFO:Defining folds
2023-11-02 14:17:42,430:INFO:Declaring metric variables
2023-11-02 14:17:42,434:INFO:Importing untrained model
2023-11-02 14:17:42,438:INFO:Bayesian Ridge Imported successfully
2023-11-02 14:17:42,444:INFO:Starting cross validation
2023-11-02 14:17:42,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:42,795:INFO:Calculating mean and std
2023-11-02 14:17:42,796:INFO:Creating metrics dataframe
2023-11-02 14:17:42,798:INFO:Uploading results into container
2023-11-02 14:17:42,799:INFO:Uploading model into container now
2023-11-02 14:17:42,799:INFO:_master_model_container: 8
2023-11-02 14:17:42,799:INFO:_display_container: 2
2023-11-02 14:17:42,800:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 14:17:42,801:INFO:create_model() successfully completed......................................
2023-11-02 14:17:42,945:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:42,945:INFO:Creating metrics dataframe
2023-11-02 14:17:42,955:INFO:Initializing Passive Aggressive Regressor
2023-11-02 14:17:42,955:INFO:Total runtime is 0.07935527563095092 minutes
2023-11-02 14:17:42,958:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:42,959:INFO:Initializing create_model()
2023-11-02 14:17:42,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:42,959:INFO:Checking exceptions
2023-11-02 14:17:42,959:INFO:Importing libraries
2023-11-02 14:17:42,959:INFO:Copying training dataset
2023-11-02 14:17:42,962:INFO:Defining folds
2023-11-02 14:17:42,962:INFO:Declaring metric variables
2023-11-02 14:17:42,965:INFO:Importing untrained model
2023-11-02 14:17:42,971:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 14:17:42,978:INFO:Starting cross validation
2023-11-02 14:17:42,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:43,363:INFO:Calculating mean and std
2023-11-02 14:17:43,364:INFO:Creating metrics dataframe
2023-11-02 14:17:43,367:INFO:Uploading results into container
2023-11-02 14:17:43,368:INFO:Uploading model into container now
2023-11-02 14:17:43,369:INFO:_master_model_container: 9
2023-11-02 14:17:43,369:INFO:_display_container: 2
2023-11-02 14:17:43,369:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 14:17:43,369:INFO:create_model() successfully completed......................................
2023-11-02 14:17:43,503:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:43,503:INFO:Creating metrics dataframe
2023-11-02 14:17:43,511:INFO:Initializing Huber Regressor
2023-11-02 14:17:43,511:INFO:Total runtime is 0.08862382173538207 minutes
2023-11-02 14:17:43,515:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:43,515:INFO:Initializing create_model()
2023-11-02 14:17:43,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:43,515:INFO:Checking exceptions
2023-11-02 14:17:43,515:INFO:Importing libraries
2023-11-02 14:17:43,515:INFO:Copying training dataset
2023-11-02 14:17:43,521:INFO:Defining folds
2023-11-02 14:17:43,522:INFO:Declaring metric variables
2023-11-02 14:17:43,525:INFO:Importing untrained model
2023-11-02 14:17:43,528:INFO:Huber Regressor Imported successfully
2023-11-02 14:17:43,536:INFO:Starting cross validation
2023-11-02 14:17:43,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:44,405:INFO:Calculating mean and std
2023-11-02 14:17:44,406:INFO:Creating metrics dataframe
2023-11-02 14:17:44,409:INFO:Uploading results into container
2023-11-02 14:17:44,410:INFO:Uploading model into container now
2023-11-02 14:17:44,410:INFO:_master_model_container: 10
2023-11-02 14:17:44,410:INFO:_display_container: 2
2023-11-02 14:17:44,411:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 14:17:44,411:INFO:create_model() successfully completed......................................
2023-11-02 14:17:44,565:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:44,565:INFO:Creating metrics dataframe
2023-11-02 14:17:44,577:INFO:Initializing K Neighbors Regressor
2023-11-02 14:17:44,577:INFO:Total runtime is 0.1063966910044352 minutes
2023-11-02 14:17:44,580:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:44,580:INFO:Initializing create_model()
2023-11-02 14:17:44,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:44,580:INFO:Checking exceptions
2023-11-02 14:17:44,580:INFO:Importing libraries
2023-11-02 14:17:44,580:INFO:Copying training dataset
2023-11-02 14:17:44,587:INFO:Defining folds
2023-11-02 14:17:44,587:INFO:Declaring metric variables
2023-11-02 14:17:44,590:INFO:Importing untrained model
2023-11-02 14:17:44,595:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:17:44,600:INFO:Starting cross validation
2023-11-02 14:17:44,604:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:45,150:INFO:Calculating mean and std
2023-11-02 14:17:45,152:INFO:Creating metrics dataframe
2023-11-02 14:17:45,158:INFO:Uploading results into container
2023-11-02 14:17:45,159:INFO:Uploading model into container now
2023-11-02 14:17:45,159:INFO:_master_model_container: 11
2023-11-02 14:17:45,160:INFO:_display_container: 2
2023-11-02 14:17:45,160:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:17:45,160:INFO:create_model() successfully completed......................................
2023-11-02 14:17:45,349:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:45,349:INFO:Creating metrics dataframe
2023-11-02 14:17:45,359:INFO:Initializing Decision Tree Regressor
2023-11-02 14:17:45,359:INFO:Total runtime is 0.11942379077275592 minutes
2023-11-02 14:17:45,362:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:45,362:INFO:Initializing create_model()
2023-11-02 14:17:45,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:45,362:INFO:Checking exceptions
2023-11-02 14:17:45,362:INFO:Importing libraries
2023-11-02 14:17:45,363:INFO:Copying training dataset
2023-11-02 14:17:45,367:INFO:Defining folds
2023-11-02 14:17:45,367:INFO:Declaring metric variables
2023-11-02 14:17:45,374:INFO:Importing untrained model
2023-11-02 14:17:45,378:INFO:Decision Tree Regressor Imported successfully
2023-11-02 14:17:45,385:INFO:Starting cross validation
2023-11-02 14:17:45,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:45,859:INFO:Calculating mean and std
2023-11-02 14:17:45,860:INFO:Creating metrics dataframe
2023-11-02 14:17:45,862:INFO:Uploading results into container
2023-11-02 14:17:45,862:INFO:Uploading model into container now
2023-11-02 14:17:45,863:INFO:_master_model_container: 12
2023-11-02 14:17:45,863:INFO:_display_container: 2
2023-11-02 14:17:45,863:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 14:17:45,863:INFO:create_model() successfully completed......................................
2023-11-02 14:17:46,018:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:46,019:INFO:Creating metrics dataframe
2023-11-02 14:17:46,034:INFO:Initializing Random Forest Regressor
2023-11-02 14:17:46,034:INFO:Total runtime is 0.13067022164662676 minutes
2023-11-02 14:17:46,042:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:46,043:INFO:Initializing create_model()
2023-11-02 14:17:46,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:46,043:INFO:Checking exceptions
2023-11-02 14:17:46,043:INFO:Importing libraries
2023-11-02 14:17:46,043:INFO:Copying training dataset
2023-11-02 14:17:46,049:INFO:Defining folds
2023-11-02 14:17:46,049:INFO:Declaring metric variables
2023-11-02 14:17:46,056:INFO:Importing untrained model
2023-11-02 14:17:46,062:INFO:Random Forest Regressor Imported successfully
2023-11-02 14:17:46,069:INFO:Starting cross validation
2023-11-02 14:17:46,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:54,676:INFO:Calculating mean and std
2023-11-02 14:17:54,679:INFO:Creating metrics dataframe
2023-11-02 14:17:54,682:INFO:Uploading results into container
2023-11-02 14:17:54,683:INFO:Uploading model into container now
2023-11-02 14:17:54,683:INFO:_master_model_container: 13
2023-11-02 14:17:54,683:INFO:_display_container: 2
2023-11-02 14:17:54,684:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 14:17:54,684:INFO:create_model() successfully completed......................................
2023-11-02 14:17:54,816:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:54,816:INFO:Creating metrics dataframe
2023-11-02 14:17:54,825:INFO:Initializing Extra Trees Regressor
2023-11-02 14:17:54,825:INFO:Total runtime is 0.2771870493888855 minutes
2023-11-02 14:17:54,830:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:54,830:INFO:Initializing create_model()
2023-11-02 14:17:54,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:54,830:INFO:Checking exceptions
2023-11-02 14:17:54,830:INFO:Importing libraries
2023-11-02 14:17:54,830:INFO:Copying training dataset
2023-11-02 14:17:54,835:INFO:Defining folds
2023-11-02 14:17:54,835:INFO:Declaring metric variables
2023-11-02 14:17:54,839:INFO:Importing untrained model
2023-11-02 14:17:54,842:INFO:Extra Trees Regressor Imported successfully
2023-11-02 14:17:54,849:INFO:Starting cross validation
2023-11-02 14:17:54,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:17:59,339:INFO:Calculating mean and std
2023-11-02 14:17:59,341:INFO:Creating metrics dataframe
2023-11-02 14:17:59,345:INFO:Uploading results into container
2023-11-02 14:17:59,345:INFO:Uploading model into container now
2023-11-02 14:17:59,346:INFO:_master_model_container: 14
2023-11-02 14:17:59,346:INFO:_display_container: 2
2023-11-02 14:17:59,346:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 14:17:59,347:INFO:create_model() successfully completed......................................
2023-11-02 14:17:59,568:INFO:SubProcess create_model() end ==================================
2023-11-02 14:17:59,568:INFO:Creating metrics dataframe
2023-11-02 14:17:59,577:INFO:Initializing AdaBoost Regressor
2023-11-02 14:17:59,577:INFO:Total runtime is 0.3563967704772949 minutes
2023-11-02 14:17:59,580:INFO:SubProcess create_model() called ==================================
2023-11-02 14:17:59,580:INFO:Initializing create_model()
2023-11-02 14:17:59,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:17:59,580:INFO:Checking exceptions
2023-11-02 14:17:59,580:INFO:Importing libraries
2023-11-02 14:17:59,581:INFO:Copying training dataset
2023-11-02 14:17:59,587:INFO:Defining folds
2023-11-02 14:17:59,587:INFO:Declaring metric variables
2023-11-02 14:17:59,589:INFO:Importing untrained model
2023-11-02 14:17:59,593:INFO:AdaBoost Regressor Imported successfully
2023-11-02 14:17:59,597:INFO:Starting cross validation
2023-11-02 14:17:59,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:18:01,387:INFO:Calculating mean and std
2023-11-02 14:18:01,390:INFO:Creating metrics dataframe
2023-11-02 14:18:01,393:INFO:Uploading results into container
2023-11-02 14:18:01,394:INFO:Uploading model into container now
2023-11-02 14:18:01,394:INFO:_master_model_container: 15
2023-11-02 14:18:01,394:INFO:_display_container: 2
2023-11-02 14:18:01,394:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 14:18:01,394:INFO:create_model() successfully completed......................................
2023-11-02 14:18:01,542:INFO:SubProcess create_model() end ==================================
2023-11-02 14:18:01,543:INFO:Creating metrics dataframe
2023-11-02 14:18:01,554:INFO:Initializing Gradient Boosting Regressor
2023-11-02 14:18:01,554:INFO:Total runtime is 0.3893423795700073 minutes
2023-11-02 14:18:01,557:INFO:SubProcess create_model() called ==================================
2023-11-02 14:18:01,557:INFO:Initializing create_model()
2023-11-02 14:18:01,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:18:01,557:INFO:Checking exceptions
2023-11-02 14:18:01,557:INFO:Importing libraries
2023-11-02 14:18:01,557:INFO:Copying training dataset
2023-11-02 14:18:01,563:INFO:Defining folds
2023-11-02 14:18:01,563:INFO:Declaring metric variables
2023-11-02 14:18:01,567:INFO:Importing untrained model
2023-11-02 14:18:01,572:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 14:18:01,576:INFO:Starting cross validation
2023-11-02 14:18:01,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:18:04,990:INFO:Calculating mean and std
2023-11-02 14:18:04,991:INFO:Creating metrics dataframe
2023-11-02 14:18:04,993:INFO:Uploading results into container
2023-11-02 14:18:04,993:INFO:Uploading model into container now
2023-11-02 14:18:04,994:INFO:_master_model_container: 16
2023-11-02 14:18:04,994:INFO:_display_container: 2
2023-11-02 14:18:04,994:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 14:18:04,994:INFO:create_model() successfully completed......................................
2023-11-02 14:18:05,135:INFO:SubProcess create_model() end ==================================
2023-11-02 14:18:05,135:INFO:Creating metrics dataframe
2023-11-02 14:18:05,145:INFO:Initializing Extreme Gradient Boosting
2023-11-02 14:18:05,145:INFO:Total runtime is 0.44919877449671425 minutes
2023-11-02 14:18:05,148:INFO:SubProcess create_model() called ==================================
2023-11-02 14:18:05,149:INFO:Initializing create_model()
2023-11-02 14:18:05,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:18:05,149:INFO:Checking exceptions
2023-11-02 14:18:05,149:INFO:Importing libraries
2023-11-02 14:18:05,149:INFO:Copying training dataset
2023-11-02 14:18:05,153:INFO:Defining folds
2023-11-02 14:18:05,154:INFO:Declaring metric variables
2023-11-02 14:18:05,159:INFO:Importing untrained model
2023-11-02 14:18:05,162:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:18:05,167:INFO:Starting cross validation
2023-11-02 14:18:05,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:18:06,318:INFO:Calculating mean and std
2023-11-02 14:18:06,320:INFO:Creating metrics dataframe
2023-11-02 14:18:06,325:INFO:Uploading results into container
2023-11-02 14:18:06,326:INFO:Uploading model into container now
2023-11-02 14:18:06,326:INFO:_master_model_container: 17
2023-11-02 14:18:06,326:INFO:_display_container: 2
2023-11-02 14:18:06,328:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:18:06,328:INFO:create_model() successfully completed......................................
2023-11-02 14:18:06,507:INFO:SubProcess create_model() end ==================================
2023-11-02 14:18:06,508:INFO:Creating metrics dataframe
2023-11-02 14:18:06,517:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 14:18:06,518:INFO:Total runtime is 0.47208491563796995 minutes
2023-11-02 14:18:06,524:INFO:SubProcess create_model() called ==================================
2023-11-02 14:18:06,524:INFO:Initializing create_model()
2023-11-02 14:18:06,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:18:06,524:INFO:Checking exceptions
2023-11-02 14:18:06,524:INFO:Importing libraries
2023-11-02 14:18:06,524:INFO:Copying training dataset
2023-11-02 14:18:06,530:INFO:Defining folds
2023-11-02 14:18:06,530:INFO:Declaring metric variables
2023-11-02 14:18:06,534:INFO:Importing untrained model
2023-11-02 14:18:06,536:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 14:18:06,542:INFO:Starting cross validation
2023-11-02 14:18:06,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:18:07,824:INFO:Calculating mean and std
2023-11-02 14:18:07,825:INFO:Creating metrics dataframe
2023-11-02 14:18:07,828:INFO:Uploading results into container
2023-11-02 14:18:07,829:INFO:Uploading model into container now
2023-11-02 14:18:07,830:INFO:_master_model_container: 18
2023-11-02 14:18:07,830:INFO:_display_container: 2
2023-11-02 14:18:07,830:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 14:18:07,830:INFO:create_model() successfully completed......................................
2023-11-02 14:18:08,013:INFO:SubProcess create_model() end ==================================
2023-11-02 14:18:08,013:INFO:Creating metrics dataframe
2023-11-02 14:18:08,025:INFO:Initializing Dummy Regressor
2023-11-02 14:18:08,025:INFO:Total runtime is 0.4971936265627543 minutes
2023-11-02 14:18:08,028:INFO:SubProcess create_model() called ==================================
2023-11-02 14:18:08,028:INFO:Initializing create_model()
2023-11-02 14:18:08,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B8652EA40>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:18:08,029:INFO:Checking exceptions
2023-11-02 14:18:08,029:INFO:Importing libraries
2023-11-02 14:18:08,029:INFO:Copying training dataset
2023-11-02 14:18:08,033:INFO:Defining folds
2023-11-02 14:18:08,034:INFO:Declaring metric variables
2023-11-02 14:18:08,037:INFO:Importing untrained model
2023-11-02 14:18:08,043:INFO:Dummy Regressor Imported successfully
2023-11-02 14:18:08,048:INFO:Starting cross validation
2023-11-02 14:18:08,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:18:08,379:INFO:Calculating mean and std
2023-11-02 14:18:08,380:INFO:Creating metrics dataframe
2023-11-02 14:18:08,383:INFO:Uploading results into container
2023-11-02 14:18:08,383:INFO:Uploading model into container now
2023-11-02 14:18:08,384:INFO:_master_model_container: 19
2023-11-02 14:18:08,384:INFO:_display_container: 2
2023-11-02 14:18:08,384:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 14:18:08,384:INFO:create_model() successfully completed......................................
2023-11-02 14:18:08,520:INFO:SubProcess create_model() end ==================================
2023-11-02 14:18:08,520:INFO:Creating metrics dataframe
2023-11-02 14:18:08,540:INFO:Initializing create_model()
2023-11-02 14:18:08,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:18:08,540:INFO:Checking exceptions
2023-11-02 14:18:08,543:INFO:Importing libraries
2023-11-02 14:18:08,543:INFO:Copying training dataset
2023-11-02 14:18:08,547:INFO:Defining folds
2023-11-02 14:18:08,547:INFO:Declaring metric variables
2023-11-02 14:18:08,547:INFO:Importing untrained model
2023-11-02 14:18:08,547:INFO:Declaring custom model
2023-11-02 14:18:08,548:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:18:08,549:INFO:Cross validation set to False
2023-11-02 14:18:08,549:INFO:Fitting Model
2023-11-02 14:18:08,622:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:18:08,622:INFO:create_model() successfully completed......................................
2023-11-02 14:18:08,782:INFO:_master_model_container: 19
2023-11-02 14:18:08,783:INFO:_display_container: 2
2023-11-02 14:18:08,783:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:18:08,783:INFO:compare_models() successfully completed......................................
2023-11-02 14:18:50,077:INFO:Initializing evaluate_model()
2023-11-02 14:18:50,077:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 14:18:50,086:INFO:Initializing plot_model()
2023-11-02 14:18:50,086:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:18:50,087:INFO:Checking exceptions
2023-11-02 14:18:50,090:INFO:Preloading libraries
2023-11-02 14:18:50,092:INFO:Copying training dataset
2023-11-02 14:18:50,092:INFO:Plot type: pipeline
2023-11-02 14:18:50,210:INFO:Visual Rendered Successfully
2023-11-02 14:18:50,384:INFO:plot_model() successfully completed......................................
2023-11-02 14:18:52,956:INFO:Initializing plot_model()
2023-11-02 14:18:52,956:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:18:52,956:INFO:Checking exceptions
2023-11-02 14:18:55,935:INFO:Initializing plot_model()
2023-11-02 14:18:55,936:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:18:55,936:INFO:Checking exceptions
2023-11-02 14:18:58,293:INFO:Initializing plot_model()
2023-11-02 14:18:58,295:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:18:58,295:INFO:Checking exceptions
2023-11-02 14:19:00,684:INFO:Initializing plot_model()
2023-11-02 14:19:00,684:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:19:00,684:INFO:Checking exceptions
2023-11-02 14:19:00,688:INFO:Preloading libraries
2023-11-02 14:19:00,689:INFO:Copying training dataset
2023-11-02 14:19:00,689:INFO:Plot type: vc
2023-11-02 14:19:00,689:INFO:Determining param_name
2023-11-02 14:19:00,689:INFO:param_name: n_neighbors
2023-11-02 14:19:00,877:INFO:Fitting Model
2023-11-02 14:19:11,007:INFO:Visual Rendered Successfully
2023-11-02 14:19:11,171:INFO:plot_model() successfully completed......................................
2023-11-02 14:23:05,146:INFO:Initializing plot_model()
2023-11-02 14:23:05,147:INFO:plot_model(plot=forecast, fold=None, verbose=True, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:23:05,147:INFO:Checking exceptions
2023-11-02 14:26:50,932:INFO:Initializing tune_model()
2023-11-02 14:26:50,932:INFO:tune_model(estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>)
2023-11-02 14:26:50,932:INFO:Checking exceptions
2023-11-02 14:26:50,951:INFO:Copying training dataset
2023-11-02 14:26:50,957:INFO:Checking base model
2023-11-02 14:26:50,959:INFO:Base model : K Neighbors Regressor
2023-11-02 14:26:50,962:INFO:Declaring metric variables
2023-11-02 14:26:50,965:INFO:Defining Hyperparameters
2023-11-02 14:26:51,184:INFO:Tuning with n_jobs=-1
2023-11-02 14:26:51,186:INFO:Initializing RandomizedSearchCV
2023-11-02 14:27:04,835:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 4, 'actual_estimator__metric': 'euclidean'}
2023-11-02 14:27:04,836:INFO:Hyperparameter search completed
2023-11-02 14:27:04,836:INFO:SubProcess create_model() called ==================================
2023-11-02 14:27:04,836:INFO:Initializing create_model()
2023-11-02 14:27:04,836:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867F9F60>, model_only=True, return_train_score=False, kwargs={'weights': 'uniform', 'n_neighbors': 4, 'metric': 'euclidean'})
2023-11-02 14:27:04,836:INFO:Checking exceptions
2023-11-02 14:27:04,837:INFO:Importing libraries
2023-11-02 14:27:04,837:INFO:Copying training dataset
2023-11-02 14:27:04,842:INFO:Defining folds
2023-11-02 14:27:04,842:INFO:Declaring metric variables
2023-11-02 14:27:04,844:INFO:Importing untrained model
2023-11-02 14:27:04,844:INFO:Declaring custom model
2023-11-02 14:27:04,850:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:27:04,855:INFO:Starting cross validation
2023-11-02 14:27:04,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:27:05,294:INFO:Calculating mean and std
2023-11-02 14:27:05,296:INFO:Creating metrics dataframe
2023-11-02 14:27:05,302:INFO:Finalizing model
2023-11-02 14:27:05,379:INFO:Uploading results into container
2023-11-02 14:27:05,379:INFO:Uploading model into container now
2023-11-02 14:27:05,381:INFO:_master_model_container: 20
2023-11-02 14:27:05,381:INFO:_display_container: 3
2023-11-02 14:27:05,381:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='euclidean',
                    metric_params=None, n_jobs=-1, n_neighbors=4, p=2,
                    weights='uniform')
2023-11-02 14:27:05,381:INFO:create_model() successfully completed......................................
2023-11-02 14:27:05,541:INFO:SubProcess create_model() end ==================================
2023-11-02 14:27:05,542:INFO:choose_better activated
2023-11-02 14:27:05,544:INFO:SubProcess create_model() called ==================================
2023-11-02 14:27:05,545:INFO:Initializing create_model()
2023-11-02 14:27:05,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:27:05,545:INFO:Checking exceptions
2023-11-02 14:27:05,547:INFO:Importing libraries
2023-11-02 14:27:05,547:INFO:Copying training dataset
2023-11-02 14:27:05,553:INFO:Defining folds
2023-11-02 14:27:05,553:INFO:Declaring metric variables
2023-11-02 14:27:05,553:INFO:Importing untrained model
2023-11-02 14:27:05,553:INFO:Declaring custom model
2023-11-02 14:27:05,553:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:27:05,553:INFO:Starting cross validation
2023-11-02 14:27:05,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:27:06,014:INFO:Calculating mean and std
2023-11-02 14:27:06,015:INFO:Creating metrics dataframe
2023-11-02 14:27:06,019:INFO:Finalizing model
2023-11-02 14:27:06,102:INFO:Uploading results into container
2023-11-02 14:27:06,103:INFO:Uploading model into container now
2023-11-02 14:27:06,103:INFO:_master_model_container: 21
2023-11-02 14:27:06,103:INFO:_display_container: 4
2023-11-02 14:27:06,103:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:27:06,103:INFO:create_model() successfully completed......................................
2023-11-02 14:27:06,270:INFO:SubProcess create_model() end ==================================
2023-11-02 14:27:06,270:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform') result for R2 is 0.9905
2023-11-02 14:27:06,270:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='euclidean',
                    metric_params=None, n_jobs=-1, n_neighbors=4, p=2,
                    weights='uniform') result for R2 is 0.9914
2023-11-02 14:27:06,271:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='euclidean',
                    metric_params=None, n_jobs=-1, n_neighbors=4, p=2,
                    weights='uniform') is best model
2023-11-02 14:27:06,271:INFO:choose_better completed
2023-11-02 14:27:06,277:INFO:_master_model_container: 21
2023-11-02 14:27:06,278:INFO:_display_container: 3
2023-11-02 14:27:06,278:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='euclidean',
                    metric_params=None, n_jobs=-1, n_neighbors=4, p=2,
                    weights='uniform')
2023-11-02 14:27:06,278:INFO:tune_model() successfully completed......................................
2023-11-02 14:29:43,094:INFO:Initializing plot_model()
2023-11-02 14:29:43,094:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:29:43,094:INFO:Checking exceptions
2023-11-02 14:33:58,338:INFO:Initializing compare_models()
2023-11-02 14:33:58,339:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 14:33:58,339:INFO:Checking exceptions
2023-11-02 14:33:58,343:INFO:Preparing display monitor
2023-11-02 14:33:58,368:INFO:Initializing Linear Regression
2023-11-02 14:33:58,368:INFO:Total runtime is 1.6224384307861327e-05 minutes
2023-11-02 14:33:58,372:INFO:SubProcess create_model() called ==================================
2023-11-02 14:33:58,373:INFO:Initializing create_model()
2023-11-02 14:33:58,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:33:58,373:INFO:Checking exceptions
2023-11-02 14:33:58,373:INFO:Importing libraries
2023-11-02 14:33:58,373:INFO:Copying training dataset
2023-11-02 14:33:58,379:INFO:Defining folds
2023-11-02 14:33:58,379:INFO:Declaring metric variables
2023-11-02 14:33:58,382:INFO:Importing untrained model
2023-11-02 14:33:58,385:INFO:Linear Regression Imported successfully
2023-11-02 14:33:58,394:INFO:Starting cross validation
2023-11-02 14:33:58,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:02,309:INFO:Calculating mean and std
2023-11-02 14:34:02,310:INFO:Creating metrics dataframe
2023-11-02 14:34:02,313:INFO:Uploading results into container
2023-11-02 14:34:02,314:INFO:Uploading model into container now
2023-11-02 14:34:02,314:INFO:_master_model_container: 22
2023-11-02 14:34:02,314:INFO:_display_container: 4
2023-11-02 14:34:02,314:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 14:34:02,314:INFO:create_model() successfully completed......................................
2023-11-02 14:34:02,458:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:02,458:INFO:Creating metrics dataframe
2023-11-02 14:34:02,463:INFO:Initializing Lasso Regression
2023-11-02 14:34:02,464:INFO:Total runtime is 0.06829462448755899 minutes
2023-11-02 14:34:02,466:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:02,467:INFO:Initializing create_model()
2023-11-02 14:34:02,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:02,467:INFO:Checking exceptions
2023-11-02 14:34:02,467:INFO:Importing libraries
2023-11-02 14:34:02,467:INFO:Copying training dataset
2023-11-02 14:34:02,471:INFO:Defining folds
2023-11-02 14:34:02,471:INFO:Declaring metric variables
2023-11-02 14:34:02,475:INFO:Importing untrained model
2023-11-02 14:34:02,479:INFO:Lasso Regression Imported successfully
2023-11-02 14:34:02,485:INFO:Starting cross validation
2023-11-02 14:34:02,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:02,888:INFO:Calculating mean and std
2023-11-02 14:34:02,889:INFO:Creating metrics dataframe
2023-11-02 14:34:02,893:INFO:Uploading results into container
2023-11-02 14:34:02,893:INFO:Uploading model into container now
2023-11-02 14:34:02,894:INFO:_master_model_container: 23
2023-11-02 14:34:02,894:INFO:_display_container: 4
2023-11-02 14:34:02,894:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 14:34:02,894:INFO:create_model() successfully completed......................................
2023-11-02 14:34:03,031:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:03,032:INFO:Creating metrics dataframe
2023-11-02 14:34:03,037:INFO:Initializing Ridge Regression
2023-11-02 14:34:03,037:INFO:Total runtime is 0.07784535487492879 minutes
2023-11-02 14:34:03,040:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:03,041:INFO:Initializing create_model()
2023-11-02 14:34:03,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:03,042:INFO:Checking exceptions
2023-11-02 14:34:03,042:INFO:Importing libraries
2023-11-02 14:34:03,042:INFO:Copying training dataset
2023-11-02 14:34:03,048:INFO:Defining folds
2023-11-02 14:34:03,048:INFO:Declaring metric variables
2023-11-02 14:34:03,051:INFO:Importing untrained model
2023-11-02 14:34:03,055:INFO:Ridge Regression Imported successfully
2023-11-02 14:34:03,063:INFO:Starting cross validation
2023-11-02 14:34:03,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:03,246:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.5884e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T


2023-11-02 14:34:03,246:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.24886e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,253:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.31257e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,254:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.4009e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,260:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75775e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,262:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.43202e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,269:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.27716e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,355:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.23155e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,368:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.41253e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 14:34:03,392:INFO:Calculating mean and std
2023-11-02 14:34:03,394:INFO:Creating metrics dataframe
2023-11-02 14:34:03,397:INFO:Uploading results into container
2023-11-02 14:34:03,397:INFO:Uploading model into container now
2023-11-02 14:34:03,397:INFO:_master_model_container: 24
2023-11-02 14:34:03,397:INFO:_display_container: 4
2023-11-02 14:34:03,397:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 14:34:03,397:INFO:create_model() successfully completed......................................
2023-11-02 14:34:03,562:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:03,562:INFO:Creating metrics dataframe
2023-11-02 14:34:03,569:INFO:Initializing Elastic Net
2023-11-02 14:34:03,569:INFO:Total runtime is 0.08670727411905924 minutes
2023-11-02 14:34:03,572:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:03,573:INFO:Initializing create_model()
2023-11-02 14:34:03,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:03,573:INFO:Checking exceptions
2023-11-02 14:34:03,573:INFO:Importing libraries
2023-11-02 14:34:03,573:INFO:Copying training dataset
2023-11-02 14:34:03,579:INFO:Defining folds
2023-11-02 14:34:03,580:INFO:Declaring metric variables
2023-11-02 14:34:03,584:INFO:Importing untrained model
2023-11-02 14:34:03,587:INFO:Elastic Net Imported successfully
2023-11-02 14:34:03,597:INFO:Starting cross validation
2023-11-02 14:34:03,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:03,961:INFO:Calculating mean and std
2023-11-02 14:34:03,962:INFO:Creating metrics dataframe
2023-11-02 14:34:03,964:INFO:Uploading results into container
2023-11-02 14:34:03,964:INFO:Uploading model into container now
2023-11-02 14:34:03,965:INFO:_master_model_container: 25
2023-11-02 14:34:03,965:INFO:_display_container: 4
2023-11-02 14:34:03,965:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 14:34:03,965:INFO:create_model() successfully completed......................................
2023-11-02 14:34:04,094:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:04,094:INFO:Creating metrics dataframe
2023-11-02 14:34:04,102:INFO:Initializing Least Angle Regression
2023-11-02 14:34:04,102:INFO:Total runtime is 0.0955917199452718 minutes
2023-11-02 14:34:04,105:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:04,106:INFO:Initializing create_model()
2023-11-02 14:34:04,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:04,106:INFO:Checking exceptions
2023-11-02 14:34:04,106:INFO:Importing libraries
2023-11-02 14:34:04,106:INFO:Copying training dataset
2023-11-02 14:34:04,113:INFO:Defining folds
2023-11-02 14:34:04,114:INFO:Declaring metric variables
2023-11-02 14:34:04,116:INFO:Importing untrained model
2023-11-02 14:34:04,119:INFO:Least Angle Regression Imported successfully
2023-11-02 14:34:04,126:INFO:Starting cross validation
2023-11-02 14:34:04,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:04,457:INFO:Calculating mean and std
2023-11-02 14:34:04,458:INFO:Creating metrics dataframe
2023-11-02 14:34:04,462:INFO:Uploading results into container
2023-11-02 14:34:04,462:INFO:Uploading model into container now
2023-11-02 14:34:04,462:INFO:_master_model_container: 26
2023-11-02 14:34:04,462:INFO:_display_container: 4
2023-11-02 14:34:04,462:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 14:34:04,462:INFO:create_model() successfully completed......................................
2023-11-02 14:34:04,593:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:04,593:INFO:Creating metrics dataframe
2023-11-02 14:34:04,601:INFO:Initializing Lasso Least Angle Regression
2023-11-02 14:34:04,601:INFO:Total runtime is 0.10390874544779458 minutes
2023-11-02 14:34:04,603:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:04,604:INFO:Initializing create_model()
2023-11-02 14:34:04,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:04,604:INFO:Checking exceptions
2023-11-02 14:34:04,604:INFO:Importing libraries
2023-11-02 14:34:04,604:INFO:Copying training dataset
2023-11-02 14:34:04,609:INFO:Defining folds
2023-11-02 14:34:04,610:INFO:Declaring metric variables
2023-11-02 14:34:04,615:INFO:Importing untrained model
2023-11-02 14:34:04,617:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 14:34:04,621:INFO:Starting cross validation
2023-11-02 14:34:04,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:04,949:INFO:Calculating mean and std
2023-11-02 14:34:04,950:INFO:Creating metrics dataframe
2023-11-02 14:34:04,953:INFO:Uploading results into container
2023-11-02 14:34:04,954:INFO:Uploading model into container now
2023-11-02 14:34:04,954:INFO:_master_model_container: 27
2023-11-02 14:34:04,954:INFO:_display_container: 4
2023-11-02 14:34:04,954:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 14:34:04,954:INFO:create_model() successfully completed......................................
2023-11-02 14:34:05,082:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:05,083:INFO:Creating metrics dataframe
2023-11-02 14:34:05,091:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 14:34:05,092:INFO:Total runtime is 0.11208242177963254 minutes
2023-11-02 14:34:05,097:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:05,097:INFO:Initializing create_model()
2023-11-02 14:34:05,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:05,097:INFO:Checking exceptions
2023-11-02 14:34:05,097:INFO:Importing libraries
2023-11-02 14:34:05,097:INFO:Copying training dataset
2023-11-02 14:34:05,102:INFO:Defining folds
2023-11-02 14:34:05,102:INFO:Declaring metric variables
2023-11-02 14:34:05,104:INFO:Importing untrained model
2023-11-02 14:34:05,107:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 14:34:05,114:INFO:Starting cross validation
2023-11-02 14:34:05,116:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:05,422:INFO:Calculating mean and std
2023-11-02 14:34:05,423:INFO:Creating metrics dataframe
2023-11-02 14:34:05,425:INFO:Uploading results into container
2023-11-02 14:34:05,427:INFO:Uploading model into container now
2023-11-02 14:34:05,427:INFO:_master_model_container: 28
2023-11-02 14:34:05,427:INFO:_display_container: 4
2023-11-02 14:34:05,428:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 14:34:05,428:INFO:create_model() successfully completed......................................
2023-11-02 14:34:05,555:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:05,555:INFO:Creating metrics dataframe
2023-11-02 14:34:05,564:INFO:Initializing Bayesian Ridge
2023-11-02 14:34:05,564:INFO:Total runtime is 0.11995765765508012 minutes
2023-11-02 14:34:05,568:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:05,569:INFO:Initializing create_model()
2023-11-02 14:34:05,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:05,569:INFO:Checking exceptions
2023-11-02 14:34:05,569:INFO:Importing libraries
2023-11-02 14:34:05,569:INFO:Copying training dataset
2023-11-02 14:34:05,574:INFO:Defining folds
2023-11-02 14:34:05,574:INFO:Declaring metric variables
2023-11-02 14:34:05,579:INFO:Importing untrained model
2023-11-02 14:34:05,582:INFO:Bayesian Ridge Imported successfully
2023-11-02 14:34:05,588:INFO:Starting cross validation
2023-11-02 14:34:05,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:05,915:INFO:Calculating mean and std
2023-11-02 14:34:05,916:INFO:Creating metrics dataframe
2023-11-02 14:34:05,919:INFO:Uploading results into container
2023-11-02 14:34:05,920:INFO:Uploading model into container now
2023-11-02 14:34:05,920:INFO:_master_model_container: 29
2023-11-02 14:34:05,920:INFO:_display_container: 4
2023-11-02 14:34:05,920:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 14:34:05,921:INFO:create_model() successfully completed......................................
2023-11-02 14:34:06,049:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:06,049:INFO:Creating metrics dataframe
2023-11-02 14:34:06,056:INFO:Initializing Passive Aggressive Regressor
2023-11-02 14:34:06,056:INFO:Total runtime is 0.1281471967697143 minutes
2023-11-02 14:34:06,058:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:06,058:INFO:Initializing create_model()
2023-11-02 14:34:06,058:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:06,058:INFO:Checking exceptions
2023-11-02 14:34:06,058:INFO:Importing libraries
2023-11-02 14:34:06,058:INFO:Copying training dataset
2023-11-02 14:34:06,065:INFO:Defining folds
2023-11-02 14:34:06,065:INFO:Declaring metric variables
2023-11-02 14:34:06,068:INFO:Importing untrained model
2023-11-02 14:34:06,072:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 14:34:06,081:INFO:Starting cross validation
2023-11-02 14:34:06,082:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:06,419:INFO:Calculating mean and std
2023-11-02 14:34:06,420:INFO:Creating metrics dataframe
2023-11-02 14:34:06,422:INFO:Uploading results into container
2023-11-02 14:34:06,422:INFO:Uploading model into container now
2023-11-02 14:34:06,422:INFO:_master_model_container: 30
2023-11-02 14:34:06,422:INFO:_display_container: 4
2023-11-02 14:34:06,423:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 14:34:06,423:INFO:create_model() successfully completed......................................
2023-11-02 14:34:06,553:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:06,553:INFO:Creating metrics dataframe
2023-11-02 14:34:06,566:INFO:Initializing Huber Regressor
2023-11-02 14:34:06,566:INFO:Total runtime is 0.13666103283564246 minutes
2023-11-02 14:34:06,569:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:06,569:INFO:Initializing create_model()
2023-11-02 14:34:06,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:06,569:INFO:Checking exceptions
2023-11-02 14:34:06,569:INFO:Importing libraries
2023-11-02 14:34:06,569:INFO:Copying training dataset
2023-11-02 14:34:06,573:INFO:Defining folds
2023-11-02 14:34:06,573:INFO:Declaring metric variables
2023-11-02 14:34:06,576:INFO:Importing untrained model
2023-11-02 14:34:06,582:INFO:Huber Regressor Imported successfully
2023-11-02 14:34:06,587:INFO:Starting cross validation
2023-11-02 14:34:06,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:07,319:INFO:Calculating mean and std
2023-11-02 14:34:07,321:INFO:Creating metrics dataframe
2023-11-02 14:34:07,323:INFO:Uploading results into container
2023-11-02 14:34:07,324:INFO:Uploading model into container now
2023-11-02 14:34:07,324:INFO:_master_model_container: 31
2023-11-02 14:34:07,324:INFO:_display_container: 4
2023-11-02 14:34:07,324:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 14:34:07,324:INFO:create_model() successfully completed......................................
2023-11-02 14:34:07,458:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:07,458:INFO:Creating metrics dataframe
2023-11-02 14:34:07,468:INFO:Initializing K Neighbors Regressor
2023-11-02 14:34:07,468:INFO:Total runtime is 0.15168152650197345 minutes
2023-11-02 14:34:07,470:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:07,470:INFO:Initializing create_model()
2023-11-02 14:34:07,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:07,470:INFO:Checking exceptions
2023-11-02 14:34:07,470:INFO:Importing libraries
2023-11-02 14:34:07,470:INFO:Copying training dataset
2023-11-02 14:34:07,475:INFO:Defining folds
2023-11-02 14:34:07,475:INFO:Declaring metric variables
2023-11-02 14:34:07,479:INFO:Importing untrained model
2023-11-02 14:34:07,483:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:34:07,488:INFO:Starting cross validation
2023-11-02 14:34:07,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:07,988:INFO:Calculating mean and std
2023-11-02 14:34:07,989:INFO:Creating metrics dataframe
2023-11-02 14:34:07,991:INFO:Uploading results into container
2023-11-02 14:34:07,991:INFO:Uploading model into container now
2023-11-02 14:34:07,992:INFO:_master_model_container: 32
2023-11-02 14:34:07,992:INFO:_display_container: 4
2023-11-02 14:34:07,992:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:34:07,992:INFO:create_model() successfully completed......................................
2023-11-02 14:34:08,129:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:08,129:INFO:Creating metrics dataframe
2023-11-02 14:34:08,139:INFO:Initializing Decision Tree Regressor
2023-11-02 14:34:08,140:INFO:Total runtime is 0.162873367468516 minutes
2023-11-02 14:34:08,143:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:08,143:INFO:Initializing create_model()
2023-11-02 14:34:08,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:08,143:INFO:Checking exceptions
2023-11-02 14:34:08,143:INFO:Importing libraries
2023-11-02 14:34:08,143:INFO:Copying training dataset
2023-11-02 14:34:08,149:INFO:Defining folds
2023-11-02 14:34:08,150:INFO:Declaring metric variables
2023-11-02 14:34:08,154:INFO:Importing untrained model
2023-11-02 14:34:08,157:INFO:Decision Tree Regressor Imported successfully
2023-11-02 14:34:08,163:INFO:Starting cross validation
2023-11-02 14:34:08,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:08,666:INFO:Calculating mean and std
2023-11-02 14:34:08,667:INFO:Creating metrics dataframe
2023-11-02 14:34:08,669:INFO:Uploading results into container
2023-11-02 14:34:08,670:INFO:Uploading model into container now
2023-11-02 14:34:08,670:INFO:_master_model_container: 33
2023-11-02 14:34:08,670:INFO:_display_container: 4
2023-11-02 14:34:08,670:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 14:34:08,670:INFO:create_model() successfully completed......................................
2023-11-02 14:34:08,805:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:08,805:INFO:Creating metrics dataframe
2023-11-02 14:34:08,815:INFO:Initializing Random Forest Regressor
2023-11-02 14:34:08,815:INFO:Total runtime is 0.1741391857465108 minutes
2023-11-02 14:34:08,818:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:08,818:INFO:Initializing create_model()
2023-11-02 14:34:08,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:08,819:INFO:Checking exceptions
2023-11-02 14:34:08,819:INFO:Importing libraries
2023-11-02 14:34:08,819:INFO:Copying training dataset
2023-11-02 14:34:08,823:INFO:Defining folds
2023-11-02 14:34:08,823:INFO:Declaring metric variables
2023-11-02 14:34:08,826:INFO:Importing untrained model
2023-11-02 14:34:08,830:INFO:Random Forest Regressor Imported successfully
2023-11-02 14:34:08,837:INFO:Starting cross validation
2023-11-02 14:34:08,838:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:17,261:INFO:Calculating mean and std
2023-11-02 14:34:17,263:INFO:Creating metrics dataframe
2023-11-02 14:34:17,267:INFO:Uploading results into container
2023-11-02 14:34:17,267:INFO:Uploading model into container now
2023-11-02 14:34:17,267:INFO:_master_model_container: 34
2023-11-02 14:34:17,267:INFO:_display_container: 4
2023-11-02 14:34:17,268:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 14:34:17,268:INFO:create_model() successfully completed......................................
2023-11-02 14:34:17,446:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:17,446:INFO:Creating metrics dataframe
2023-11-02 14:34:17,459:INFO:Initializing Extra Trees Regressor
2023-11-02 14:34:17,459:INFO:Total runtime is 0.3182134429613749 minutes
2023-11-02 14:34:17,462:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:17,463:INFO:Initializing create_model()
2023-11-02 14:34:17,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:17,463:INFO:Checking exceptions
2023-11-02 14:34:17,464:INFO:Importing libraries
2023-11-02 14:34:17,464:INFO:Copying training dataset
2023-11-02 14:34:17,471:INFO:Defining folds
2023-11-02 14:34:17,472:INFO:Declaring metric variables
2023-11-02 14:34:17,479:INFO:Importing untrained model
2023-11-02 14:34:17,484:INFO:Extra Trees Regressor Imported successfully
2023-11-02 14:34:17,497:INFO:Starting cross validation
2023-11-02 14:34:17,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:22,137:INFO:Calculating mean and std
2023-11-02 14:34:22,138:INFO:Creating metrics dataframe
2023-11-02 14:34:22,141:INFO:Uploading results into container
2023-11-02 14:34:22,142:INFO:Uploading model into container now
2023-11-02 14:34:22,142:INFO:_master_model_container: 35
2023-11-02 14:34:22,142:INFO:_display_container: 4
2023-11-02 14:34:22,143:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 14:34:22,144:INFO:create_model() successfully completed......................................
2023-11-02 14:34:22,279:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:22,279:INFO:Creating metrics dataframe
2023-11-02 14:34:22,288:INFO:Initializing AdaBoost Regressor
2023-11-02 14:34:22,288:INFO:Total runtime is 0.3986903746922811 minutes
2023-11-02 14:34:22,291:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:22,291:INFO:Initializing create_model()
2023-11-02 14:34:22,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:22,292:INFO:Checking exceptions
2023-11-02 14:34:22,292:INFO:Importing libraries
2023-11-02 14:34:22,292:INFO:Copying training dataset
2023-11-02 14:34:22,297:INFO:Defining folds
2023-11-02 14:34:22,297:INFO:Declaring metric variables
2023-11-02 14:34:22,300:INFO:Importing untrained model
2023-11-02 14:34:22,302:INFO:AdaBoost Regressor Imported successfully
2023-11-02 14:34:22,310:INFO:Starting cross validation
2023-11-02 14:34:22,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:24,066:INFO:Calculating mean and std
2023-11-02 14:34:24,067:INFO:Creating metrics dataframe
2023-11-02 14:34:24,069:INFO:Uploading results into container
2023-11-02 14:34:24,069:INFO:Uploading model into container now
2023-11-02 14:34:24,070:INFO:_master_model_container: 36
2023-11-02 14:34:24,070:INFO:_display_container: 4
2023-11-02 14:34:24,070:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 14:34:24,070:INFO:create_model() successfully completed......................................
2023-11-02 14:34:24,202:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:24,202:INFO:Creating metrics dataframe
2023-11-02 14:34:24,211:INFO:Initializing Gradient Boosting Regressor
2023-11-02 14:34:24,212:INFO:Total runtime is 0.43075305620829263 minutes
2023-11-02 14:34:24,215:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:24,215:INFO:Initializing create_model()
2023-11-02 14:34:24,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:24,215:INFO:Checking exceptions
2023-11-02 14:34:24,215:INFO:Importing libraries
2023-11-02 14:34:24,216:INFO:Copying training dataset
2023-11-02 14:34:24,220:INFO:Defining folds
2023-11-02 14:34:24,220:INFO:Declaring metric variables
2023-11-02 14:34:24,223:INFO:Importing untrained model
2023-11-02 14:34:24,228:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 14:34:24,234:INFO:Starting cross validation
2023-11-02 14:34:24,236:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:27,819:INFO:Calculating mean and std
2023-11-02 14:34:27,820:INFO:Creating metrics dataframe
2023-11-02 14:34:27,822:INFO:Uploading results into container
2023-11-02 14:34:27,822:INFO:Uploading model into container now
2023-11-02 14:34:27,822:INFO:_master_model_container: 37
2023-11-02 14:34:27,822:INFO:_display_container: 4
2023-11-02 14:34:27,822:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 14:34:27,822:INFO:create_model() successfully completed......................................
2023-11-02 14:34:27,954:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:27,954:INFO:Creating metrics dataframe
2023-11-02 14:34:27,965:INFO:Initializing Extreme Gradient Boosting
2023-11-02 14:34:27,965:INFO:Total runtime is 0.49330519835154213 minutes
2023-11-02 14:34:27,968:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:27,969:INFO:Initializing create_model()
2023-11-02 14:34:27,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:27,969:INFO:Checking exceptions
2023-11-02 14:34:27,969:INFO:Importing libraries
2023-11-02 14:34:27,969:INFO:Copying training dataset
2023-11-02 14:34:27,975:INFO:Defining folds
2023-11-02 14:34:27,975:INFO:Declaring metric variables
2023-11-02 14:34:27,978:INFO:Importing untrained model
2023-11-02 14:34:27,984:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:34:27,990:INFO:Starting cross validation
2023-11-02 14:34:27,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:28,950:INFO:Calculating mean and std
2023-11-02 14:34:28,951:INFO:Creating metrics dataframe
2023-11-02 14:34:28,954:INFO:Uploading results into container
2023-11-02 14:34:28,955:INFO:Uploading model into container now
2023-11-02 14:34:28,956:INFO:_master_model_container: 38
2023-11-02 14:34:28,956:INFO:_display_container: 4
2023-11-02 14:34:28,956:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:34:28,957:INFO:create_model() successfully completed......................................
2023-11-02 14:34:29,090:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:29,090:INFO:Creating metrics dataframe
2023-11-02 14:34:29,101:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 14:34:29,101:INFO:Total runtime is 0.5122351924578349 minutes
2023-11-02 14:34:29,103:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:29,104:INFO:Initializing create_model()
2023-11-02 14:34:29,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:29,104:INFO:Checking exceptions
2023-11-02 14:34:29,104:INFO:Importing libraries
2023-11-02 14:34:29,104:INFO:Copying training dataset
2023-11-02 14:34:29,109:INFO:Defining folds
2023-11-02 14:34:29,109:INFO:Declaring metric variables
2023-11-02 14:34:29,112:INFO:Importing untrained model
2023-11-02 14:34:29,117:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 14:34:29,123:INFO:Starting cross validation
2023-11-02 14:34:29,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:30,177:INFO:Calculating mean and std
2023-11-02 14:34:30,178:INFO:Creating metrics dataframe
2023-11-02 14:34:30,184:INFO:Uploading results into container
2023-11-02 14:34:30,185:INFO:Uploading model into container now
2023-11-02 14:34:30,185:INFO:_master_model_container: 39
2023-11-02 14:34:30,186:INFO:_display_container: 4
2023-11-02 14:34:30,186:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 14:34:30,186:INFO:create_model() successfully completed......................................
2023-11-02 14:34:30,358:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:30,358:INFO:Creating metrics dataframe
2023-11-02 14:34:30,370:INFO:Initializing Dummy Regressor
2023-11-02 14:34:30,370:INFO:Total runtime is 0.533385157585144 minutes
2023-11-02 14:34:30,374:INFO:SubProcess create_model() called ==================================
2023-11-02 14:34:30,374:INFO:Initializing create_model()
2023-11-02 14:34:30,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFF162BF0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:30,374:INFO:Checking exceptions
2023-11-02 14:34:30,374:INFO:Importing libraries
2023-11-02 14:34:30,374:INFO:Copying training dataset
2023-11-02 14:34:30,381:INFO:Defining folds
2023-11-02 14:34:30,382:INFO:Declaring metric variables
2023-11-02 14:34:30,386:INFO:Importing untrained model
2023-11-02 14:34:30,389:INFO:Dummy Regressor Imported successfully
2023-11-02 14:34:30,394:INFO:Starting cross validation
2023-11-02 14:34:30,396:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:34:30,722:INFO:Calculating mean and std
2023-11-02 14:34:30,724:INFO:Creating metrics dataframe
2023-11-02 14:34:30,727:INFO:Uploading results into container
2023-11-02 14:34:30,728:INFO:Uploading model into container now
2023-11-02 14:34:30,728:INFO:_master_model_container: 40
2023-11-02 14:34:30,728:INFO:_display_container: 4
2023-11-02 14:34:30,728:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 14:34:30,728:INFO:create_model() successfully completed......................................
2023-11-02 14:34:30,853:INFO:SubProcess create_model() end ==================================
2023-11-02 14:34:30,853:INFO:Creating metrics dataframe
2023-11-02 14:34:30,874:INFO:Initializing create_model()
2023-11-02 14:34:30,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:30,875:INFO:Checking exceptions
2023-11-02 14:34:30,876:INFO:Importing libraries
2023-11-02 14:34:30,876:INFO:Copying training dataset
2023-11-02 14:34:30,880:INFO:Defining folds
2023-11-02 14:34:30,881:INFO:Declaring metric variables
2023-11-02 14:34:30,881:INFO:Importing untrained model
2023-11-02 14:34:30,881:INFO:Declaring custom model
2023-11-02 14:34:30,882:INFO:K Neighbors Regressor Imported successfully
2023-11-02 14:34:30,883:INFO:Cross validation set to False
2023-11-02 14:34:30,883:INFO:Fitting Model
2023-11-02 14:34:30,960:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 14:34:30,960:INFO:create_model() successfully completed......................................
2023-11-02 14:34:31,097:INFO:Initializing create_model()
2023-11-02 14:34:31,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:34:31,097:INFO:Checking exceptions
2023-11-02 14:34:31,100:INFO:Importing libraries
2023-11-02 14:34:31,100:INFO:Copying training dataset
2023-11-02 14:34:31,104:INFO:Defining folds
2023-11-02 14:34:31,105:INFO:Declaring metric variables
2023-11-02 14:34:31,105:INFO:Importing untrained model
2023-11-02 14:34:31,105:INFO:Declaring custom model
2023-11-02 14:34:31,106:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:34:31,106:INFO:Cross validation set to False
2023-11-02 14:34:31,106:INFO:Fitting Model
2023-11-02 14:34:31,301:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:34:31,301:INFO:create_model() successfully completed......................................
2023-11-02 14:34:31,478:INFO:_master_model_container: 40
2023-11-02 14:34:31,478:INFO:_display_container: 4
2023-11-02 14:34:31,480:INFO:[KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)]
2023-11-02 14:34:31,481:INFO:compare_models() successfully completed......................................
2023-11-02 14:34:54,414:INFO:Initializing evaluate_model()
2023-11-02 14:34:54,415:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 14:34:54,426:INFO:Initializing plot_model()
2023-11-02 14:34:54,427:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:34:54,427:INFO:Checking exceptions
2023-11-02 14:34:54,433:INFO:Preloading libraries
2023-11-02 14:34:54,439:INFO:Copying training dataset
2023-11-02 14:34:54,439:INFO:Plot type: pipeline
2023-11-02 14:34:54,570:INFO:Visual Rendered Successfully
2023-11-02 14:34:54,723:INFO:plot_model() successfully completed......................................
2023-11-02 14:35:00,823:INFO:Initializing plot_model()
2023-11-02 14:35:00,823:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:35:00,823:INFO:Checking exceptions
2023-11-02 14:35:00,826:INFO:Preloading libraries
2023-11-02 14:35:00,832:INFO:Copying training dataset
2023-11-02 14:35:00,833:INFO:Plot type: feature
2023-11-02 14:35:00,833:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 14:35:01,007:INFO:Visual Rendered Successfully
2023-11-02 14:35:01,119:INFO:plot_model() successfully completed......................................
2023-11-02 14:35:14,757:INFO:Initializing plot_model()
2023-11-02 14:35:14,758:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 14:35:14,758:INFO:Checking exceptions
2023-11-02 14:35:14,761:INFO:Preloading libraries
2023-11-02 14:35:14,766:INFO:Copying training dataset
2023-11-02 14:35:14,767:INFO:Plot type: feature_all
2023-11-02 14:35:14,834:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 14:35:15,056:INFO:Visual Rendered Successfully
2023-11-02 14:35:15,171:INFO:plot_model() successfully completed......................................
2023-11-02 14:36:24,714:INFO:Initializing tune_model()
2023-11-02 14:36:24,714:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>)
2023-11-02 14:36:24,714:INFO:Checking exceptions
2023-11-02 14:36:24,729:INFO:Copying training dataset
2023-11-02 14:36:24,732:INFO:Checking base model
2023-11-02 14:36:24,732:INFO:Base model : Extreme Gradient Boosting
2023-11-02 14:36:24,736:INFO:Declaring metric variables
2023-11-02 14:36:24,740:INFO:Defining Hyperparameters
2023-11-02 14:36:25,017:INFO:Tuning with n_jobs=-1
2023-11-02 14:36:25,017:INFO:Initializing RandomizedSearchCV
2023-11-02 14:36:51,383:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__scale_pos_weight': 37.1, 'actual_estimator__reg_lambda': 0.7, 'actual_estimator__reg_alpha': 2, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_child_weight': 3, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.15, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 14:36:51,384:INFO:Hyperparameter search completed
2023-11-02 14:36:51,385:INFO:SubProcess create_model() called ==================================
2023-11-02 14:36:51,386:INFO:Initializing create_model()
2023-11-02 14:36:51,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA770>, model_only=True, return_train_score=False, kwargs={'subsample': 0.7, 'scale_pos_weight': 37.1, 'reg_lambda': 0.7, 'reg_alpha': 2, 'n_estimators': 290, 'min_child_weight': 3, 'max_depth': 7, 'learning_rate': 0.15, 'colsample_bytree': 0.9})
2023-11-02 14:36:51,386:INFO:Checking exceptions
2023-11-02 14:36:51,386:INFO:Importing libraries
2023-11-02 14:36:51,386:INFO:Copying training dataset
2023-11-02 14:36:51,394:INFO:Defining folds
2023-11-02 14:36:51,395:INFO:Declaring metric variables
2023-11-02 14:36:51,400:INFO:Importing untrained model
2023-11-02 14:36:51,400:INFO:Declaring custom model
2023-11-02 14:36:51,407:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:36:51,414:INFO:Starting cross validation
2023-11-02 14:36:51,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:36:55,085:INFO:Calculating mean and std
2023-11-02 14:36:55,087:INFO:Creating metrics dataframe
2023-11-02 14:36:55,093:INFO:Finalizing model
2023-11-02 14:36:56,374:INFO:Uploading results into container
2023-11-02 14:36:56,376:INFO:Uploading model into container now
2023-11-02 14:36:56,376:INFO:_master_model_container: 41
2023-11-02 14:36:56,377:INFO:_display_container: 5
2023-11-02 14:36:56,378:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.15, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=290, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:36:56,378:INFO:create_model() successfully completed......................................
2023-11-02 14:36:56,628:INFO:SubProcess create_model() end ==================================
2023-11-02 14:36:56,628:INFO:choose_better activated
2023-11-02 14:36:56,632:INFO:SubProcess create_model() called ==================================
2023-11-02 14:36:56,636:INFO:Initializing create_model()
2023-11-02 14:36:56,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:36:56,636:INFO:Checking exceptions
2023-11-02 14:36:56,640:INFO:Importing libraries
2023-11-02 14:36:56,640:INFO:Copying training dataset
2023-11-02 14:36:56,645:INFO:Defining folds
2023-11-02 14:36:56,645:INFO:Declaring metric variables
2023-11-02 14:36:56,646:INFO:Importing untrained model
2023-11-02 14:36:56,646:INFO:Declaring custom model
2023-11-02 14:36:56,647:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 14:36:56,647:INFO:Starting cross validation
2023-11-02 14:36:56,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 14:36:58,253:INFO:Calculating mean and std
2023-11-02 14:36:58,255:INFO:Creating metrics dataframe
2023-11-02 14:36:58,257:INFO:Finalizing model
2023-11-02 14:36:58,538:INFO:Uploading results into container
2023-11-02 14:36:58,539:INFO:Uploading model into container now
2023-11-02 14:36:58,540:INFO:_master_model_container: 42
2023-11-02 14:36:58,540:INFO:_display_container: 6
2023-11-02 14:36:58,541:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:36:58,541:INFO:create_model() successfully completed......................................
2023-11-02 14:36:58,759:INFO:SubProcess create_model() end ==================================
2023-11-02 14:36:58,760:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9846
2023-11-02 14:36:58,761:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.15, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=290, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9869
2023-11-02 14:36:58,761:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.15, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=290, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 14:36:58,761:INFO:choose_better completed
2023-11-02 14:36:58,778:INFO:_master_model_container: 42
2023-11-02 14:36:58,778:INFO:_display_container: 5
2023-11-02 14:36:58,779:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.15, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=290, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 14:36:58,779:INFO:tune_model() successfully completed......................................
2023-11-02 14:47:17,763:INFO:Initializing predict_model()
2023-11-02 14:47:17,764:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.15, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=3, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=290, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022B865FE950>)
2023-11-02 14:47:17,764:INFO:Checking exceptions
2023-11-02 14:47:17,764:INFO:Preloading libraries
2023-11-02 14:47:17,769:INFO:Set up data.
2023-11-02 14:47:17,779:INFO:Set up index.
2023-11-02 14:54:12,504:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:54:26,150:INFO:PyCaret TSForecastingExperiment
2023-11-02 14:54:26,151:INFO:Logging name: ts-default-name
2023-11-02 14:54:26,151:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-11-02 14:54:26,151:INFO:version 3.1.0
2023-11-02 14:54:26,151:INFO:Initializing setup()
2023-11-02 14:54:26,151:INFO:self.USI: 713f
2023-11-02 14:54:26,151:INFO:self._variable_keys: {'X_test', 'y_transformed', 'X_train_transformed', 'y_test_transformed', 'X_test_transformed', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'y_test', 'primary_sp_to_use', 'y_train_transformed', 'seed', 'log_plots_param', 'X_transformed', 'X_train', 'X', 'approach_type', 'exogenous_present', 'exp_id', 'y_train', 'gpu_param', 'candidate_sps', 'memory', '_available_plots', 'html_param', 'data', 'significant_sps', 'index_type', 'logging_param', 'all_sps_to_use', 'fold_generator', 'n_jobs_param', 'fold_param', 'enforce_exogenous', 'seasonality_present', 'significant_sps_no_harmonics', 'idx', 'model_engines', 'strictly_positive', 'enforce_pi', 'USI', 'fh', 'pipeline', 'exp_name_log'}
2023-11-02 14:54:26,151:INFO:Checking environment
2023-11-02 14:54:26,151:INFO:python_version: 3.10.2
2023-11-02 14:54:26,151:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:54:26,151:INFO:machine: AMD64
2023-11-02 14:54:26,151:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:54:26,157:INFO:Memory: svmem(total=16952647680, available=3264040960, percent=80.7, used=13688606720, free=3264040960)
2023-11-02 14:54:26,157:INFO:Physical Core: 4
2023-11-02 14:54:26,157:INFO:Logical Core: 8
2023-11-02 14:54:26,157:INFO:Checking libraries
2023-11-02 14:54:26,157:INFO:System:
2023-11-02 14:54:26,157:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:54:26,157:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:54:26,157:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:54:26,157:INFO:PyCaret required dependencies:
2023-11-02 14:54:26,157:INFO:                 pip: 23.0.1
2023-11-02 14:54:26,157:INFO:          setuptools: 65.5.0
2023-11-02 14:54:26,157:INFO:             pycaret: 3.1.0
2023-11-02 14:54:26,157:INFO:             IPython: 8.15.0
2023-11-02 14:54:26,157:INFO:          ipywidgets: 8.1.1
2023-11-02 14:54:26,157:INFO:                tqdm: 4.66.1
2023-11-02 14:54:26,157:INFO:               numpy: 1.23.5
2023-11-02 14:54:26,157:INFO:              pandas: 1.5.3
2023-11-02 14:54:26,157:INFO:              jinja2: 3.1.2
2023-11-02 14:54:26,157:INFO:               scipy: 1.10.1
2023-11-02 14:54:26,157:INFO:              joblib: 1.3.2
2023-11-02 14:54:26,157:INFO:             sklearn: 1.2.2
2023-11-02 14:54:26,157:INFO:                pyod: 1.1.0
2023-11-02 14:54:26,157:INFO:            imblearn: 0.11.0
2023-11-02 14:54:26,157:INFO:   category_encoders: 2.6.2
2023-11-02 14:54:26,157:INFO:            lightgbm: 4.1.0
2023-11-02 14:54:26,157:INFO:               numba: 0.58.0
2023-11-02 14:54:26,158:INFO:            requests: 2.31.0
2023-11-02 14:54:26,158:INFO:          matplotlib: 3.8.0
2023-11-02 14:54:26,158:INFO:          scikitplot: 0.3.7
2023-11-02 14:54:26,158:INFO:         yellowbrick: 1.5
2023-11-02 14:54:26,158:INFO:              plotly: 5.17.0
2023-11-02 14:54:26,158:INFO:    plotly-resampler: Not installed
2023-11-02 14:54:26,158:INFO:             kaleido: 0.2.1
2023-11-02 14:54:26,158:INFO:           schemdraw: 0.15
2023-11-02 14:54:26,158:INFO:         statsmodels: 0.14.0
2023-11-02 14:54:26,158:INFO:              sktime: 0.21.1
2023-11-02 14:54:26,158:INFO:               tbats: 1.1.3
2023-11-02 14:54:26,158:INFO:            pmdarima: 2.0.3
2023-11-02 14:54:26,158:INFO:              psutil: 5.9.5
2023-11-02 14:54:26,158:INFO:          markupsafe: 2.1.3
2023-11-02 14:54:26,158:INFO:             pickle5: Not installed
2023-11-02 14:54:26,158:INFO:         cloudpickle: 2.2.1
2023-11-02 14:54:26,158:INFO:         deprecation: 2.1.0
2023-11-02 14:54:26,158:INFO:              xxhash: 3.3.0
2023-11-02 14:54:26,158:INFO:           wurlitzer: Not installed
2023-11-02 14:54:26,158:INFO:PyCaret optional dependencies:
2023-11-02 14:54:26,158:INFO:                shap: Not installed
2023-11-02 14:54:26,158:INFO:           interpret: Not installed
2023-11-02 14:54:26,158:INFO:                umap: Not installed
2023-11-02 14:54:26,158:INFO:     ydata_profiling: Not installed
2023-11-02 14:54:26,158:INFO:  explainerdashboard: Not installed
2023-11-02 14:54:26,158:INFO:             autoviz: Not installed
2023-11-02 14:54:26,158:INFO:           fairlearn: Not installed
2023-11-02 14:54:26,158:INFO:          deepchecks: Not installed
2023-11-02 14:54:26,158:INFO:             xgboost: 2.0.0
2023-11-02 14:54:26,158:INFO:            catboost: Not installed
2023-11-02 14:54:26,158:INFO:              kmodes: Not installed
2023-11-02 14:54:26,158:INFO:             mlxtend: Not installed
2023-11-02 14:54:26,158:INFO:       statsforecast: Not installed
2023-11-02 14:54:26,158:INFO:        tune_sklearn: Not installed
2023-11-02 14:54:26,158:INFO:                 ray: Not installed
2023-11-02 14:54:26,158:INFO:            hyperopt: Not installed
2023-11-02 14:54:26,158:INFO:              optuna: Not installed
2023-11-02 14:54:26,159:INFO:               skopt: Not installed
2023-11-02 14:54:26,159:INFO:              mlflow: Not installed
2023-11-02 14:54:26,159:INFO:              gradio: Not installed
2023-11-02 14:54:26,159:INFO:             fastapi: Not installed
2023-11-02 14:54:26,159:INFO:             uvicorn: Not installed
2023-11-02 14:54:26,159:INFO:              m2cgen: Not installed
2023-11-02 14:54:26,159:INFO:           evidently: Not installed
2023-11-02 14:54:26,159:INFO:               fugue: Not installed
2023-11-02 14:54:26,159:INFO:           streamlit: Not installed
2023-11-02 14:54:26,159:INFO:             prophet: Not installed
2023-11-02 14:54:26,159:INFO:None
2023-11-02 14:54:26,161:INFO:Set Forecast Horizon.
2023-11-02 14:54:26,162:INFO:Set up Train-Test Splits.
2023-11-02 14:54:42,689:INFO:PyCaret TSForecastingExperiment
2023-11-02 14:54:42,689:INFO:Logging name: ts-default-name
2023-11-02 14:54:42,690:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-11-02 14:54:42,690:INFO:version 3.1.0
2023-11-02 14:54:42,690:INFO:Initializing setup()
2023-11-02 14:54:42,690:INFO:self.USI: 98ba
2023-11-02 14:54:42,690:INFO:self._variable_keys: {'X_test', 'y_transformed', 'X_train_transformed', 'y_test_transformed', 'X_test_transformed', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'y_test', 'primary_sp_to_use', 'y_train_transformed', 'seed', 'log_plots_param', 'X_transformed', 'X_train', 'X', 'approach_type', 'exogenous_present', 'exp_id', 'y_train', 'gpu_param', 'candidate_sps', 'memory', '_available_plots', 'html_param', 'data', 'significant_sps', 'index_type', 'logging_param', 'all_sps_to_use', 'fold_generator', 'n_jobs_param', 'fold_param', 'enforce_exogenous', 'seasonality_present', 'significant_sps_no_harmonics', 'idx', 'model_engines', 'strictly_positive', 'enforce_pi', 'USI', 'fh', 'pipeline', 'exp_name_log'}
2023-11-02 14:54:42,690:INFO:Checking environment
2023-11-02 14:54:42,690:INFO:python_version: 3.10.2
2023-11-02 14:54:42,690:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:54:42,690:INFO:machine: AMD64
2023-11-02 14:54:42,690:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:54:42,694:INFO:Memory: svmem(total=16952647680, available=2952257536, percent=82.6, used=14000390144, free=2952257536)
2023-11-02 14:54:42,695:INFO:Physical Core: 4
2023-11-02 14:54:42,695:INFO:Logical Core: 8
2023-11-02 14:54:42,695:INFO:Checking libraries
2023-11-02 14:54:42,695:INFO:System:
2023-11-02 14:54:42,695:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:54:42,695:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:54:42,695:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:54:42,695:INFO:PyCaret required dependencies:
2023-11-02 14:54:42,696:INFO:                 pip: 23.0.1
2023-11-02 14:54:42,696:INFO:          setuptools: 65.5.0
2023-11-02 14:54:42,696:INFO:             pycaret: 3.1.0
2023-11-02 14:54:42,696:INFO:             IPython: 8.15.0
2023-11-02 14:54:42,696:INFO:          ipywidgets: 8.1.1
2023-11-02 14:54:42,696:INFO:                tqdm: 4.66.1
2023-11-02 14:54:42,696:INFO:               numpy: 1.23.5
2023-11-02 14:54:42,696:INFO:              pandas: 1.5.3
2023-11-02 14:54:42,696:INFO:              jinja2: 3.1.2
2023-11-02 14:54:42,696:INFO:               scipy: 1.10.1
2023-11-02 14:54:42,696:INFO:              joblib: 1.3.2
2023-11-02 14:54:42,696:INFO:             sklearn: 1.2.2
2023-11-02 14:54:42,696:INFO:                pyod: 1.1.0
2023-11-02 14:54:42,696:INFO:            imblearn: 0.11.0
2023-11-02 14:54:42,696:INFO:   category_encoders: 2.6.2
2023-11-02 14:54:42,696:INFO:            lightgbm: 4.1.0
2023-11-02 14:54:42,696:INFO:               numba: 0.58.0
2023-11-02 14:54:42,696:INFO:            requests: 2.31.0
2023-11-02 14:54:42,696:INFO:          matplotlib: 3.8.0
2023-11-02 14:54:42,697:INFO:          scikitplot: 0.3.7
2023-11-02 14:54:42,697:INFO:         yellowbrick: 1.5
2023-11-02 14:54:42,697:INFO:              plotly: 5.17.0
2023-11-02 14:54:42,697:INFO:    plotly-resampler: Not installed
2023-11-02 14:54:42,697:INFO:             kaleido: 0.2.1
2023-11-02 14:54:42,697:INFO:           schemdraw: 0.15
2023-11-02 14:54:42,697:INFO:         statsmodels: 0.14.0
2023-11-02 14:54:42,697:INFO:              sktime: 0.21.1
2023-11-02 14:54:42,697:INFO:               tbats: 1.1.3
2023-11-02 14:54:42,697:INFO:            pmdarima: 2.0.3
2023-11-02 14:54:42,697:INFO:              psutil: 5.9.5
2023-11-02 14:54:42,697:INFO:          markupsafe: 2.1.3
2023-11-02 14:54:42,697:INFO:             pickle5: Not installed
2023-11-02 14:54:42,697:INFO:         cloudpickle: 2.2.1
2023-11-02 14:54:42,697:INFO:         deprecation: 2.1.0
2023-11-02 14:54:42,697:INFO:              xxhash: 3.3.0
2023-11-02 14:54:42,697:INFO:           wurlitzer: Not installed
2023-11-02 14:54:42,697:INFO:PyCaret optional dependencies:
2023-11-02 14:54:42,697:INFO:                shap: Not installed
2023-11-02 14:54:42,697:INFO:           interpret: Not installed
2023-11-02 14:54:42,697:INFO:                umap: Not installed
2023-11-02 14:54:42,697:INFO:     ydata_profiling: Not installed
2023-11-02 14:54:42,697:INFO:  explainerdashboard: Not installed
2023-11-02 14:54:42,697:INFO:             autoviz: Not installed
2023-11-02 14:54:42,697:INFO:           fairlearn: Not installed
2023-11-02 14:54:42,697:INFO:          deepchecks: Not installed
2023-11-02 14:54:42,697:INFO:             xgboost: 2.0.0
2023-11-02 14:54:42,697:INFO:            catboost: Not installed
2023-11-02 14:54:42,697:INFO:              kmodes: Not installed
2023-11-02 14:54:42,697:INFO:             mlxtend: Not installed
2023-11-02 14:54:42,697:INFO:       statsforecast: Not installed
2023-11-02 14:54:42,697:INFO:        tune_sklearn: Not installed
2023-11-02 14:54:42,698:INFO:                 ray: Not installed
2023-11-02 14:54:42,698:INFO:            hyperopt: Not installed
2023-11-02 14:54:42,698:INFO:              optuna: Not installed
2023-11-02 14:54:42,698:INFO:               skopt: Not installed
2023-11-02 14:54:42,698:INFO:              mlflow: Not installed
2023-11-02 14:54:42,698:INFO:              gradio: Not installed
2023-11-02 14:54:42,698:INFO:             fastapi: Not installed
2023-11-02 14:54:42,698:INFO:             uvicorn: Not installed
2023-11-02 14:54:42,698:INFO:              m2cgen: Not installed
2023-11-02 14:54:42,698:INFO:           evidently: Not installed
2023-11-02 14:54:42,698:INFO:               fugue: Not installed
2023-11-02 14:54:42,698:INFO:           streamlit: Not installed
2023-11-02 14:54:42,698:INFO:             prophet: Not installed
2023-11-02 14:54:42,698:INFO:None
2023-11-02 14:56:02,113:INFO:PyCaret TSForecastingExperiment
2023-11-02 14:56:02,114:INFO:Logging name: ts-default-name
2023-11-02 14:56:02,114:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-11-02 14:56:02,114:INFO:version 3.1.0
2023-11-02 14:56:02,114:INFO:Initializing setup()
2023-11-02 14:56:02,114:INFO:self.USI: 41a0
2023-11-02 14:56:02,114:INFO:self._variable_keys: {'X_test', 'y_transformed', 'X_train_transformed', 'y_test_transformed', 'X_test_transformed', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'y_test', 'primary_sp_to_use', 'y_train_transformed', 'seed', 'log_plots_param', 'X_transformed', 'X_train', 'X', 'approach_type', 'exogenous_present', 'exp_id', 'y_train', 'gpu_param', 'candidate_sps', 'memory', '_available_plots', 'html_param', 'data', 'significant_sps', 'index_type', 'logging_param', 'all_sps_to_use', 'fold_generator', 'n_jobs_param', 'fold_param', 'enforce_exogenous', 'seasonality_present', 'significant_sps_no_harmonics', 'idx', 'model_engines', 'strictly_positive', 'enforce_pi', 'USI', 'fh', 'pipeline', 'exp_name_log'}
2023-11-02 14:56:02,114:INFO:Checking environment
2023-11-02 14:56:02,114:INFO:python_version: 3.10.2
2023-11-02 14:56:02,114:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 14:56:02,114:INFO:machine: AMD64
2023-11-02 14:56:02,114:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 14:56:02,118:INFO:Memory: svmem(total=16952647680, available=3036512256, percent=82.1, used=13916135424, free=3036512256)
2023-11-02 14:56:02,119:INFO:Physical Core: 4
2023-11-02 14:56:02,119:INFO:Logical Core: 8
2023-11-02 14:56:02,119:INFO:Checking libraries
2023-11-02 14:56:02,119:INFO:System:
2023-11-02 14:56:02,119:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 14:56:02,119:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 14:56:02,119:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 14:56:02,119:INFO:PyCaret required dependencies:
2023-11-02 14:56:02,119:INFO:                 pip: 23.0.1
2023-11-02 14:56:02,119:INFO:          setuptools: 65.5.0
2023-11-02 14:56:02,119:INFO:             pycaret: 3.1.0
2023-11-02 14:56:02,119:INFO:             IPython: 8.15.0
2023-11-02 14:56:02,119:INFO:          ipywidgets: 8.1.1
2023-11-02 14:56:02,119:INFO:                tqdm: 4.66.1
2023-11-02 14:56:02,119:INFO:               numpy: 1.23.5
2023-11-02 14:56:02,119:INFO:              pandas: 1.5.3
2023-11-02 14:56:02,119:INFO:              jinja2: 3.1.2
2023-11-02 14:56:02,119:INFO:               scipy: 1.10.1
2023-11-02 14:56:02,119:INFO:              joblib: 1.3.2
2023-11-02 14:56:02,119:INFO:             sklearn: 1.2.2
2023-11-02 14:56:02,119:INFO:                pyod: 1.1.0
2023-11-02 14:56:02,119:INFO:            imblearn: 0.11.0
2023-11-02 14:56:02,119:INFO:   category_encoders: 2.6.2
2023-11-02 14:56:02,119:INFO:            lightgbm: 4.1.0
2023-11-02 14:56:02,119:INFO:               numba: 0.58.0
2023-11-02 14:56:02,119:INFO:            requests: 2.31.0
2023-11-02 14:56:02,119:INFO:          matplotlib: 3.8.0
2023-11-02 14:56:02,119:INFO:          scikitplot: 0.3.7
2023-11-02 14:56:02,120:INFO:         yellowbrick: 1.5
2023-11-02 14:56:02,120:INFO:              plotly: 5.17.0
2023-11-02 14:56:02,120:INFO:    plotly-resampler: Not installed
2023-11-02 14:56:02,120:INFO:             kaleido: 0.2.1
2023-11-02 14:56:02,120:INFO:           schemdraw: 0.15
2023-11-02 14:56:02,120:INFO:         statsmodels: 0.14.0
2023-11-02 14:56:02,120:INFO:              sktime: 0.21.1
2023-11-02 14:56:02,120:INFO:               tbats: 1.1.3
2023-11-02 14:56:02,120:INFO:            pmdarima: 2.0.3
2023-11-02 14:56:02,120:INFO:              psutil: 5.9.5
2023-11-02 14:56:02,120:INFO:          markupsafe: 2.1.3
2023-11-02 14:56:02,120:INFO:             pickle5: Not installed
2023-11-02 14:56:02,120:INFO:         cloudpickle: 2.2.1
2023-11-02 14:56:02,120:INFO:         deprecation: 2.1.0
2023-11-02 14:56:02,120:INFO:              xxhash: 3.3.0
2023-11-02 14:56:02,120:INFO:           wurlitzer: Not installed
2023-11-02 14:56:02,120:INFO:PyCaret optional dependencies:
2023-11-02 14:56:02,120:INFO:                shap: Not installed
2023-11-02 14:56:02,120:INFO:           interpret: Not installed
2023-11-02 14:56:02,120:INFO:                umap: Not installed
2023-11-02 14:56:02,120:INFO:     ydata_profiling: Not installed
2023-11-02 14:56:02,120:INFO:  explainerdashboard: Not installed
2023-11-02 14:56:02,120:INFO:             autoviz: Not installed
2023-11-02 14:56:02,120:INFO:           fairlearn: Not installed
2023-11-02 14:56:02,120:INFO:          deepchecks: Not installed
2023-11-02 14:56:02,120:INFO:             xgboost: 2.0.0
2023-11-02 14:56:02,120:INFO:            catboost: Not installed
2023-11-02 14:56:02,120:INFO:              kmodes: Not installed
2023-11-02 14:56:02,120:INFO:             mlxtend: Not installed
2023-11-02 14:56:02,120:INFO:       statsforecast: Not installed
2023-11-02 14:56:02,120:INFO:        tune_sklearn: Not installed
2023-11-02 14:56:02,120:INFO:                 ray: Not installed
2023-11-02 14:56:02,120:INFO:            hyperopt: Not installed
2023-11-02 14:56:02,120:INFO:              optuna: Not installed
2023-11-02 14:56:02,120:INFO:               skopt: Not installed
2023-11-02 14:56:02,120:INFO:              mlflow: Not installed
2023-11-02 14:56:02,120:INFO:              gradio: Not installed
2023-11-02 14:56:02,120:INFO:             fastapi: Not installed
2023-11-02 14:56:02,121:INFO:             uvicorn: Not installed
2023-11-02 14:56:02,121:INFO:              m2cgen: Not installed
2023-11-02 14:56:02,121:INFO:           evidently: Not installed
2023-11-02 14:56:02,121:INFO:               fugue: Not installed
2023-11-02 14:56:02,121:INFO:           streamlit: Not installed
2023-11-02 14:56:02,121:INFO:             prophet: Not installed
2023-11-02 14:56:02,121:INFO:None
2023-11-02 14:56:02,122:INFO:Set Forecast Horizon.
2023-11-02 14:56:02,123:INFO:Set up Train-Test Splits.
2023-11-02 14:56:02,157:INFO:Finished creating preprocessing pipeline.
2023-11-02 14:56:02,161:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-11-02 14:56:02,161:INFO:Set up Seasonal Period.
2023-11-02 14:56:02,191:INFO:Setting the seasonal component type - 'add' or 'mul'.
2023-11-02 14:56:02,191:INFO:Checking if data is strictly positive.
2023-11-02 14:56:02,555:INFO:Creating final display dataframe.
2023-11-02 14:56:02,564:INFO:Setup Display Container:                                          Description  \
0                                         session_id   
1                                             Target   
2                                           Approach   
3                                Exogenous Variables   
4                                Original data shape   
5                             Transformed data shape   
6                        Transformed train set shape   
7                         Transformed test set shape   
8                           Rows with missing values   
9                                     Fold Generator   
10                                       Fold Number   
11                       Enforce Prediction Interval   
12                   Splits used for hyperparameters   
13                   User Defined Seasonal Period(s)   
14                           Ignore Seasonality Test   
15                        Seasonality Detection Algo   
16                            Max Period to Consider   
17                         Seasonal Period(s) Tested   
18                    Significant Seasonal Period(s)   
19  Significant Seasonal Period(s) without Harmonics   
20                                  Remove Harmonics   
21                            Harmonics Order Method   
22                          Num Seasonalities to Use   
23                          All Seasonalities to Use   
24                               Primary Seasonality   
25                               Seasonality Present   
26                                  Seasonality Type   
27                          Target Strictly Positive   
28                                Target White Noise   
29                                     Recommended d   
30                            Recommended Seasonal D   
31                                        Preprocess   
32                                          CPU Jobs   
33                                           Use GPU   
34                                    Log Experiment   
35                                   Experiment Name   
36                                               USI   

                                                Value  
0                                                 123  
1                                     yield_tonnes_ha  
2                                          Univariate  
3                                             Present  
4                                          (15479, 2)  
5                                          (15479, 2)  
6                                          (15476, 2)  
7                                              (3, 2)  
8                                                0.0%  
9                             ExpandingWindowSplitter  
10                                                  3  
11                                              False  
12                                                all  
13                                               None  
14                                              False  
15                                               auto  
16                                                 60  
17  [42, 22, 27, 15, 44, 17, 39, 59, 12, 54, 5, 51...  
18  [42, 22, 27, 15, 44, 17, 39, 59, 12, 54, 5, 51...  
19  [42, 44, 54, 15, 51, 39, 59, 12, 20, 57, 49, 3...  
20                                              False  
21                                       harmonic_max  
22                                                  1  
23                                               [42]  
24                                                 42  
25                                               True  
26                                                add  
27                                              False  
28                                                 No  
29                                                  1  
30                                                  0  
31                                              False  
32                                                 -1  
33                                              False  
34                                              False  
35                                    ts-default-name  
36                                               41a0  
2023-11-02 14:56:02,572:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-11-02 14:56:02,629:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,629:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,629:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,631:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,631:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,632:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,632:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,632:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,637:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,642:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,642:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,643:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,643:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,644:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,645:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,645:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,645:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,645:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,646:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,647:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,652:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,653:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,653:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,654:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,654:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,654:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,654:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,654:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,661:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,703:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,703:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,737:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,738:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,739:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,739:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,740:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,740:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,741:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,741:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,742:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,742:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,746:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,747:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,749:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,750:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,750:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,750:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,750:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,756:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,760:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,762:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,763:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,764:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,764:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,765:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,765:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,765:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,765:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,766:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,766:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,770:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,771:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,771:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,771:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,806:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,807:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,807:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,813:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,819:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,820:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,821:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,821:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,822:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,822:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,822:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,822:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,822:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,822:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,823:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,823:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,826:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,826:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,826:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,827:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,827:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,827:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,834:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,839:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,840:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,840:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,841:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,841:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,842:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,842:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,842:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,842:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,843:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,843:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,850:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,852:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,852:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,853:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,854:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,854:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,859:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,866:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,867:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,867:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,867:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,868:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,868:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,869:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,869:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,869:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,869:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,870:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,870:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,874:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,875:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,875:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,876:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,876:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,884:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,887:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,887:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,888:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,888:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,889:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,889:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,889:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,890:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,890:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,891:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,891:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,896:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,897:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,897:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,897:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,898:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,901:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,905:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,905:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,905:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,906:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,906:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,906:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,906:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,906:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,907:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,907:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,907:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,907:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,910:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,911:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,912:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,912:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,918:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,922:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,922:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,922:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,923:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,923:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,923:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,923:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,923:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,923:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,924:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,924:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,927:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,929:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,930:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,930:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,937:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,940:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,940:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,940:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,940:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,941:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,941:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,941:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,941:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,941:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,942:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,942:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,943:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,947:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,948:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,949:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,949:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,952:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,957:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,958:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,958:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,958:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,958:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,959:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,959:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,959:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,959:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,959:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,960:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,962:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,963:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,963:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,963:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,968:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,969:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,969:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,970:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,970:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,970:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,970:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,971:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,971:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,971:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,971:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,971:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,971:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,974:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,975:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,975:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,977:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,980:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,981:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,981:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,982:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,982:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,982:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,982:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,982:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,982:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,983:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,983:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,985:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,986:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,986:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,989:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,992:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,993:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,993:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,993:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,993:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,994:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,994:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,994:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,994:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:02,994:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,995:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:02,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:02,995:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-11-02 14:56:02,998:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:02,999:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,002:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,005:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,005:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,005:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,005:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,006:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,006:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,006:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,006:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,006:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,006:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,007:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,009:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,010:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,013:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,016:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,016:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,016:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,017:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,017:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,017:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,017:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,017:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,017:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,018:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,018:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,018:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,020:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,024:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,026:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,026:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,027:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,027:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,027:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,027:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,028:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,028:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,028:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,028:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,028:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,032:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,035:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,038:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,038:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,038:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,038:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,039:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,039:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,039:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,039:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,039:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,040:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,040:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,040:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,042:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,046:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,049:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,050:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,050:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,050:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,050:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,051:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,051:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,052:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,052:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,052:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,053:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,056:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,060:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,063:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,064:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,064:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,065:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,065:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,066:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,066:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,066:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,066:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,067:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,067:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,067:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,070:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,076:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,076:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,076:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,077:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,077:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,077:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,077:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,077:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,077:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,078:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,078:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,080:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,087:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,087:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,087:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,087:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,088:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,088:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,088:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,088:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,088:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,088:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,089:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,089:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,091:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,097:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,097:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,097:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,098:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,098:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,098:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,098:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,098:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,099:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,099:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,101:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,110:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,110:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,110:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,111:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,111:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,111:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,111:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,111:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,112:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,112:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,112:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,115:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,124:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,125:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,125:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,125:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,125:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,125:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,126:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,126:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,126:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,129:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,142:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,142:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,143:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,143:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,143:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,143:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,143:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,144:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,144:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,144:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,147:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,155:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,156:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,157:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,157:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,157:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,157:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,157:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,159:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,161:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,169:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,169:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,169:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,170:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,170:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,170:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,170:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,170:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,170:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,173:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,182:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,182:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,183:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,183:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,183:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,184:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,185:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,188:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,197:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,197:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,198:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,199:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,199:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,199:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,200:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,201:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,205:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,219:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,223:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,223:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,223:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,223:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,224:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,227:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,247:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,248:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,248:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,248:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,248:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,248:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,250:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,253:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,271:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,273:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,273:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,273:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,273:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,277:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,288:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,288:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,288:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,289:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,289:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,289:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,293:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,304:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,304:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,304:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,305:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,309:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,321:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,321:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,321:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,322:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,322:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,326:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,337:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,337:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,338:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,341:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,350:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,351:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,352:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-11-02 14:56:03,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,352:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-11-02 14:56:03,355:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,363:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,363:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,366:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,377:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,377:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,381:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,390:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,390:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,393:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 14:56:03,404:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,404:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 14:56:03,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 14:56:03,405:INFO:setup() successfully completed in 1.29s...............
2023-11-02 14:56:07,319:INFO:Initializing compare_models()
2023-11-02 14:56:07,321:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-11-02 14:56:07,321:INFO:Checking exceptions
2023-11-02 14:56:07,323:INFO:Preparing display monitor
2023-11-02 14:56:07,365:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:713: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-11-02 14:56:07,365:INFO:Initializing Naive Forecaster
2023-11-02 14:56:07,365:INFO:Total runtime is 0.0 minutes
2023-11-02 14:56:07,369:INFO:SubProcess create_model() called ==================================
2023-11-02 14:56:07,369:INFO:Initializing create_model()
2023-11-02 14:56:07,369:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:56:07,369:INFO:Checking exceptions
2023-11-02 14:56:07,369:INFO:Importing libraries
2023-11-02 14:56:07,369:INFO:Copying training dataset
2023-11-02 14:56:07,375:INFO:Defining folds
2023-11-02 14:56:07,375:INFO:Declaring metric variables
2023-11-02 14:56:07,381:INFO:Importing untrained model
2023-11-02 14:56:07,387:INFO:Naive Forecaster Imported successfully
2023-11-02 14:56:07,397:INFO:Starting cross validation
2023-11-02 14:56:07,398:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 14:56:10,700:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:10,700:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:10,700:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:10,733:INFO:Calculating mean and std
2023-11-02 14:56:10,734:INFO:Creating metrics dataframe
2023-11-02 14:56:10,742:INFO:Uploading results into container
2023-11-02 14:56:10,742:INFO:Uploading model into container now
2023-11-02 14:56:10,742:INFO:_master_model_container: 1
2023-11-02 14:56:10,743:INFO:_display_container: 2
2023-11-02 14:56:10,743:INFO:NaiveForecaster()
2023-11-02 14:56:10,743:INFO:create_model() successfully completed......................................
2023-11-02 14:56:11,009:INFO:SubProcess create_model() end ==================================
2023-11-02 14:56:11,009:INFO:Creating metrics dataframe
2023-11-02 14:56:11,016:INFO:Initializing Grand Means Forecaster
2023-11-02 14:56:11,016:INFO:Total runtime is 0.06083769798278808 minutes
2023-11-02 14:56:11,018:INFO:SubProcess create_model() called ==================================
2023-11-02 14:56:11,019:INFO:Initializing create_model()
2023-11-02 14:56:11,019:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:56:11,019:INFO:Checking exceptions
2023-11-02 14:56:11,019:INFO:Importing libraries
2023-11-02 14:56:11,019:INFO:Copying training dataset
2023-11-02 14:56:11,024:INFO:Defining folds
2023-11-02 14:56:11,024:INFO:Declaring metric variables
2023-11-02 14:56:11,030:INFO:Importing untrained model
2023-11-02 14:56:11,034:INFO:Grand Means Forecaster Imported successfully
2023-11-02 14:56:11,044:INFO:Starting cross validation
2023-11-02 14:56:11,045:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 14:56:13,409:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:13,418:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:13,431:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:13,450:INFO:Calculating mean and std
2023-11-02 14:56:13,451:INFO:Creating metrics dataframe
2023-11-02 14:56:13,460:INFO:Uploading results into container
2023-11-02 14:56:13,461:INFO:Uploading model into container now
2023-11-02 14:56:13,461:INFO:_master_model_container: 2
2023-11-02 14:56:13,461:INFO:_display_container: 2
2023-11-02 14:56:13,461:INFO:NaiveForecaster(strategy='mean')
2023-11-02 14:56:13,462:INFO:create_model() successfully completed......................................
2023-11-02 14:56:13,661:INFO:SubProcess create_model() end ==================================
2023-11-02 14:56:13,661:INFO:Creating metrics dataframe
2023-11-02 14:56:13,669:INFO:Initializing Seasonal Naive Forecaster
2023-11-02 14:56:13,669:INFO:Total runtime is 0.10506606896718343 minutes
2023-11-02 14:56:13,674:INFO:SubProcess create_model() called ==================================
2023-11-02 14:56:13,674:INFO:Initializing create_model()
2023-11-02 14:56:13,674:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:56:13,674:INFO:Checking exceptions
2023-11-02 14:56:13,675:INFO:Importing libraries
2023-11-02 14:56:13,675:INFO:Copying training dataset
2023-11-02 14:56:13,678:INFO:Defining folds
2023-11-02 14:56:13,678:INFO:Declaring metric variables
2023-11-02 14:56:13,682:INFO:Importing untrained model
2023-11-02 14:56:13,687:INFO:Seasonal Naive Forecaster Imported successfully
2023-11-02 14:56:13,697:INFO:Starting cross validation
2023-11-02 14:56:13,698:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 14:56:13,787:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:15,938:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:15,938:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:16,007:INFO:Calculating mean and std
2023-11-02 14:56:16,010:INFO:Creating metrics dataframe
2023-11-02 14:56:16,016:INFO:Uploading results into container
2023-11-02 14:56:16,017:INFO:Uploading model into container now
2023-11-02 14:56:16,017:INFO:_master_model_container: 3
2023-11-02 14:56:16,017:INFO:_display_container: 2
2023-11-02 14:56:16,017:INFO:NaiveForecaster(sp=42)
2023-11-02 14:56:16,017:INFO:create_model() successfully completed......................................
2023-11-02 14:56:16,216:INFO:SubProcess create_model() end ==================================
2023-11-02 14:56:16,216:INFO:Creating metrics dataframe
2023-11-02 14:56:16,228:INFO:Initializing ARIMA
2023-11-02 14:56:16,228:INFO:Total runtime is 0.14770412047704062 minutes
2023-11-02 14:56:16,232:INFO:SubProcess create_model() called ==================================
2023-11-02 14:56:16,232:INFO:Initializing create_model()
2023-11-02 14:56:16,232:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:56:16,232:INFO:Checking exceptions
2023-11-02 14:56:16,232:INFO:Importing libraries
2023-11-02 14:56:16,232:INFO:Copying training dataset
2023-11-02 14:56:16,236:INFO:Defining folds
2023-11-02 14:56:16,236:INFO:Declaring metric variables
2023-11-02 14:56:16,241:INFO:Importing untrained model
2023-11-02 14:56:16,247:INFO:ARIMA Imported successfully
2023-11-02 14:56:16,255:INFO:Starting cross validation
2023-11-02 14:56:16,256:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 14:56:16,321:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:16,322:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:16,326:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:16,326:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:16,336:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:16,338:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:473: ValueWarning: An unsupported index was provided and will be ignored when e.g. forecasting.
  self._init_dates(dates, freq)

2023-11-02 14:56:58,731:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:56:58,739:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:56:58,822:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:56:58,880:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:56:58,880:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:56:58,890:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:56:58,890:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:56:58,922:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:56:58,922:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:56:58,938:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:56:58,938:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,265:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,269:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,292:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:57:02,305:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,311:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,312:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,312:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,326:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,326:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,344:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,345:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,361:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,361:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,391:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sktime\forecasting\base\_base.py:557: UserWarning: In 0.22.0, predict_quantiles return default column level 0 name will change for univariate probabilistic quantile forecasts from 'Quantiles' to variable name. The old behaviour can be retained by setting the legacy_interface argument to True, until 0.23.0 when the legacy_interface argument will be removed.
  warn(

2023-11-02 14:57:02,412:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,412:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,424:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,425:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,448:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,449:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,455:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.
  return get_prediction_index(

2023-11-02 14:57:02,455:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\statsmodels\tsa\base\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.
  return get_prediction_index(

2023-11-02 14:57:02,508:INFO:Calculating mean and std
2023-11-02 14:57:02,570:INFO:Creating metrics dataframe
2023-11-02 14:57:02,665:INFO:Uploading results into container
2023-11-02 14:57:02,665:INFO:Uploading model into container now
2023-11-02 14:57:02,674:INFO:_master_model_container: 4
2023-11-02 14:57:02,674:INFO:_display_container: 2
2023-11-02 14:57:02,684:INFO:ARIMA(seasonal_order=(0, 1, 0, 42))
2023-11-02 14:57:02,684:INFO:create_model() successfully completed......................................
2023-11-02 14:57:03,454:INFO:SubProcess create_model() end ==================================
2023-11-02 14:57:03,455:INFO:Creating metrics dataframe
2023-11-02 14:57:03,490:INFO:Initializing Auto ARIMA
2023-11-02 14:57:03,490:INFO:Total runtime is 0.9354173183441162 minutes
2023-11-02 14:57:03,496:INFO:SubProcess create_model() called ==================================
2023-11-02 14:57:03,496:INFO:Initializing create_model()
2023-11-02 14:57:03,496:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 14:57:03,496:INFO:Checking exceptions
2023-11-02 14:57:03,496:INFO:Importing libraries
2023-11-02 14:57:03,497:INFO:Copying training dataset
2023-11-02 14:57:03,509:INFO:Defining folds
2023-11-02 14:57:03,510:INFO:Declaring metric variables
2023-11-02 14:57:03,517:INFO:Importing untrained model
2023-11-02 14:57:03,523:INFO:Auto ARIMA Imported successfully
2023-11-02 14:57:03,535:INFO:Starting cross validation
2023-11-02 14:57:03,536:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:05:27,749:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=123,
                                                                          sp=42,
                                                                          suppress_warnings=True))]))])
2023-11-02 15:05:27,759:ERROR:Unable to allocate 239. MiB for an array with shape (45, 45, 15471) and data type float64
2023-11-02 15:11:00,093:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=123,
                                                                          sp=42,
                                                                          suppress_warnings=True))]))])
2023-11-02 15:11:00,124:ERROR:Memoryview is not initialized
2023-11-02 15:20:54,507:WARNING:create_model() for auto_arima raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-02 15:20:54,739:WARNING:Traceback (most recent call last):
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1527, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\time_series\forecasting\oop.py", line 2646, in _create_model_with_cv
    scores, cutoffs = cross_validate(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\utils\time_series\forecasting\model_selection.py", line 309, in cross_validate
    out = parallel(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-11-02 15:20:54,746:INFO:Initializing create_model()
2023-11-02 15:20:54,746:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:20:54,747:INFO:Checking exceptions
2023-11-02 15:20:54,748:INFO:Importing libraries
2023-11-02 15:20:54,753:INFO:Copying training dataset
2023-11-02 15:20:54,986:INFO:Defining folds
2023-11-02 15:20:54,990:INFO:Declaring metric variables
2023-11-02 15:20:55,059:INFO:Importing untrained model
2023-11-02 15:20:55,096:INFO:Auto ARIMA Imported successfully
2023-11-02 15:20:55,135:INFO:Starting cross validation
2023-11-02 15:20:55,142:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:29:57,278:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=123,
                                                                          sp=42,
                                                                          suppress_warnings=True))]))])
2023-11-02 15:29:57,295:ERROR:Unable to allocate 5.31 MiB for an array with shape (45, 15473) and data type float64
2023-11-02 15:29:57,292:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=123,
                                                                          sp=42,
                                                                          suppress_warnings=True))]))])
2023-11-02 15:29:57,308:ERROR:Unable to allocate 5.31 MiB for an array with shape (45, 15467) and data type float64
2023-11-02 15:29:57,318:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=123,
                                                                          sp=42,
                                                                          suppress_warnings=True))]))])
2023-11-02 15:29:57,334:ERROR:Unable to allocate 5.31 MiB for an array with shape (45, 15470) and data type float64
2023-11-02 15:29:58,568:INFO:Calculating mean and std
2023-11-02 15:29:58,669:INFO:Creating metrics dataframe
2023-11-02 15:29:58,824:INFO:Uploading results into container
2023-11-02 15:29:58,825:INFO:Uploading model into container now
2023-11-02 15:29:58,847:INFO:_master_model_container: 5
2023-11-02 15:29:58,848:INFO:_display_container: 2
2023-11-02 15:29:58,865:INFO:AutoARIMA(random_state=123, sp=42, suppress_warnings=True)
2023-11-02 15:29:58,865:INFO:create_model() successfully completed......................................
2023-11-02 15:30:00,541:ERROR:create_model() for AutoARIMA(random_state=123, sp=42, suppress_warnings=True) raised an exception or returned all 0.0:
2023-11-02 15:30:00,546:ERROR:Traceback (most recent call last):
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1527, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\time_series\forecasting\oop.py", line 2646, in _create_model_with_cv
    scores, cutoffs = cross_validate(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\utils\time_series\forecasting\model_selection.py", line 309, in cross_validate
    out = parallel(
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 814, in compare_models
    assert (
AssertionError

2023-11-02 15:30:00,546:INFO:Initializing STLF
2023-11-02 15:30:00,546:INFO:Total runtime is 33.8863485733668 minutes
2023-11-02 15:30:00,551:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:00,551:INFO:Initializing create_model()
2023-11-02 15:30:00,551:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=stlf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:00,551:INFO:Checking exceptions
2023-11-02 15:30:00,551:INFO:Importing libraries
2023-11-02 15:30:00,552:INFO:Copying training dataset
2023-11-02 15:30:00,570:INFO:Defining folds
2023-11-02 15:30:00,570:INFO:Declaring metric variables
2023-11-02 15:30:00,573:INFO:Importing untrained model
2023-11-02 15:30:00,582:INFO:STLF Imported successfully
2023-11-02 15:30:00,592:INFO:Starting cross validation
2023-11-02 15:30:00,594:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:02,564:INFO:Calculating mean and std
2023-11-02 15:30:02,565:INFO:Creating metrics dataframe
2023-11-02 15:30:02,573:INFO:Uploading results into container
2023-11-02 15:30:02,574:INFO:Uploading model into container now
2023-11-02 15:30:02,575:INFO:_master_model_container: 6
2023-11-02 15:30:02,575:INFO:_display_container: 2
2023-11-02 15:30:02,576:INFO:STLForecaster(sp=42)
2023-11-02 15:30:02,576:INFO:create_model() successfully completed......................................
2023-11-02 15:30:02,838:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:02,838:INFO:Creating metrics dataframe
2023-11-02 15:30:02,870:INFO:Initializing Croston
2023-11-02 15:30:02,870:INFO:Total runtime is 33.92507383823395 minutes
2023-11-02 15:30:02,875:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:02,875:INFO:Initializing create_model()
2023-11-02 15:30:02,876:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:02,876:INFO:Checking exceptions
2023-11-02 15:30:02,876:INFO:Importing libraries
2023-11-02 15:30:02,876:INFO:Copying training dataset
2023-11-02 15:30:02,883:INFO:Defining folds
2023-11-02 15:30:02,885:INFO:Declaring metric variables
2023-11-02 15:30:02,890:INFO:Importing untrained model
2023-11-02 15:30:02,897:INFO:Croston Imported successfully
2023-11-02 15:30:02,909:INFO:Starting cross validation
2023-11-02 15:30:02,912:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:08,284:INFO:Calculating mean and std
2023-11-02 15:30:08,289:INFO:Creating metrics dataframe
2023-11-02 15:30:08,299:INFO:Uploading results into container
2023-11-02 15:30:08,299:INFO:Uploading model into container now
2023-11-02 15:30:08,300:INFO:_master_model_container: 7
2023-11-02 15:30:08,301:INFO:_display_container: 2
2023-11-02 15:30:08,301:INFO:Croston()
2023-11-02 15:30:08,301:INFO:create_model() successfully completed......................................
2023-11-02 15:30:08,561:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:08,561:INFO:Creating metrics dataframe
2023-11-02 15:30:08,585:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:08,585:INFO:Total runtime is 34.02033545176188 minutes
2023-11-02 15:30:08,592:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:08,592:INFO:Initializing create_model()
2023-11-02 15:30:08,592:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:08,592:INFO:Checking exceptions
2023-11-02 15:30:08,592:INFO:Importing libraries
2023-11-02 15:30:08,592:INFO:Copying training dataset
2023-11-02 15:30:08,600:INFO:Defining folds
2023-11-02 15:30:08,600:INFO:Declaring metric variables
2023-11-02 15:30:08,606:INFO:Importing untrained model
2023-11-02 15:30:08,615:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:08,634:INFO:Starting cross validation
2023-11-02 15:30:08,635:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:09,105:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:12,293:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:12,295:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:12,812:INFO:Calculating mean and std
2023-11-02 15:30:12,813:INFO:Creating metrics dataframe
2023-11-02 15:30:12,826:INFO:Uploading results into container
2023-11-02 15:30:12,826:INFO:Uploading model into container now
2023-11-02 15:30:12,827:INFO:_master_model_container: 8
2023-11-02 15:30:12,827:INFO:_display_container: 2
2023-11-02 15:30:12,836:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False),
                    sp=42, window_length=42)
2023-11-02 15:30:12,837:INFO:create_model() successfully completed......................................
2023-11-02 15:30:13,111:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:13,111:INFO:Creating metrics dataframe
2023-11-02 15:30:13,127:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:13,127:INFO:Total runtime is 34.096031848589575 minutes
2023-11-02 15:30:13,133:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:13,133:INFO:Initializing create_model()
2023-11-02 15:30:13,133:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:13,133:INFO:Checking exceptions
2023-11-02 15:30:13,133:INFO:Importing libraries
2023-11-02 15:30:13,133:INFO:Copying training dataset
2023-11-02 15:30:13,142:INFO:Defining folds
2023-11-02 15:30:13,142:INFO:Declaring metric variables
2023-11-02 15:30:13,148:INFO:Importing untrained model
2023-11-02 15:30:13,155:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:13,172:INFO:Starting cross validation
2023-11-02 15:30:13,173:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:13,464:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:13,466:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:13,488:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:14,129:INFO:Calculating mean and std
2023-11-02 15:30:14,130:INFO:Creating metrics dataframe
2023-11-02 15:30:14,142:INFO:Uploading results into container
2023-11-02 15:30:14,142:INFO:Uploading model into container now
2023-11-02 15:30:14,143:INFO:_master_model_container: 9
2023-11-02 15:30:14,143:INFO:_display_container: 2
2023-11-02 15:30:14,150:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:30:14,150:INFO:create_model() successfully completed......................................
2023-11-02 15:30:14,479:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:14,480:INFO:Creating metrics dataframe
2023-11-02 15:30:14,501:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:14,501:INFO:Total runtime is 34.11892549594243 minutes
2023-11-02 15:30:14,507:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:14,507:INFO:Initializing create_model()
2023-11-02 15:30:14,507:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:14,507:INFO:Checking exceptions
2023-11-02 15:30:14,507:INFO:Importing libraries
2023-11-02 15:30:14,507:INFO:Copying training dataset
2023-11-02 15:30:14,513:INFO:Defining folds
2023-11-02 15:30:14,513:INFO:Declaring metric variables
2023-11-02 15:30:14,517:INFO:Importing untrained model
2023-11-02 15:30:14,528:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:14,540:INFO:Starting cross validation
2023-11-02 15:30:14,542:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:14,812:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:14,821:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 15:30:15,371:INFO:Calculating mean and std
2023-11-02 15:30:15,374:INFO:Creating metrics dataframe
2023-11-02 15:30:15,380:INFO:Uploading results into container
2023-11-02 15:30:15,380:INFO:Uploading model into container now
2023-11-02 15:30:15,380:INFO:_master_model_container: 10
2023-11-02 15:30:15,380:INFO:_display_container: 2
2023-11-02 15:30:15,387:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001),
                    sp=42, window_length=42)
2023-11-02 15:30:15,387:INFO:create_model() successfully completed......................................
2023-11-02 15:30:15,664:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:15,664:INFO:Creating metrics dataframe
2023-11-02 15:30:15,681:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:15,681:INFO:Total runtime is 34.13859162330627 minutes
2023-11-02 15:30:15,685:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:15,686:INFO:Initializing create_model()
2023-11-02 15:30:15,686:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:15,686:INFO:Checking exceptions
2023-11-02 15:30:15,686:INFO:Importing libraries
2023-11-02 15:30:15,686:INFO:Copying training dataset
2023-11-02 15:30:15,696:INFO:Defining folds
2023-11-02 15:30:15,696:INFO:Declaring metric variables
2023-11-02 15:30:15,700:INFO:Importing untrained model
2023-11-02 15:30:15,706:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:15,719:INFO:Starting cross validation
2023-11-02 15:30:15,723:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:16,593:INFO:Calculating mean and std
2023-11-02 15:30:16,594:INFO:Creating metrics dataframe
2023-11-02 15:30:16,600:INFO:Uploading results into container
2023-11-02 15:30:16,600:INFO:Uploading model into container now
2023-11-02 15:30:16,601:INFO:_master_model_container: 11
2023-11-02 15:30:16,601:INFO:_display_container: 2
2023-11-02 15:30:16,609:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:30:16,609:INFO:create_model() successfully completed......................................
2023-11-02 15:30:16,903:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:16,903:INFO:Creating metrics dataframe
2023-11-02 15:30:16,924:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:16,924:INFO:Total runtime is 34.15931221644083 minutes
2023-11-02 15:30:16,929:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:16,930:INFO:Initializing create_model()
2023-11-02 15:30:16,930:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:16,930:INFO:Checking exceptions
2023-11-02 15:30:16,930:INFO:Importing libraries
2023-11-02 15:30:16,930:INFO:Copying training dataset
2023-11-02 15:30:16,935:INFO:Defining folds
2023-11-02 15:30:16,935:INFO:Declaring metric variables
2023-11-02 15:30:16,945:INFO:Importing untrained model
2023-11-02 15:30:16,951:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:16,970:INFO:Starting cross validation
2023-11-02 15:30:16,971:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:17,623:INFO:Calculating mean and std
2023-11-02 15:30:17,627:INFO:Creating metrics dataframe
2023-11-02 15:30:17,636:INFO:Uploading results into container
2023-11-02 15:30:17,636:INFO:Uploading model into container now
2023-11-02 15:30:17,637:INFO:_master_model_container: 12
2023-11-02 15:30:17,637:INFO:_display_container: 2
2023-11-02 15:30:17,645:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False),
                    sp=42, window_length=42)
2023-11-02 15:30:17,645:INFO:create_model() successfully completed......................................
2023-11-02 15:30:17,932:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:17,932:INFO:Creating metrics dataframe
2023-11-02 15:30:17,961:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:17,961:INFO:Total runtime is 34.17660188674926 minutes
2023-11-02 15:30:17,973:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:17,973:INFO:Initializing create_model()
2023-11-02 15:30:17,973:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:17,973:INFO:Checking exceptions
2023-11-02 15:30:17,973:INFO:Importing libraries
2023-11-02 15:30:17,973:INFO:Copying training dataset
2023-11-02 15:30:17,983:INFO:Defining folds
2023-11-02 15:30:17,983:INFO:Declaring metric variables
2023-11-02 15:30:17,988:INFO:Importing untrained model
2023-11-02 15:30:17,996:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:18,009:INFO:Starting cross validation
2023-11-02 15:30:18,010:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:18,692:INFO:Calculating mean and std
2023-11-02 15:30:18,694:INFO:Creating metrics dataframe
2023-11-02 15:30:18,702:INFO:Uploading results into container
2023-11-02 15:30:18,702:INFO:Uploading model into container now
2023-11-02 15:30:18,703:INFO:_master_model_container: 13
2023-11-02 15:30:18,703:INFO:_display_container: 2
2023-11-02 15:30:18,713:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False),
                    sp=42, window_length=42)
2023-11-02 15:30:18,713:INFO:create_model() successfully completed......................................
2023-11-02 15:30:19,066:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:19,066:INFO:Creating metrics dataframe
2023-11-02 15:30:19,089:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:19,091:INFO:Total runtime is 34.195421624183645 minutes
2023-11-02 15:30:19,098:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:19,098:INFO:Initializing create_model()
2023-11-02 15:30:19,098:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:19,098:INFO:Checking exceptions
2023-11-02 15:30:19,098:INFO:Importing libraries
2023-11-02 15:30:19,098:INFO:Copying training dataset
2023-11-02 15:30:19,104:INFO:Defining folds
2023-11-02 15:30:19,104:INFO:Declaring metric variables
2023-11-02 15:30:19,113:INFO:Importing untrained model
2023-11-02 15:30:19,119:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:19,134:INFO:Starting cross validation
2023-11-02 15:30:19,135:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:21,583:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 15:30:21,583:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 15:30:21,583:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 15:30:21,895:INFO:Calculating mean and std
2023-11-02 15:30:21,898:INFO:Creating metrics dataframe
2023-11-02 15:30:21,906:INFO:Uploading results into container
2023-11-02 15:30:21,907:INFO:Uploading model into container now
2023-11-02 15:30:21,908:INFO:_master_model_container: 14
2023-11-02 15:30:21,910:INFO:_display_container: 2
2023-11-02 15:30:21,919:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:30:21,919:INFO:create_model() successfully completed......................................
2023-11-02 15:30:22,186:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:22,186:INFO:Creating metrics dataframe
2023-11-02 15:30:22,204:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:22,204:INFO:Total runtime is 34.247308544317875 minutes
2023-11-02 15:30:22,208:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:22,209:INFO:Initializing create_model()
2023-11-02 15:30:22,209:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:22,209:INFO:Checking exceptions
2023-11-02 15:30:22,209:INFO:Importing libraries
2023-11-02 15:30:22,209:INFO:Copying training dataset
2023-11-02 15:30:22,217:INFO:Defining folds
2023-11-02 15:30:22,218:INFO:Declaring metric variables
2023-11-02 15:30:22,226:INFO:Importing untrained model
2023-11-02 15:30:22,238:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:22,265:INFO:Starting cross validation
2023-11-02 15:30:22,267:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:22,993:INFO:Calculating mean and std
2023-11-02 15:30:22,997:INFO:Creating metrics dataframe
2023-11-02 15:30:23,004:INFO:Uploading results into container
2023-11-02 15:30:23,004:INFO:Uploading model into container now
2023-11-02 15:30:23,005:INFO:_master_model_container: 15
2023-11-02 15:30:23,005:INFO:_display_container: 2
2023-11-02 15:30:23,014:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None),
                    sp=42, window_length=42)
2023-11-02 15:30:23,014:INFO:create_model() successfully completed......................................
2023-11-02 15:30:23,363:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:23,364:INFO:Creating metrics dataframe
2023-11-02 15:30:23,387:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:23,387:INFO:Total runtime is 34.26703080336252 minutes
2023-11-02 15:30:23,394:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:23,396:INFO:Initializing create_model()
2023-11-02 15:30:23,396:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:23,396:INFO:Checking exceptions
2023-11-02 15:30:23,396:INFO:Importing libraries
2023-11-02 15:30:23,396:INFO:Copying training dataset
2023-11-02 15:30:23,405:INFO:Defining folds
2023-11-02 15:30:23,405:INFO:Declaring metric variables
2023-11-02 15:30:23,411:INFO:Importing untrained model
2023-11-02 15:30:23,422:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:23,438:INFO:Starting cross validation
2023-11-02 15:30:23,440:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:24,237:INFO:Calculating mean and std
2023-11-02 15:30:24,240:INFO:Creating metrics dataframe
2023-11-02 15:30:24,257:INFO:Uploading results into container
2023-11-02 15:30:24,258:INFO:Uploading model into container now
2023-11-02 15:30:24,259:INFO:_master_model_container: 16
2023-11-02 15:30:24,260:INFO:_display_container: 2
2023-11-02 15:30:24,267:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'),
                    sp=42, window_length=42)
2023-11-02 15:30:24,267:INFO:create_model() successfully completed......................................
2023-11-02 15:30:24,570:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:24,570:INFO:Creating metrics dataframe
2023-11-02 15:30:24,592:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:24,592:INFO:Total runtime is 34.28711125850677 minutes
2023-11-02 15:30:24,599:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:24,599:INFO:Initializing create_model()
2023-11-02 15:30:24,599:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:24,599:INFO:Checking exceptions
2023-11-02 15:30:24,599:INFO:Importing libraries
2023-11-02 15:30:24,599:INFO:Copying training dataset
2023-11-02 15:30:24,608:INFO:Defining folds
2023-11-02 15:30:24,608:INFO:Declaring metric variables
2023-11-02 15:30:24,618:INFO:Importing untrained model
2023-11-02 15:30:24,632:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:24,666:INFO:Starting cross validation
2023-11-02 15:30:24,668:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:30:26,558:INFO:Calculating mean and std
2023-11-02 15:30:26,559:INFO:Creating metrics dataframe
2023-11-02 15:30:26,567:INFO:Uploading results into container
2023-11-02 15:30:26,567:INFO:Uploading model into container now
2023-11-02 15:30:26,568:INFO:_master_model_container: 17
2023-11-02 15:30:26,568:INFO:_display_container: 2
2023-11-02 15:30:26,575:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'),
                    sp=42, window_length=42)
2023-11-02 15:30:26,575:INFO:create_model() successfully completed......................................
2023-11-02 15:30:26,810:INFO:SubProcess create_model() end ==================================
2023-11-02 15:30:26,811:INFO:Creating metrics dataframe
2023-11-02 15:30:26,834:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-11-02 15:30:26,834:INFO:Total runtime is 34.3244820634524 minutes
2023-11-02 15:30:26,838:INFO:SubProcess create_model() called ==================================
2023-11-02 15:30:26,838:INFO:Initializing create_model()
2023-11-02 15:30:26,838:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:30:26,838:INFO:Checking exceptions
2023-11-02 15:30:26,838:INFO:Importing libraries
2023-11-02 15:30:26,838:INFO:Copying training dataset
2023-11-02 15:30:26,843:INFO:Defining folds
2023-11-02 15:30:26,843:INFO:Declaring metric variables
2023-11-02 15:30:26,859:INFO:Importing untrained model
2023-11-02 15:30:26,866:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:30:26,878:INFO:Starting cross validation
2023-11-02 15:30:26,882:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:31:39,512:INFO:Calculating mean and std
2023-11-02 15:31:39,513:INFO:Creating metrics dataframe
2023-11-02 15:31:39,520:INFO:Uploading results into container
2023-11-02 15:31:39,520:INFO:Uploading model into container now
2023-11-02 15:31:39,520:INFO:_master_model_container: 18
2023-11-02 15:31:39,520:INFO:_display_container: 2
2023-11-02 15:31:39,528:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:31:39,528:INFO:create_model() successfully completed......................................
2023-11-02 15:31:39,748:INFO:SubProcess create_model() end ==================================
2023-11-02 15:31:39,748:INFO:Creating metrics dataframe
2023-11-02 15:31:39,763:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-11-02 15:31:39,763:INFO:Total runtime is 35.539954431851704 minutes
2023-11-02 15:31:39,765:INFO:SubProcess create_model() called ==================================
2023-11-02 15:31:39,765:INFO:Initializing create_model()
2023-11-02 15:31:39,765:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:31:39,765:INFO:Checking exceptions
2023-11-02 15:31:39,765:INFO:Importing libraries
2023-11-02 15:31:39,765:INFO:Copying training dataset
2023-11-02 15:31:39,771:INFO:Defining folds
2023-11-02 15:31:39,771:INFO:Declaring metric variables
2023-11-02 15:31:39,775:INFO:Importing untrained model
2023-11-02 15:31:39,781:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:31:39,789:INFO:Starting cross validation
2023-11-02 15:31:39,792:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:31:52,214:INFO:Calculating mean and std
2023-11-02 15:31:52,215:INFO:Creating metrics dataframe
2023-11-02 15:31:52,226:INFO:Uploading results into container
2023-11-02 15:31:52,226:INFO:Uploading model into container now
2023-11-02 15:31:52,227:INFO:_master_model_container: 19
2023-11-02 15:31:52,227:INFO:_display_container: 2
2023-11-02 15:31:52,236:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:31:52,237:INFO:create_model() successfully completed......................................
2023-11-02 15:31:52,485:INFO:SubProcess create_model() end ==================================
2023-11-02 15:31:52,486:INFO:Creating metrics dataframe
2023-11-02 15:31:52,501:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-11-02 15:31:52,501:INFO:Total runtime is 35.75226627190908 minutes
2023-11-02 15:31:52,509:INFO:SubProcess create_model() called ==================================
2023-11-02 15:31:52,509:INFO:Initializing create_model()
2023-11-02 15:31:52,509:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:31:52,509:INFO:Checking exceptions
2023-11-02 15:31:52,509:INFO:Importing libraries
2023-11-02 15:31:52,510:INFO:Copying training dataset
2023-11-02 15:31:52,515:INFO:Defining folds
2023-11-02 15:31:52,515:INFO:Declaring metric variables
2023-11-02 15:31:52,523:INFO:Importing untrained model
2023-11-02 15:31:52,529:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:31:52,543:INFO:Starting cross validation
2023-11-02 15:31:52,545:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:32:34,796:INFO:Calculating mean and std
2023-11-02 15:32:34,797:INFO:Creating metrics dataframe
2023-11-02 15:32:34,800:INFO:Uploading results into container
2023-11-02 15:32:34,800:INFO:Uploading model into container now
2023-11-02 15:32:34,801:INFO:_master_model_container: 20
2023-11-02 15:32:34,801:INFO:_display_container: 2
2023-11-02 15:32:34,809:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:32:34,810:INFO:create_model() successfully completed......................................
2023-11-02 15:32:35,013:INFO:SubProcess create_model() end ==================================
2023-11-02 15:32:35,013:INFO:Creating metrics dataframe
2023-11-02 15:32:35,028:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-11-02 15:32:35,029:INFO:Total runtime is 36.461054587364195 minutes
2023-11-02 15:32:35,032:INFO:SubProcess create_model() called ==================================
2023-11-02 15:32:35,032:INFO:Initializing create_model()
2023-11-02 15:32:35,033:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:32:35,033:INFO:Checking exceptions
2023-11-02 15:32:35,033:INFO:Importing libraries
2023-11-02 15:32:35,033:INFO:Copying training dataset
2023-11-02 15:32:35,041:INFO:Defining folds
2023-11-02 15:32:35,041:INFO:Declaring metric variables
2023-11-02 15:32:35,056:INFO:Importing untrained model
2023-11-02 15:32:35,065:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:32:35,078:INFO:Starting cross validation
2023-11-02 15:32:35,079:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:32:43,099:INFO:Calculating mean and std
2023-11-02 15:32:43,100:INFO:Creating metrics dataframe
2023-11-02 15:32:43,107:INFO:Uploading results into container
2023-11-02 15:32:43,107:INFO:Uploading model into container now
2023-11-02 15:32:43,108:INFO:_master_model_container: 21
2023-11-02 15:32:43,108:INFO:_display_container: 2
2023-11-02 15:32:43,117:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123),
                    sp=42, window_length=42)
2023-11-02 15:32:43,118:INFO:create_model() successfully completed......................................
2023-11-02 15:32:43,370:INFO:SubProcess create_model() end ==================================
2023-11-02 15:32:43,370:INFO:Creating metrics dataframe
2023-11-02 15:32:43,389:INFO:Initializing Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-11-02 15:32:43,389:INFO:Total runtime is 36.600390152136484 minutes
2023-11-02 15:32:43,395:INFO:SubProcess create_model() called ==================================
2023-11-02 15:32:43,396:INFO:Initializing create_model()
2023-11-02 15:32:43,396:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=xgboost_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:32:43,396:INFO:Checking exceptions
2023-11-02 15:32:43,396:INFO:Importing libraries
2023-11-02 15:32:43,396:INFO:Copying training dataset
2023-11-02 15:32:43,401:INFO:Defining folds
2023-11-02 15:32:43,401:INFO:Declaring metric variables
2023-11-02 15:32:43,405:INFO:Importing untrained model
2023-11-02 15:32:43,412:INFO:Extreme Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:32:43,424:INFO:Starting cross validation
2023-11-02 15:32:43,425:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:32:46,825:INFO:Calculating mean and std
2023-11-02 15:32:46,829:INFO:Creating metrics dataframe
2023-11-02 15:32:46,849:INFO:Uploading results into container
2023-11-02 15:32:46,851:INFO:Uploading model into container now
2023-11-02 15:32:46,854:INFO:_master_model_container: 22
2023-11-02 15:32:46,854:INFO:_display_container: 2
2023-11-02 15:32:46,867:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=...
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...),
                    sp=42, window_length=42)
2023-11-02 15:32:46,867:INFO:create_model() successfully completed......................................
2023-11-02 15:32:47,174:INFO:SubProcess create_model() end ==================================
2023-11-02 15:32:47,174:INFO:Creating metrics dataframe
2023-11-02 15:32:47,196:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-11-02 15:32:47,197:INFO:Total runtime is 36.66386638482412 minutes
2023-11-02 15:32:47,203:INFO:SubProcess create_model() called ==================================
2023-11-02 15:32:47,203:INFO:Initializing create_model()
2023-11-02 15:32:47,203:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B864041C0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:32:47,203:INFO:Checking exceptions
2023-11-02 15:32:47,203:INFO:Importing libraries
2023-11-02 15:32:47,203:INFO:Copying training dataset
2023-11-02 15:32:47,208:INFO:Defining folds
2023-11-02 15:32:47,208:INFO:Declaring metric variables
2023-11-02 15:32:47,213:INFO:Importing untrained model
2023-11-02 15:32:47,218:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-11-02 15:32:47,232:INFO:Starting cross validation
2023-11-02 15:32:47,233:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=15467, step_length=3), n_jobs=-1
2023-11-02 15:32:49,177:INFO:Calculating mean and std
2023-11-02 15:32:49,179:INFO:Creating metrics dataframe
2023-11-02 15:32:49,189:INFO:Uploading results into container
2023-11-02 15:32:49,189:INFO:Uploading model into container now
2023-11-02 15:32:49,190:INFO:_master_model_container: 23
2023-11-02 15:32:49,190:INFO:_display_container: 2
2023-11-02 15:32:49,199:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0),
                    sp=42, window_length=42)
2023-11-02 15:32:49,201:INFO:create_model() successfully completed......................................
2023-11-02 15:32:49,510:INFO:SubProcess create_model() end ==================================
2023-11-02 15:32:49,510:INFO:Creating metrics dataframe
2023-11-02 15:32:49,561:INFO:Initializing create_model()
2023-11-02 15:32:49,561:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False),
                    sp=42, window_length=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:32:49,562:INFO:Checking exceptions
2023-11-02 15:32:49,572:INFO:Importing libraries
2023-11-02 15:32:49,572:INFO:Copying training dataset
2023-11-02 15:32:49,578:INFO:Defining folds
2023-11-02 15:32:49,578:INFO:Declaring metric variables
2023-11-02 15:32:49,579:INFO:Importing untrained model
2023-11-02 15:32:49,579:INFO:Declaring custom model
2023-11-02 15:32:49,584:INFO:RandomForestRegressor Imported successfully
2023-11-02 15:32:49,585:INFO:Cross validation set to False
2023-11-02 15:32:49,585:INFO:Fitting Model
2023-11-02 15:33:15,876:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:33:15,876:INFO:create_model() successfully completed......................................
2023-11-02 15:33:16,108:INFO:Initializing create_model()
2023-11-02 15:33:16,108:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 15:33:16,108:INFO:Checking exceptions
2023-11-02 15:33:16,111:INFO:Importing libraries
2023-11-02 15:33:16,111:INFO:Copying training dataset
2023-11-02 15:33:16,113:INFO:Defining folds
2023-11-02 15:33:16,113:INFO:Declaring metric variables
2023-11-02 15:33:16,114:INFO:Importing untrained model
2023-11-02 15:33:16,114:INFO:Declaring custom model
2023-11-02 15:33:16,115:INFO:ExtraTreesRegressor Imported successfully
2023-11-02 15:33:16,115:INFO:Cross validation set to False
2023-11-02 15:33:16,115:INFO:Fitting Model
2023-11-02 15:33:20,120:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42)
2023-11-02 15:33:20,121:INFO:create_model() successfully completed......................................
2023-11-02 15:33:20,431:INFO:_master_model_container: 23
2023-11-02 15:33:20,431:INFO:_display_container: 2
2023-11-02 15:33:20,446:INFO:[BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False),
                    sp=42, window_length=42), BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42)]
2023-11-02 15:33:20,449:INFO:compare_models() successfully completed......................................
2023-11-02 18:16:18,828:INFO:Initializing evaluate_model()
2023-11-02 18:16:18,828:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 18:16:18,866:INFO:Initializing plot_model()
2023-11-02 18:16:18,867:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 18:16:18,867:INFO:Checking exceptions
2023-11-02 18:16:18,869:INFO:Preloading libraries
2023-11-02 18:16:19,113:INFO:Copying training dataset
2023-11-02 18:16:19,113:INFO:Plot type: pipeline
2023-11-02 18:16:19,219:INFO:Visual Rendered Successfully
2023-11-02 18:16:19,391:INFO:plot_model() successfully completed......................................
2023-11-02 18:16:23,206:INFO:Initializing plot_model()
2023-11-02 18:16:23,207:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 18:16:23,207:INFO:Checking exceptions
2023-11-02 18:16:23,209:INFO:Preloading libraries
2023-11-02 18:16:23,360:INFO:Copying training dataset
2023-11-02 18:16:23,360:INFO:Plot type: learning
2023-11-02 18:16:23,562:INFO:Fitting Model
2023-11-02 18:16:27,289:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,306:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,322:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,333:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,334:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,337:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,420:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-11-02 18:16:27,861:INFO:Visual Rendered Successfully
2023-11-02 18:16:28,001:INFO:plot_model() successfully completed......................................
2023-11-02 18:16:28,155:INFO:Initializing plot_model()
2023-11-02 18:16:28,156:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 18:16:28,156:INFO:Checking exceptions
2023-11-02 18:16:28,159:INFO:Preloading libraries
2023-11-02 18:16:28,359:INFO:Copying training dataset
2023-11-02 18:16:28,359:INFO:Plot type: vc
2023-11-02 18:16:28,360:INFO:Determining param_name
2023-11-02 18:16:38,570:INFO:Initializing plot_model()
2023-11-02 18:16:38,571:INFO:plot_model(plot=learning, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFDDBE950>, system=True)
2023-11-02 18:16:38,571:INFO:Checking exceptions
2023-11-02 18:16:38,573:INFO:Preloading libraries
2023-11-02 18:16:38,704:INFO:Copying training dataset
2023-11-02 18:16:38,705:INFO:Plot type: learning
2023-11-02 18:16:38,868:INFO:Fitting Model
2023-11-02 18:16:39,252:INFO:Visual Rendered Successfully
2023-11-02 18:16:39,375:INFO:plot_model() successfully completed......................................
2023-11-02 18:16:53,636:INFO:Initializing tune_model()
2023-11-02 18:16:53,636:INFO:tune_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000022B97309C90>, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [42, 41,
                                                                        40, 39,
                                                                        38, 37,
                                                                        36, 35,
                                                                        34, 33,
                                                                        32, 31,
                                                                        30, 29,
                                                                        28, 27,
                                                                        26, 25,
                                                                        24, 23,
                                                                        22, 21,
                                                                        20, 19,
                                                                        18, 17,
                                                                        16, 15,
                                                                        14, 13, ...]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False),
                    sp=42, window_length=42), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MASE, custom_scorer=None, search_algorithm=None, choose_better=True, fit_kwargs=None, return_tuner=False, verbose=True, tuner_verbose=True, kwargs={}, search_library=pycaret, _allowed_search_algorithms=[None, 'random', 'grid'])
2023-11-02 18:16:53,636:INFO:Checking exceptions
2023-11-02 18:16:53,655:INFO:Copying training dataset
2023-11-02 18:16:53,658:INFO:Checking base model
2023-11-02 18:16:53,659:INFO:Base model : Extra Trees w/ Cond. Deseasonalize & Detrending
2023-11-02 18:16:53,663:INFO:Declaring metric variables
2023-11-02 18:16:53,667:INFO:Defining Hyperparameters
2023-11-02 18:16:53,875:INFO:Tuning with n_jobs=-1
2023-11-02 18:16:53,882:INFO:Initializing ForecastingRandomizedGridSearchCV
2023-11-02 18:23:12,067:INFO:PyCaret TSForecastingExperiment
2023-11-02 18:23:12,067:INFO:Logging name: ts-default-name
2023-11-02 18:23:12,067:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-11-02 18:23:12,067:INFO:version 3.1.0
2023-11-02 18:23:12,067:INFO:Initializing setup()
2023-11-02 18:23:12,067:INFO:self.USI: 7546
2023-11-02 18:23:12,067:INFO:self._variable_keys: {'X_test', 'y_transformed', 'X_train_transformed', 'y_test_transformed', 'X_test_transformed', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'y_test', 'primary_sp_to_use', 'y_train_transformed', 'seed', 'log_plots_param', 'X_transformed', 'X_train', 'X', 'approach_type', 'exogenous_present', 'exp_id', 'y_train', 'gpu_param', 'candidate_sps', 'memory', '_available_plots', 'html_param', 'data', 'significant_sps', 'index_type', 'logging_param', 'all_sps_to_use', 'fold_generator', 'n_jobs_param', 'fold_param', 'enforce_exogenous', 'seasonality_present', 'significant_sps_no_harmonics', 'idx', 'model_engines', 'strictly_positive', 'enforce_pi', 'USI', 'fh', 'pipeline', 'exp_name_log'}
2023-11-02 18:23:12,067:INFO:Checking environment
2023-11-02 18:23:12,067:INFO:python_version: 3.10.2
2023-11-02 18:23:12,067:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:23:12,067:INFO:machine: AMD64
2023-11-02 18:23:12,067:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:23:12,071:INFO:Memory: svmem(total=16952647680, available=4998348800, percent=70.5, used=11954298880, free=4998348800)
2023-11-02 18:23:12,072:INFO:Physical Core: 4
2023-11-02 18:23:12,072:INFO:Logical Core: 8
2023-11-02 18:23:12,072:INFO:Checking libraries
2023-11-02 18:23:12,072:INFO:System:
2023-11-02 18:23:12,072:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:23:12,072:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:23:12,072:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:23:12,072:INFO:PyCaret required dependencies:
2023-11-02 18:23:12,072:INFO:                 pip: 23.0.1
2023-11-02 18:23:12,072:INFO:          setuptools: 65.5.0
2023-11-02 18:23:12,072:INFO:             pycaret: 3.1.0
2023-11-02 18:23:12,072:INFO:             IPython: 8.15.0
2023-11-02 18:23:12,072:INFO:          ipywidgets: 8.1.1
2023-11-02 18:23:12,072:INFO:                tqdm: 4.66.1
2023-11-02 18:23:12,072:INFO:               numpy: 1.23.5
2023-11-02 18:23:12,073:INFO:              pandas: 1.5.3
2023-11-02 18:23:12,073:INFO:              jinja2: 3.1.2
2023-11-02 18:23:12,073:INFO:               scipy: 1.10.1
2023-11-02 18:23:12,073:INFO:              joblib: 1.3.2
2023-11-02 18:23:12,073:INFO:             sklearn: 1.2.2
2023-11-02 18:23:12,073:INFO:                pyod: 1.1.0
2023-11-02 18:23:12,073:INFO:            imblearn: 0.11.0
2023-11-02 18:23:12,073:INFO:   category_encoders: 2.6.2
2023-11-02 18:23:12,073:INFO:            lightgbm: 4.1.0
2023-11-02 18:23:12,073:INFO:               numba: 0.58.0
2023-11-02 18:23:12,073:INFO:            requests: 2.31.0
2023-11-02 18:23:12,073:INFO:          matplotlib: 3.8.0
2023-11-02 18:23:12,073:INFO:          scikitplot: 0.3.7
2023-11-02 18:23:12,073:INFO:         yellowbrick: 1.5
2023-11-02 18:23:12,073:INFO:              plotly: 5.17.0
2023-11-02 18:23:12,073:INFO:    plotly-resampler: Not installed
2023-11-02 18:23:12,073:INFO:             kaleido: 0.2.1
2023-11-02 18:23:12,073:INFO:           schemdraw: 0.15
2023-11-02 18:23:12,073:INFO:         statsmodels: 0.14.0
2023-11-02 18:23:12,073:INFO:              sktime: 0.21.1
2023-11-02 18:23:12,073:INFO:               tbats: 1.1.3
2023-11-02 18:23:12,073:INFO:            pmdarima: 2.0.3
2023-11-02 18:23:12,073:INFO:              psutil: 5.9.5
2023-11-02 18:23:12,073:INFO:          markupsafe: 2.1.3
2023-11-02 18:23:12,073:INFO:             pickle5: Not installed
2023-11-02 18:23:12,073:INFO:         cloudpickle: 2.2.1
2023-11-02 18:23:12,073:INFO:         deprecation: 2.1.0
2023-11-02 18:23:12,073:INFO:              xxhash: 3.3.0
2023-11-02 18:23:12,073:INFO:           wurlitzer: Not installed
2023-11-02 18:23:12,073:INFO:PyCaret optional dependencies:
2023-11-02 18:23:12,073:INFO:                shap: Not installed
2023-11-02 18:23:12,073:INFO:           interpret: Not installed
2023-11-02 18:23:12,073:INFO:                umap: Not installed
2023-11-02 18:23:12,073:INFO:     ydata_profiling: Not installed
2023-11-02 18:23:12,073:INFO:  explainerdashboard: Not installed
2023-11-02 18:23:12,073:INFO:             autoviz: Not installed
2023-11-02 18:23:12,073:INFO:           fairlearn: Not installed
2023-11-02 18:23:12,073:INFO:          deepchecks: Not installed
2023-11-02 18:23:12,073:INFO:             xgboost: 2.0.0
2023-11-02 18:23:12,073:INFO:            catboost: Not installed
2023-11-02 18:23:12,074:INFO:              kmodes: Not installed
2023-11-02 18:23:12,074:INFO:             mlxtend: Not installed
2023-11-02 18:23:12,074:INFO:       statsforecast: Not installed
2023-11-02 18:23:12,074:INFO:        tune_sklearn: Not installed
2023-11-02 18:23:12,074:INFO:                 ray: Not installed
2023-11-02 18:23:12,074:INFO:            hyperopt: Not installed
2023-11-02 18:23:12,074:INFO:              optuna: Not installed
2023-11-02 18:23:12,074:INFO:               skopt: Not installed
2023-11-02 18:23:12,074:INFO:              mlflow: Not installed
2023-11-02 18:23:12,074:INFO:              gradio: Not installed
2023-11-02 18:23:12,074:INFO:             fastapi: Not installed
2023-11-02 18:23:12,074:INFO:             uvicorn: Not installed
2023-11-02 18:23:12,074:INFO:              m2cgen: Not installed
2023-11-02 18:23:12,074:INFO:           evidently: Not installed
2023-11-02 18:23:12,074:INFO:               fugue: Not installed
2023-11-02 18:23:12,074:INFO:           streamlit: Not installed
2023-11-02 18:23:12,074:INFO:             prophet: Not installed
2023-11-02 18:23:12,074:INFO:None
2023-11-02 18:23:12,079:INFO:Set Forecast Horizon.
2023-11-02 18:23:12,080:INFO:Set up Train-Test Splits.
2023-11-02 18:25:55,566:INFO:PyCaret TSForecastingExperiment
2023-11-02 18:25:55,566:INFO:Logging name: ts-default-name
2023-11-02 18:25:55,566:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-11-02 18:25:55,566:INFO:version 3.1.0
2023-11-02 18:25:55,566:INFO:Initializing setup()
2023-11-02 18:25:55,566:INFO:self.USI: 8395
2023-11-02 18:25:55,566:INFO:self._variable_keys: {'X_test', 'y_transformed', 'X_train_transformed', 'y_test_transformed', 'X_test_transformed', 'gpu_n_jobs_param', '_ml_usecase', 'y', 'y_test', 'primary_sp_to_use', 'y_train_transformed', 'seed', 'log_plots_param', 'X_transformed', 'X_train', 'X', 'approach_type', 'exogenous_present', 'exp_id', 'y_train', 'gpu_param', 'candidate_sps', 'memory', '_available_plots', 'html_param', 'data', 'significant_sps', 'index_type', 'logging_param', 'all_sps_to_use', 'fold_generator', 'n_jobs_param', 'fold_param', 'enforce_exogenous', 'seasonality_present', 'significant_sps_no_harmonics', 'idx', 'model_engines', 'strictly_positive', 'enforce_pi', 'USI', 'fh', 'pipeline', 'exp_name_log'}
2023-11-02 18:25:55,566:INFO:Checking environment
2023-11-02 18:25:55,566:INFO:python_version: 3.10.2
2023-11-02 18:25:55,566:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:25:55,566:INFO:machine: AMD64
2023-11-02 18:25:55,566:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:25:55,570:INFO:Memory: svmem(total=16952647680, available=5047558144, percent=70.2, used=11905089536, free=5047558144)
2023-11-02 18:25:55,571:INFO:Physical Core: 4
2023-11-02 18:25:55,571:INFO:Logical Core: 8
2023-11-02 18:25:55,571:INFO:Checking libraries
2023-11-02 18:25:55,571:INFO:System:
2023-11-02 18:25:55,571:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:25:55,571:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:25:55,571:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:25:55,571:INFO:PyCaret required dependencies:
2023-11-02 18:25:55,571:INFO:                 pip: 23.0.1
2023-11-02 18:25:55,571:INFO:          setuptools: 65.5.0
2023-11-02 18:25:55,571:INFO:             pycaret: 3.1.0
2023-11-02 18:25:55,571:INFO:             IPython: 8.15.0
2023-11-02 18:25:55,571:INFO:          ipywidgets: 8.1.1
2023-11-02 18:25:55,571:INFO:                tqdm: 4.66.1
2023-11-02 18:25:55,571:INFO:               numpy: 1.23.5
2023-11-02 18:25:55,571:INFO:              pandas: 1.5.3
2023-11-02 18:25:55,571:INFO:              jinja2: 3.1.2
2023-11-02 18:25:55,571:INFO:               scipy: 1.10.1
2023-11-02 18:25:55,571:INFO:              joblib: 1.3.2
2023-11-02 18:25:55,571:INFO:             sklearn: 1.2.2
2023-11-02 18:25:55,571:INFO:                pyod: 1.1.0
2023-11-02 18:25:55,571:INFO:            imblearn: 0.11.0
2023-11-02 18:25:55,571:INFO:   category_encoders: 2.6.2
2023-11-02 18:25:55,571:INFO:            lightgbm: 4.1.0
2023-11-02 18:25:55,571:INFO:               numba: 0.58.0
2023-11-02 18:25:55,571:INFO:            requests: 2.31.0
2023-11-02 18:25:55,571:INFO:          matplotlib: 3.8.0
2023-11-02 18:25:55,571:INFO:          scikitplot: 0.3.7
2023-11-02 18:25:55,571:INFO:         yellowbrick: 1.5
2023-11-02 18:25:55,571:INFO:              plotly: 5.17.0
2023-11-02 18:25:55,571:INFO:    plotly-resampler: Not installed
2023-11-02 18:25:55,572:INFO:             kaleido: 0.2.1
2023-11-02 18:25:55,572:INFO:           schemdraw: 0.15
2023-11-02 18:25:55,572:INFO:         statsmodels: 0.14.0
2023-11-02 18:25:55,572:INFO:              sktime: 0.21.1
2023-11-02 18:25:55,572:INFO:               tbats: 1.1.3
2023-11-02 18:25:55,572:INFO:            pmdarima: 2.0.3
2023-11-02 18:25:55,572:INFO:              psutil: 5.9.5
2023-11-02 18:25:55,572:INFO:          markupsafe: 2.1.3
2023-11-02 18:25:55,572:INFO:             pickle5: Not installed
2023-11-02 18:25:55,572:INFO:         cloudpickle: 2.2.1
2023-11-02 18:25:55,572:INFO:         deprecation: 2.1.0
2023-11-02 18:25:55,572:INFO:              xxhash: 3.3.0
2023-11-02 18:25:55,572:INFO:           wurlitzer: Not installed
2023-11-02 18:25:55,572:INFO:PyCaret optional dependencies:
2023-11-02 18:25:55,572:INFO:                shap: Not installed
2023-11-02 18:25:55,572:INFO:           interpret: Not installed
2023-11-02 18:25:55,572:INFO:                umap: Not installed
2023-11-02 18:25:55,572:INFO:     ydata_profiling: Not installed
2023-11-02 18:25:55,572:INFO:  explainerdashboard: Not installed
2023-11-02 18:25:55,572:INFO:             autoviz: Not installed
2023-11-02 18:25:55,572:INFO:           fairlearn: Not installed
2023-11-02 18:25:55,572:INFO:          deepchecks: Not installed
2023-11-02 18:25:55,572:INFO:             xgboost: 2.0.0
2023-11-02 18:25:55,572:INFO:            catboost: Not installed
2023-11-02 18:25:55,572:INFO:              kmodes: Not installed
2023-11-02 18:25:55,572:INFO:             mlxtend: Not installed
2023-11-02 18:25:55,572:INFO:       statsforecast: Not installed
2023-11-02 18:25:55,572:INFO:        tune_sklearn: Not installed
2023-11-02 18:25:55,572:INFO:                 ray: Not installed
2023-11-02 18:25:55,572:INFO:            hyperopt: Not installed
2023-11-02 18:25:55,572:INFO:              optuna: Not installed
2023-11-02 18:25:55,572:INFO:               skopt: Not installed
2023-11-02 18:25:55,572:INFO:              mlflow: Not installed
2023-11-02 18:25:55,572:INFO:              gradio: Not installed
2023-11-02 18:25:55,572:INFO:             fastapi: Not installed
2023-11-02 18:25:55,572:INFO:             uvicorn: Not installed
2023-11-02 18:25:55,572:INFO:              m2cgen: Not installed
2023-11-02 18:25:55,572:INFO:           evidently: Not installed
2023-11-02 18:25:55,572:INFO:               fugue: Not installed
2023-11-02 18:25:55,572:INFO:           streamlit: Not installed
2023-11-02 18:25:55,572:INFO:             prophet: Not installed
2023-11-02 18:25:55,573:INFO:None
2023-11-02 18:25:55,577:INFO:Set Forecast Horizon.
2023-11-02 18:25:55,579:INFO:Set up Train-Test Splits.
2023-11-02 18:26:12,532:INFO:PyCaret RegressionExperiment
2023-11-02 18:26:12,532:INFO:Logging name: reg-default-name
2023-11-02 18:26:12,532:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 18:26:12,532:INFO:version 3.1.0
2023-11-02 18:26:12,532:INFO:Initializing setup()
2023-11-02 18:26:12,532:INFO:self.USI: e703
2023-11-02 18:26:12,532:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 18:26:12,532:INFO:Checking environment
2023-11-02 18:26:12,532:INFO:python_version: 3.10.2
2023-11-02 18:26:12,532:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:26:12,532:INFO:machine: AMD64
2023-11-02 18:26:12,532:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:26:12,536:INFO:Memory: svmem(total=16952647680, available=4915482624, percent=71.0, used=12037165056, free=4915482624)
2023-11-02 18:26:12,536:INFO:Physical Core: 4
2023-11-02 18:26:12,536:INFO:Logical Core: 8
2023-11-02 18:26:12,536:INFO:Checking libraries
2023-11-02 18:26:12,537:INFO:System:
2023-11-02 18:26:12,537:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:26:12,537:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:26:12,537:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:26:12,537:INFO:PyCaret required dependencies:
2023-11-02 18:26:12,537:INFO:                 pip: 23.0.1
2023-11-02 18:26:12,537:INFO:          setuptools: 65.5.0
2023-11-02 18:26:12,537:INFO:             pycaret: 3.1.0
2023-11-02 18:26:12,537:INFO:             IPython: 8.15.0
2023-11-02 18:26:12,537:INFO:          ipywidgets: 8.1.1
2023-11-02 18:26:12,537:INFO:                tqdm: 4.66.1
2023-11-02 18:26:12,537:INFO:               numpy: 1.23.5
2023-11-02 18:26:12,537:INFO:              pandas: 1.5.3
2023-11-02 18:26:12,537:INFO:              jinja2: 3.1.2
2023-11-02 18:26:12,537:INFO:               scipy: 1.10.1
2023-11-02 18:26:12,537:INFO:              joblib: 1.3.2
2023-11-02 18:26:12,537:INFO:             sklearn: 1.2.2
2023-11-02 18:26:12,537:INFO:                pyod: 1.1.0
2023-11-02 18:26:12,537:INFO:            imblearn: 0.11.0
2023-11-02 18:26:12,537:INFO:   category_encoders: 2.6.2
2023-11-02 18:26:12,537:INFO:            lightgbm: 4.1.0
2023-11-02 18:26:12,537:INFO:               numba: 0.58.0
2023-11-02 18:26:12,537:INFO:            requests: 2.31.0
2023-11-02 18:26:12,537:INFO:          matplotlib: 3.8.0
2023-11-02 18:26:12,537:INFO:          scikitplot: 0.3.7
2023-11-02 18:26:12,537:INFO:         yellowbrick: 1.5
2023-11-02 18:26:12,537:INFO:              plotly: 5.17.0
2023-11-02 18:26:12,537:INFO:    plotly-resampler: Not installed
2023-11-02 18:26:12,537:INFO:             kaleido: 0.2.1
2023-11-02 18:26:12,537:INFO:           schemdraw: 0.15
2023-11-02 18:26:12,537:INFO:         statsmodels: 0.14.0
2023-11-02 18:26:12,537:INFO:              sktime: 0.21.1
2023-11-02 18:26:12,537:INFO:               tbats: 1.1.3
2023-11-02 18:26:12,538:INFO:            pmdarima: 2.0.3
2023-11-02 18:26:12,538:INFO:              psutil: 5.9.5
2023-11-02 18:26:12,538:INFO:          markupsafe: 2.1.3
2023-11-02 18:26:12,538:INFO:             pickle5: Not installed
2023-11-02 18:26:12,538:INFO:         cloudpickle: 2.2.1
2023-11-02 18:26:12,538:INFO:         deprecation: 2.1.0
2023-11-02 18:26:12,538:INFO:              xxhash: 3.3.0
2023-11-02 18:26:12,538:INFO:           wurlitzer: Not installed
2023-11-02 18:26:12,538:INFO:PyCaret optional dependencies:
2023-11-02 18:26:12,538:INFO:                shap: Not installed
2023-11-02 18:26:12,538:INFO:           interpret: Not installed
2023-11-02 18:26:12,538:INFO:                umap: Not installed
2023-11-02 18:26:12,538:INFO:     ydata_profiling: Not installed
2023-11-02 18:26:12,538:INFO:  explainerdashboard: Not installed
2023-11-02 18:26:12,538:INFO:             autoviz: Not installed
2023-11-02 18:26:12,538:INFO:           fairlearn: Not installed
2023-11-02 18:26:12,538:INFO:          deepchecks: Not installed
2023-11-02 18:26:12,538:INFO:             xgboost: 2.0.0
2023-11-02 18:26:12,538:INFO:            catboost: Not installed
2023-11-02 18:26:12,538:INFO:              kmodes: Not installed
2023-11-02 18:26:12,538:INFO:             mlxtend: Not installed
2023-11-02 18:26:12,538:INFO:       statsforecast: Not installed
2023-11-02 18:26:12,538:INFO:        tune_sklearn: Not installed
2023-11-02 18:26:12,538:INFO:                 ray: Not installed
2023-11-02 18:26:12,539:INFO:            hyperopt: Not installed
2023-11-02 18:26:12,539:INFO:              optuna: Not installed
2023-11-02 18:26:12,539:INFO:               skopt: Not installed
2023-11-02 18:26:12,539:INFO:              mlflow: Not installed
2023-11-02 18:26:12,539:INFO:              gradio: Not installed
2023-11-02 18:26:12,539:INFO:             fastapi: Not installed
2023-11-02 18:26:12,539:INFO:             uvicorn: Not installed
2023-11-02 18:26:12,539:INFO:              m2cgen: Not installed
2023-11-02 18:26:12,539:INFO:           evidently: Not installed
2023-11-02 18:26:12,539:INFO:               fugue: Not installed
2023-11-02 18:26:12,539:INFO:           streamlit: Not installed
2023-11-02 18:26:12,539:INFO:             prophet: Not installed
2023-11-02 18:26:12,539:INFO:None
2023-11-02 18:26:12,539:INFO:Set up data.
2023-11-02 18:26:12,547:INFO:Set up folding strategy.
2023-11-02 18:26:12,547:INFO:Set up train/test split.
2023-11-02 18:26:12,551:INFO:Set up index.
2023-11-02 18:26:12,551:INFO:Assigning column types.
2023-11-02 18:26:12,555:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 18:26:12,555:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,559:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,564:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,648:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:12,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:12,650:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,654:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,658:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,747:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:12,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:12,750:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 18:26:12,755:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,758:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,843:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:12,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:12,851:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:12,943:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:12,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:12,945:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 18:26:12,953:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,037:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,037:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,048:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,096:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,129:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,131:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 18:26:13,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,215:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,215:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,302:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 18:26:13,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,397:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,456:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:26:13,492:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,495:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 18:26:13,618:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,815:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:13,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:13,818:INFO:Preparing preprocessing pipeline...
2023-11-02 18:26:13,819:INFO:Set up simple imputation.
2023-11-02 18:26:13,824:INFO:Set up encoding of categorical features.
2023-11-02 18:26:13,919:INFO:Finished creating preprocessing pipeline.
2023-11-02 18:26:13,925:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['hectares_ha', 'production_tonnes',
                                             'year'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 18:26:13,925:INFO:Creating final display dataframe.
2023-11-02 18:26:14,148:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   yield_tonnes_ha
2                   Target type        Regression
3           Original data shape        (15479, 6)
4        Transformed data shape       (15479, 26)
5   Transformed train set shape       (10835, 26)
6    Transformed test set shape        (4644, 26)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e703
2023-11-02 18:26:14,268:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:14,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:14,362:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:26:14,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:26:14,364:INFO:setup() successfully completed in 1.83s...............
2023-11-02 18:26:23,261:INFO:Initializing compare_models()
2023-11-02 18:26:23,261:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 18:26:23,261:INFO:Checking exceptions
2023-11-02 18:26:23,265:INFO:Preparing display monitor
2023-11-02 18:26:23,288:INFO:Initializing Linear Regression
2023-11-02 18:26:23,288:INFO:Total runtime is 0.0 minutes
2023-11-02 18:26:23,290:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:23,291:INFO:Initializing create_model()
2023-11-02 18:26:23,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:23,291:INFO:Checking exceptions
2023-11-02 18:26:23,291:INFO:Importing libraries
2023-11-02 18:26:23,291:INFO:Copying training dataset
2023-11-02 18:26:23,295:INFO:Defining folds
2023-11-02 18:26:23,296:INFO:Declaring metric variables
2023-11-02 18:26:23,298:INFO:Importing untrained model
2023-11-02 18:26:23,300:INFO:Linear Regression Imported successfully
2023-11-02 18:26:23,305:INFO:Starting cross validation
2023-11-02 18:26:23,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:28,052:INFO:Calculating mean and std
2023-11-02 18:26:28,056:INFO:Creating metrics dataframe
2023-11-02 18:26:28,061:INFO:Uploading results into container
2023-11-02 18:26:28,062:INFO:Uploading model into container now
2023-11-02 18:26:28,062:INFO:_master_model_container: 1
2023-11-02 18:26:28,062:INFO:_display_container: 2
2023-11-02 18:26:28,063:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 18:26:28,063:INFO:create_model() successfully completed......................................
2023-11-02 18:26:28,256:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:28,257:INFO:Creating metrics dataframe
2023-11-02 18:26:28,265:INFO:Initializing Lasso Regression
2023-11-02 18:26:28,266:INFO:Total runtime is 0.08297201792399088 minutes
2023-11-02 18:26:28,272:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:28,272:INFO:Initializing create_model()
2023-11-02 18:26:28,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:28,273:INFO:Checking exceptions
2023-11-02 18:26:28,273:INFO:Importing libraries
2023-11-02 18:26:28,273:INFO:Copying training dataset
2023-11-02 18:26:28,277:INFO:Defining folds
2023-11-02 18:26:28,278:INFO:Declaring metric variables
2023-11-02 18:26:28,281:INFO:Importing untrained model
2023-11-02 18:26:28,286:INFO:Lasso Regression Imported successfully
2023-11-02 18:26:28,314:INFO:Starting cross validation
2023-11-02 18:26:28,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:28,742:INFO:Calculating mean and std
2023-11-02 18:26:28,743:INFO:Creating metrics dataframe
2023-11-02 18:26:28,746:INFO:Uploading results into container
2023-11-02 18:26:28,746:INFO:Uploading model into container now
2023-11-02 18:26:28,747:INFO:_master_model_container: 2
2023-11-02 18:26:28,747:INFO:_display_container: 2
2023-11-02 18:26:28,747:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 18:26:28,747:INFO:create_model() successfully completed......................................
2023-11-02 18:26:28,911:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:28,911:INFO:Creating metrics dataframe
2023-11-02 18:26:28,917:INFO:Initializing Ridge Regression
2023-11-02 18:26:28,917:INFO:Total runtime is 0.09381640354792277 minutes
2023-11-02 18:26:28,923:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:28,923:INFO:Initializing create_model()
2023-11-02 18:26:28,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:28,923:INFO:Checking exceptions
2023-11-02 18:26:28,923:INFO:Importing libraries
2023-11-02 18:26:28,923:INFO:Copying training dataset
2023-11-02 18:26:28,927:INFO:Defining folds
2023-11-02 18:26:28,927:INFO:Declaring metric variables
2023-11-02 18:26:28,930:INFO:Importing untrained model
2023-11-02 18:26:28,933:INFO:Ridge Regression Imported successfully
2023-11-02 18:26:28,939:INFO:Starting cross validation
2023-11-02 18:26:28,941:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:29,094:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.56014e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,104:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.24886e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,108:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.43202e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,120:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.4009e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,122:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.31257e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,148:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.27716e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,153:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.75775e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,239:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.41253e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,243:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=3.23155e-18): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-11-02 18:26:29,279:INFO:Calculating mean and std
2023-11-02 18:26:29,280:INFO:Creating metrics dataframe
2023-11-02 18:26:29,283:INFO:Uploading results into container
2023-11-02 18:26:29,283:INFO:Uploading model into container now
2023-11-02 18:26:29,285:INFO:_master_model_container: 3
2023-11-02 18:26:29,285:INFO:_display_container: 2
2023-11-02 18:26:29,286:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 18:26:29,286:INFO:create_model() successfully completed......................................
2023-11-02 18:26:29,465:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:29,465:INFO:Creating metrics dataframe
2023-11-02 18:26:29,474:INFO:Initializing Elastic Net
2023-11-02 18:26:29,474:INFO:Total runtime is 0.10310169458389282 minutes
2023-11-02 18:26:29,477:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:29,478:INFO:Initializing create_model()
2023-11-02 18:26:29,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:29,478:INFO:Checking exceptions
2023-11-02 18:26:29,478:INFO:Importing libraries
2023-11-02 18:26:29,478:INFO:Copying training dataset
2023-11-02 18:26:29,482:INFO:Defining folds
2023-11-02 18:26:29,482:INFO:Declaring metric variables
2023-11-02 18:26:29,487:INFO:Importing untrained model
2023-11-02 18:26:29,491:INFO:Elastic Net Imported successfully
2023-11-02 18:26:29,496:INFO:Starting cross validation
2023-11-02 18:26:29,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:29,854:INFO:Calculating mean and std
2023-11-02 18:26:29,855:INFO:Creating metrics dataframe
2023-11-02 18:26:29,857:INFO:Uploading results into container
2023-11-02 18:26:29,859:INFO:Uploading model into container now
2023-11-02 18:26:29,859:INFO:_master_model_container: 4
2023-11-02 18:26:29,859:INFO:_display_container: 2
2023-11-02 18:26:29,859:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 18:26:29,859:INFO:create_model() successfully completed......................................
2023-11-02 18:26:30,021:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:30,022:INFO:Creating metrics dataframe
2023-11-02 18:26:30,030:INFO:Initializing Least Angle Regression
2023-11-02 18:26:30,030:INFO:Total runtime is 0.11237297058105468 minutes
2023-11-02 18:26:30,032:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:30,033:INFO:Initializing create_model()
2023-11-02 18:26:30,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:30,033:INFO:Checking exceptions
2023-11-02 18:26:30,033:INFO:Importing libraries
2023-11-02 18:26:30,033:INFO:Copying training dataset
2023-11-02 18:26:30,040:INFO:Defining folds
2023-11-02 18:26:30,040:INFO:Declaring metric variables
2023-11-02 18:26:30,043:INFO:Importing untrained model
2023-11-02 18:26:30,046:INFO:Least Angle Regression Imported successfully
2023-11-02 18:26:30,050:INFO:Starting cross validation
2023-11-02 18:26:30,051:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:30,441:INFO:Calculating mean and std
2023-11-02 18:26:30,442:INFO:Creating metrics dataframe
2023-11-02 18:26:30,446:INFO:Uploading results into container
2023-11-02 18:26:30,447:INFO:Uploading model into container now
2023-11-02 18:26:30,447:INFO:_master_model_container: 5
2023-11-02 18:26:30,447:INFO:_display_container: 2
2023-11-02 18:26:30,448:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 18:26:30,448:INFO:create_model() successfully completed......................................
2023-11-02 18:26:30,644:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:30,644:INFO:Creating metrics dataframe
2023-11-02 18:26:30,652:INFO:Initializing Lasso Least Angle Regression
2023-11-02 18:26:30,652:INFO:Total runtime is 0.12273979187011717 minutes
2023-11-02 18:26:30,656:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:30,657:INFO:Initializing create_model()
2023-11-02 18:26:30,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:30,657:INFO:Checking exceptions
2023-11-02 18:26:30,657:INFO:Importing libraries
2023-11-02 18:26:30,657:INFO:Copying training dataset
2023-11-02 18:26:30,662:INFO:Defining folds
2023-11-02 18:26:30,662:INFO:Declaring metric variables
2023-11-02 18:26:30,666:INFO:Importing untrained model
2023-11-02 18:26:30,671:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 18:26:30,677:INFO:Starting cross validation
2023-11-02 18:26:30,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:31,012:INFO:Calculating mean and std
2023-11-02 18:26:31,013:INFO:Creating metrics dataframe
2023-11-02 18:26:31,016:INFO:Uploading results into container
2023-11-02 18:26:31,016:INFO:Uploading model into container now
2023-11-02 18:26:31,016:INFO:_master_model_container: 6
2023-11-02 18:26:31,016:INFO:_display_container: 2
2023-11-02 18:26:31,017:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 18:26:31,017:INFO:create_model() successfully completed......................................
2023-11-02 18:26:31,190:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:31,190:INFO:Creating metrics dataframe
2023-11-02 18:26:31,198:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 18:26:31,198:INFO:Total runtime is 0.13183461825052895 minutes
2023-11-02 18:26:31,201:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:31,201:INFO:Initializing create_model()
2023-11-02 18:26:31,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:31,201:INFO:Checking exceptions
2023-11-02 18:26:31,201:INFO:Importing libraries
2023-11-02 18:26:31,201:INFO:Copying training dataset
2023-11-02 18:26:31,208:INFO:Defining folds
2023-11-02 18:26:31,208:INFO:Declaring metric variables
2023-11-02 18:26:31,211:INFO:Importing untrained model
2023-11-02 18:26:31,214:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 18:26:31,222:INFO:Starting cross validation
2023-11-02 18:26:31,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:31,569:INFO:Calculating mean and std
2023-11-02 18:26:31,572:INFO:Creating metrics dataframe
2023-11-02 18:26:31,576:INFO:Uploading results into container
2023-11-02 18:26:31,577:INFO:Uploading model into container now
2023-11-02 18:26:31,577:INFO:_master_model_container: 7
2023-11-02 18:26:31,577:INFO:_display_container: 2
2023-11-02 18:26:31,578:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 18:26:31,578:INFO:create_model() successfully completed......................................
2023-11-02 18:26:31,746:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:31,746:INFO:Creating metrics dataframe
2023-11-02 18:26:31,754:INFO:Initializing Bayesian Ridge
2023-11-02 18:26:31,755:INFO:Total runtime is 0.14112286965052284 minutes
2023-11-02 18:26:31,758:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:31,758:INFO:Initializing create_model()
2023-11-02 18:26:31,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:31,758:INFO:Checking exceptions
2023-11-02 18:26:31,759:INFO:Importing libraries
2023-11-02 18:26:31,759:INFO:Copying training dataset
2023-11-02 18:26:31,764:INFO:Defining folds
2023-11-02 18:26:31,764:INFO:Declaring metric variables
2023-11-02 18:26:31,768:INFO:Importing untrained model
2023-11-02 18:26:31,772:INFO:Bayesian Ridge Imported successfully
2023-11-02 18:26:31,780:INFO:Starting cross validation
2023-11-02 18:26:31,781:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:32,131:INFO:Calculating mean and std
2023-11-02 18:26:32,132:INFO:Creating metrics dataframe
2023-11-02 18:26:32,134:INFO:Uploading results into container
2023-11-02 18:26:32,134:INFO:Uploading model into container now
2023-11-02 18:26:32,134:INFO:_master_model_container: 8
2023-11-02 18:26:32,135:INFO:_display_container: 2
2023-11-02 18:26:32,135:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 18:26:32,135:INFO:create_model() successfully completed......................................
2023-11-02 18:26:32,315:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:32,315:INFO:Creating metrics dataframe
2023-11-02 18:26:32,324:INFO:Initializing Passive Aggressive Regressor
2023-11-02 18:26:32,324:INFO:Total runtime is 0.15061014493306477 minutes
2023-11-02 18:26:32,327:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:32,328:INFO:Initializing create_model()
2023-11-02 18:26:32,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:32,328:INFO:Checking exceptions
2023-11-02 18:26:32,328:INFO:Importing libraries
2023-11-02 18:26:32,328:INFO:Copying training dataset
2023-11-02 18:26:32,335:INFO:Defining folds
2023-11-02 18:26:32,336:INFO:Declaring metric variables
2023-11-02 18:26:32,340:INFO:Importing untrained model
2023-11-02 18:26:32,344:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 18:26:32,350:INFO:Starting cross validation
2023-11-02 18:26:32,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:32,756:INFO:Calculating mean and std
2023-11-02 18:26:32,758:INFO:Creating metrics dataframe
2023-11-02 18:26:32,762:INFO:Uploading results into container
2023-11-02 18:26:32,763:INFO:Uploading model into container now
2023-11-02 18:26:32,763:INFO:_master_model_container: 9
2023-11-02 18:26:32,763:INFO:_display_container: 2
2023-11-02 18:26:32,764:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 18:26:32,764:INFO:create_model() successfully completed......................................
2023-11-02 18:26:33,030:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:33,030:INFO:Creating metrics dataframe
2023-11-02 18:26:33,041:INFO:Initializing Huber Regressor
2023-11-02 18:26:33,041:INFO:Total runtime is 0.162547500928243 minutes
2023-11-02 18:26:33,045:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:33,045:INFO:Initializing create_model()
2023-11-02 18:26:33,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:33,045:INFO:Checking exceptions
2023-11-02 18:26:33,045:INFO:Importing libraries
2023-11-02 18:26:33,046:INFO:Copying training dataset
2023-11-02 18:26:33,051:INFO:Defining folds
2023-11-02 18:26:33,052:INFO:Declaring metric variables
2023-11-02 18:26:33,058:INFO:Importing untrained model
2023-11-02 18:26:33,062:INFO:Huber Regressor Imported successfully
2023-11-02 18:26:33,067:INFO:Starting cross validation
2023-11-02 18:26:33,068:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:33,874:INFO:Calculating mean and std
2023-11-02 18:26:33,875:INFO:Creating metrics dataframe
2023-11-02 18:26:33,877:INFO:Uploading results into container
2023-11-02 18:26:33,878:INFO:Uploading model into container now
2023-11-02 18:26:33,878:INFO:_master_model_container: 10
2023-11-02 18:26:33,878:INFO:_display_container: 2
2023-11-02 18:26:33,879:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 18:26:33,879:INFO:create_model() successfully completed......................................
2023-11-02 18:26:34,070:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:34,070:INFO:Creating metrics dataframe
2023-11-02 18:26:34,083:INFO:Initializing K Neighbors Regressor
2023-11-02 18:26:34,084:INFO:Total runtime is 0.17994080781936644 minutes
2023-11-02 18:26:34,089:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:34,091:INFO:Initializing create_model()
2023-11-02 18:26:34,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:34,091:INFO:Checking exceptions
2023-11-02 18:26:34,091:INFO:Importing libraries
2023-11-02 18:26:34,091:INFO:Copying training dataset
2023-11-02 18:26:34,098:INFO:Defining folds
2023-11-02 18:26:34,098:INFO:Declaring metric variables
2023-11-02 18:26:34,101:INFO:Importing untrained model
2023-11-02 18:26:34,107:INFO:K Neighbors Regressor Imported successfully
2023-11-02 18:26:34,117:INFO:Starting cross validation
2023-11-02 18:26:34,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:34,704:INFO:Calculating mean and std
2023-11-02 18:26:34,705:INFO:Creating metrics dataframe
2023-11-02 18:26:34,709:INFO:Uploading results into container
2023-11-02 18:26:34,710:INFO:Uploading model into container now
2023-11-02 18:26:34,710:INFO:_master_model_container: 11
2023-11-02 18:26:34,710:INFO:_display_container: 2
2023-11-02 18:26:34,710:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 18:26:34,710:INFO:create_model() successfully completed......................................
2023-11-02 18:26:34,894:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:34,894:INFO:Creating metrics dataframe
2023-11-02 18:26:34,901:INFO:Initializing Decision Tree Regressor
2023-11-02 18:26:34,901:INFO:Total runtime is 0.19355865716934204 minutes
2023-11-02 18:26:34,903:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:34,904:INFO:Initializing create_model()
2023-11-02 18:26:34,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:34,904:INFO:Checking exceptions
2023-11-02 18:26:34,904:INFO:Importing libraries
2023-11-02 18:26:34,904:INFO:Copying training dataset
2023-11-02 18:26:34,911:INFO:Defining folds
2023-11-02 18:26:34,911:INFO:Declaring metric variables
2023-11-02 18:26:34,915:INFO:Importing untrained model
2023-11-02 18:26:34,918:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:26:34,923:INFO:Starting cross validation
2023-11-02 18:26:34,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:35,334:INFO:Calculating mean and std
2023-11-02 18:26:35,335:INFO:Creating metrics dataframe
2023-11-02 18:26:35,337:INFO:Uploading results into container
2023-11-02 18:26:35,337:INFO:Uploading model into container now
2023-11-02 18:26:35,338:INFO:_master_model_container: 12
2023-11-02 18:26:35,338:INFO:_display_container: 2
2023-11-02 18:26:35,338:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:26:35,338:INFO:create_model() successfully completed......................................
2023-11-02 18:26:35,501:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:35,501:INFO:Creating metrics dataframe
2023-11-02 18:26:35,512:INFO:Initializing Random Forest Regressor
2023-11-02 18:26:35,513:INFO:Total runtime is 0.20375334819157917 minutes
2023-11-02 18:26:35,516:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:35,516:INFO:Initializing create_model()
2023-11-02 18:26:35,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:35,516:INFO:Checking exceptions
2023-11-02 18:26:35,516:INFO:Importing libraries
2023-11-02 18:26:35,516:INFO:Copying training dataset
2023-11-02 18:26:35,521:INFO:Defining folds
2023-11-02 18:26:35,521:INFO:Declaring metric variables
2023-11-02 18:26:35,527:INFO:Importing untrained model
2023-11-02 18:26:35,529:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:26:35,534:INFO:Starting cross validation
2023-11-02 18:26:35,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:44,085:INFO:Calculating mean and std
2023-11-02 18:26:44,086:INFO:Creating metrics dataframe
2023-11-02 18:26:44,089:INFO:Uploading results into container
2023-11-02 18:26:44,089:INFO:Uploading model into container now
2023-11-02 18:26:44,090:INFO:_master_model_container: 13
2023-11-02 18:26:44,090:INFO:_display_container: 2
2023-11-02 18:26:44,090:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:26:44,090:INFO:create_model() successfully completed......................................
2023-11-02 18:26:44,288:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:44,288:INFO:Creating metrics dataframe
2023-11-02 18:26:44,297:INFO:Initializing Extra Trees Regressor
2023-11-02 18:26:44,297:INFO:Total runtime is 0.35015158255894974 minutes
2023-11-02 18:26:44,302:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:44,303:INFO:Initializing create_model()
2023-11-02 18:26:44,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:44,303:INFO:Checking exceptions
2023-11-02 18:26:44,303:INFO:Importing libraries
2023-11-02 18:26:44,303:INFO:Copying training dataset
2023-11-02 18:26:44,307:INFO:Defining folds
2023-11-02 18:26:44,308:INFO:Declaring metric variables
2023-11-02 18:26:44,311:INFO:Importing untrained model
2023-11-02 18:26:44,314:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:26:44,321:INFO:Starting cross validation
2023-11-02 18:26:44,322:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:49,810:INFO:Calculating mean and std
2023-11-02 18:26:49,813:INFO:Creating metrics dataframe
2023-11-02 18:26:49,821:INFO:Uploading results into container
2023-11-02 18:26:49,821:INFO:Uploading model into container now
2023-11-02 18:26:49,822:INFO:_master_model_container: 14
2023-11-02 18:26:49,822:INFO:_display_container: 2
2023-11-02 18:26:49,823:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:26:49,823:INFO:create_model() successfully completed......................................
2023-11-02 18:26:50,073:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:50,073:INFO:Creating metrics dataframe
2023-11-02 18:26:50,090:INFO:Initializing AdaBoost Regressor
2023-11-02 18:26:50,091:INFO:Total runtime is 0.44671219587326044 minutes
2023-11-02 18:26:50,094:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:50,094:INFO:Initializing create_model()
2023-11-02 18:26:50,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:50,095:INFO:Checking exceptions
2023-11-02 18:26:50,095:INFO:Importing libraries
2023-11-02 18:26:50,095:INFO:Copying training dataset
2023-11-02 18:26:50,099:INFO:Defining folds
2023-11-02 18:26:50,099:INFO:Declaring metric variables
2023-11-02 18:26:50,105:INFO:Importing untrained model
2023-11-02 18:26:50,109:INFO:AdaBoost Regressor Imported successfully
2023-11-02 18:26:50,116:INFO:Starting cross validation
2023-11-02 18:26:50,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:52,391:INFO:Calculating mean and std
2023-11-02 18:26:52,393:INFO:Creating metrics dataframe
2023-11-02 18:26:52,400:INFO:Uploading results into container
2023-11-02 18:26:52,402:INFO:Uploading model into container now
2023-11-02 18:26:52,403:INFO:_master_model_container: 15
2023-11-02 18:26:52,403:INFO:_display_container: 2
2023-11-02 18:26:52,403:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 18:26:52,403:INFO:create_model() successfully completed......................................
2023-11-02 18:26:52,624:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:52,626:INFO:Creating metrics dataframe
2023-11-02 18:26:52,634:INFO:Initializing Gradient Boosting Regressor
2023-11-02 18:26:52,635:INFO:Total runtime is 0.48911542495091753 minutes
2023-11-02 18:26:52,637:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:52,639:INFO:Initializing create_model()
2023-11-02 18:26:52,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:52,640:INFO:Checking exceptions
2023-11-02 18:26:52,640:INFO:Importing libraries
2023-11-02 18:26:52,640:INFO:Copying training dataset
2023-11-02 18:26:52,646:INFO:Defining folds
2023-11-02 18:26:52,647:INFO:Declaring metric variables
2023-11-02 18:26:52,652:INFO:Importing untrained model
2023-11-02 18:26:52,658:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 18:26:52,664:INFO:Starting cross validation
2023-11-02 18:26:52,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:56,542:INFO:Calculating mean and std
2023-11-02 18:26:56,543:INFO:Creating metrics dataframe
2023-11-02 18:26:56,545:INFO:Uploading results into container
2023-11-02 18:26:56,545:INFO:Uploading model into container now
2023-11-02 18:26:56,546:INFO:_master_model_container: 16
2023-11-02 18:26:56,546:INFO:_display_container: 2
2023-11-02 18:26:56,547:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 18:26:56,548:INFO:create_model() successfully completed......................................
2023-11-02 18:26:56,705:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:56,705:INFO:Creating metrics dataframe
2023-11-02 18:26:56,715:INFO:Initializing Extreme Gradient Boosting
2023-11-02 18:26:56,715:INFO:Total runtime is 0.5571206053098042 minutes
2023-11-02 18:26:56,718:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:56,718:INFO:Initializing create_model()
2023-11-02 18:26:56,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:56,718:INFO:Checking exceptions
2023-11-02 18:26:56,718:INFO:Importing libraries
2023-11-02 18:26:56,718:INFO:Copying training dataset
2023-11-02 18:26:56,723:INFO:Defining folds
2023-11-02 18:26:56,723:INFO:Declaring metric variables
2023-11-02 18:26:56,728:INFO:Importing untrained model
2023-11-02 18:26:56,732:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:26:56,737:INFO:Starting cross validation
2023-11-02 18:26:56,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:57,688:INFO:Calculating mean and std
2023-11-02 18:26:57,689:INFO:Creating metrics dataframe
2023-11-02 18:26:57,692:INFO:Uploading results into container
2023-11-02 18:26:57,693:INFO:Uploading model into container now
2023-11-02 18:26:57,694:INFO:_master_model_container: 17
2023-11-02 18:26:57,694:INFO:_display_container: 2
2023-11-02 18:26:57,694:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:26:57,694:INFO:create_model() successfully completed......................................
2023-11-02 18:26:57,861:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:57,861:INFO:Creating metrics dataframe
2023-11-02 18:26:57,870:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 18:26:57,871:INFO:Total runtime is 0.5763874689737956 minutes
2023-11-02 18:26:57,875:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:57,877:INFO:Initializing create_model()
2023-11-02 18:26:57,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:57,877:INFO:Checking exceptions
2023-11-02 18:26:57,877:INFO:Importing libraries
2023-11-02 18:26:57,877:INFO:Copying training dataset
2023-11-02 18:26:57,882:INFO:Defining folds
2023-11-02 18:26:57,882:INFO:Declaring metric variables
2023-11-02 18:26:57,885:INFO:Importing untrained model
2023-11-02 18:26:57,888:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:26:57,896:INFO:Starting cross validation
2023-11-02 18:26:57,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:59,181:INFO:Calculating mean and std
2023-11-02 18:26:59,182:INFO:Creating metrics dataframe
2023-11-02 18:26:59,186:INFO:Uploading results into container
2023-11-02 18:26:59,187:INFO:Uploading model into container now
2023-11-02 18:26:59,187:INFO:_master_model_container: 18
2023-11-02 18:26:59,187:INFO:_display_container: 2
2023-11-02 18:26:59,188:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:26:59,188:INFO:create_model() successfully completed......................................
2023-11-02 18:26:59,453:INFO:SubProcess create_model() end ==================================
2023-11-02 18:26:59,453:INFO:Creating metrics dataframe
2023-11-02 18:26:59,482:INFO:Initializing Dummy Regressor
2023-11-02 18:26:59,482:INFO:Total runtime is 0.6032426357269287 minutes
2023-11-02 18:26:59,493:INFO:SubProcess create_model() called ==================================
2023-11-02 18:26:59,495:INFO:Initializing create_model()
2023-11-02 18:26:59,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B867FA4D0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:26:59,495:INFO:Checking exceptions
2023-11-02 18:26:59,495:INFO:Importing libraries
2023-11-02 18:26:59,495:INFO:Copying training dataset
2023-11-02 18:26:59,503:INFO:Defining folds
2023-11-02 18:26:59,504:INFO:Declaring metric variables
2023-11-02 18:26:59,508:INFO:Importing untrained model
2023-11-02 18:26:59,515:INFO:Dummy Regressor Imported successfully
2023-11-02 18:26:59,520:INFO:Starting cross validation
2023-11-02 18:26:59,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:26:59,853:INFO:Calculating mean and std
2023-11-02 18:26:59,854:INFO:Creating metrics dataframe
2023-11-02 18:26:59,857:INFO:Uploading results into container
2023-11-02 18:26:59,857:INFO:Uploading model into container now
2023-11-02 18:26:59,857:INFO:_master_model_container: 19
2023-11-02 18:26:59,857:INFO:_display_container: 2
2023-11-02 18:26:59,857:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 18:26:59,857:INFO:create_model() successfully completed......................................
2023-11-02 18:27:00,043:INFO:SubProcess create_model() end ==================================
2023-11-02 18:27:00,044:INFO:Creating metrics dataframe
2023-11-02 18:27:00,069:INFO:Initializing create_model()
2023-11-02 18:27:00,069:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:27:00,069:INFO:Checking exceptions
2023-11-02 18:27:00,071:INFO:Importing libraries
2023-11-02 18:27:00,071:INFO:Copying training dataset
2023-11-02 18:27:00,074:INFO:Defining folds
2023-11-02 18:27:00,074:INFO:Declaring metric variables
2023-11-02 18:27:00,075:INFO:Importing untrained model
2023-11-02 18:27:00,075:INFO:Declaring custom model
2023-11-02 18:27:00,075:INFO:K Neighbors Regressor Imported successfully
2023-11-02 18:27:00,076:INFO:Cross validation set to False
2023-11-02 18:27:00,076:INFO:Fitting Model
2023-11-02 18:27:00,148:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 18:27:00,148:INFO:create_model() successfully completed......................................
2023-11-02 18:27:00,326:INFO:Initializing create_model()
2023-11-02 18:27:00,326:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:27:00,326:INFO:Checking exceptions
2023-11-02 18:27:00,330:INFO:Importing libraries
2023-11-02 18:27:00,330:INFO:Copying training dataset
2023-11-02 18:27:00,334:INFO:Defining folds
2023-11-02 18:27:00,334:INFO:Declaring metric variables
2023-11-02 18:27:00,334:INFO:Importing untrained model
2023-11-02 18:27:00,334:INFO:Declaring custom model
2023-11-02 18:27:00,335:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:27:00,335:INFO:Cross validation set to False
2023-11-02 18:27:00,335:INFO:Fitting Model
2023-11-02 18:27:00,513:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:27:00,513:INFO:create_model() successfully completed......................................
2023-11-02 18:27:00,741:INFO:_master_model_container: 19
2023-11-02 18:27:00,742:INFO:_display_container: 2
2023-11-02 18:27:00,742:INFO:[KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform'), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)]
2023-11-02 18:27:00,742:INFO:compare_models() successfully completed......................................
2023-11-02 18:31:02,009:INFO:Initializing evaluate_model()
2023-11-02 18:31:02,009:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 18:31:02,021:INFO:Initializing plot_model()
2023-11-02 18:31:02,021:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, system=True)
2023-11-02 18:31:02,022:INFO:Checking exceptions
2023-11-02 18:31:02,024:INFO:Preloading libraries
2023-11-02 18:31:02,033:INFO:Copying training dataset
2023-11-02 18:31:02,034:INFO:Plot type: pipeline
2023-11-02 18:31:02,153:INFO:Visual Rendered Successfully
2023-11-02 18:31:02,308:INFO:plot_model() successfully completed......................................
2023-11-02 18:31:04,133:INFO:Initializing plot_model()
2023-11-02 18:31:04,133:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, system=True)
2023-11-02 18:31:04,133:INFO:Checking exceptions
2023-11-02 18:31:04,135:INFO:Preloading libraries
2023-11-02 18:31:04,144:INFO:Copying training dataset
2023-11-02 18:31:04,144:INFO:Plot type: rfe
2023-11-02 18:31:04,334:INFO:Fitting Model
2023-11-02 18:34:39,325:INFO:PyCaret RegressionExperiment
2023-11-02 18:34:39,325:INFO:Logging name: reg-default-name
2023-11-02 18:34:39,326:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 18:34:39,326:INFO:version 3.1.0
2023-11-02 18:34:39,326:INFO:Initializing setup()
2023-11-02 18:34:39,326:INFO:self.USI: 611b
2023-11-02 18:34:39,326:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 18:34:39,326:INFO:Checking environment
2023-11-02 18:34:39,326:INFO:python_version: 3.10.2
2023-11-02 18:34:39,326:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:34:39,326:INFO:machine: AMD64
2023-11-02 18:34:39,326:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:34:39,330:INFO:Memory: svmem(total=16952647680, available=5313146880, percent=68.7, used=11639500800, free=5313146880)
2023-11-02 18:34:39,330:INFO:Physical Core: 4
2023-11-02 18:34:39,331:INFO:Logical Core: 8
2023-11-02 18:34:39,331:INFO:Checking libraries
2023-11-02 18:34:39,331:INFO:System:
2023-11-02 18:34:39,331:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:34:39,331:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:34:39,331:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:34:39,331:INFO:PyCaret required dependencies:
2023-11-02 18:34:39,331:INFO:                 pip: 23.0.1
2023-11-02 18:34:39,331:INFO:          setuptools: 65.5.0
2023-11-02 18:34:39,331:INFO:             pycaret: 3.1.0
2023-11-02 18:34:39,331:INFO:             IPython: 8.15.0
2023-11-02 18:34:39,331:INFO:          ipywidgets: 8.1.1
2023-11-02 18:34:39,331:INFO:                tqdm: 4.66.1
2023-11-02 18:34:39,331:INFO:               numpy: 1.23.5
2023-11-02 18:34:39,331:INFO:              pandas: 1.5.3
2023-11-02 18:34:39,331:INFO:              jinja2: 3.1.2
2023-11-02 18:34:39,331:INFO:               scipy: 1.10.1
2023-11-02 18:34:39,331:INFO:              joblib: 1.3.2
2023-11-02 18:34:39,331:INFO:             sklearn: 1.2.2
2023-11-02 18:34:39,331:INFO:                pyod: 1.1.0
2023-11-02 18:34:39,331:INFO:            imblearn: 0.11.0
2023-11-02 18:34:39,331:INFO:   category_encoders: 2.6.2
2023-11-02 18:34:39,331:INFO:            lightgbm: 4.1.0
2023-11-02 18:34:39,331:INFO:               numba: 0.58.0
2023-11-02 18:34:39,331:INFO:            requests: 2.31.0
2023-11-02 18:34:39,331:INFO:          matplotlib: 3.8.0
2023-11-02 18:34:39,331:INFO:          scikitplot: 0.3.7
2023-11-02 18:34:39,331:INFO:         yellowbrick: 1.5
2023-11-02 18:34:39,331:INFO:              plotly: 5.17.0
2023-11-02 18:34:39,331:INFO:    plotly-resampler: Not installed
2023-11-02 18:34:39,331:INFO:             kaleido: 0.2.1
2023-11-02 18:34:39,332:INFO:           schemdraw: 0.15
2023-11-02 18:34:39,332:INFO:         statsmodels: 0.14.0
2023-11-02 18:34:39,332:INFO:              sktime: 0.21.1
2023-11-02 18:34:39,332:INFO:               tbats: 1.1.3
2023-11-02 18:34:39,332:INFO:            pmdarima: 2.0.3
2023-11-02 18:34:39,332:INFO:              psutil: 5.9.5
2023-11-02 18:34:39,332:INFO:          markupsafe: 2.1.3
2023-11-02 18:34:39,332:INFO:             pickle5: Not installed
2023-11-02 18:34:39,332:INFO:         cloudpickle: 2.2.1
2023-11-02 18:34:39,332:INFO:         deprecation: 2.1.0
2023-11-02 18:34:39,332:INFO:              xxhash: 3.3.0
2023-11-02 18:34:39,332:INFO:           wurlitzer: Not installed
2023-11-02 18:34:39,332:INFO:PyCaret optional dependencies:
2023-11-02 18:34:39,332:INFO:                shap: Not installed
2023-11-02 18:34:39,332:INFO:           interpret: Not installed
2023-11-02 18:34:39,332:INFO:                umap: Not installed
2023-11-02 18:34:39,332:INFO:     ydata_profiling: Not installed
2023-11-02 18:34:39,332:INFO:  explainerdashboard: Not installed
2023-11-02 18:34:39,332:INFO:             autoviz: Not installed
2023-11-02 18:34:39,332:INFO:           fairlearn: Not installed
2023-11-02 18:34:39,332:INFO:          deepchecks: Not installed
2023-11-02 18:34:39,332:INFO:             xgboost: 2.0.0
2023-11-02 18:34:39,332:INFO:            catboost: Not installed
2023-11-02 18:34:39,332:INFO:              kmodes: Not installed
2023-11-02 18:34:39,332:INFO:             mlxtend: Not installed
2023-11-02 18:34:39,332:INFO:       statsforecast: Not installed
2023-11-02 18:34:39,332:INFO:        tune_sklearn: Not installed
2023-11-02 18:34:39,332:INFO:                 ray: Not installed
2023-11-02 18:34:39,332:INFO:            hyperopt: Not installed
2023-11-02 18:34:39,333:INFO:              optuna: Not installed
2023-11-02 18:34:39,333:INFO:               skopt: Not installed
2023-11-02 18:34:39,333:INFO:              mlflow: Not installed
2023-11-02 18:34:39,333:INFO:              gradio: Not installed
2023-11-02 18:34:39,333:INFO:             fastapi: Not installed
2023-11-02 18:34:39,333:INFO:             uvicorn: Not installed
2023-11-02 18:34:39,333:INFO:              m2cgen: Not installed
2023-11-02 18:34:39,333:INFO:           evidently: Not installed
2023-11-02 18:34:39,333:INFO:               fugue: Not installed
2023-11-02 18:34:39,333:INFO:           streamlit: Not installed
2023-11-02 18:34:39,333:INFO:             prophet: Not installed
2023-11-02 18:34:39,333:INFO:None
2023-11-02 18:34:39,333:INFO:Set up data.
2023-11-02 18:34:39,501:INFO:Initializing plot_model()
2023-11-02 18:34:39,501:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B985A4610>, system=True)
2023-11-02 18:34:39,501:INFO:Checking exceptions
2023-11-02 18:34:39,508:INFO:Preloading libraries
2023-11-02 18:34:39,555:INFO:Copying training dataset
2023-11-02 18:34:39,556:INFO:Plot type: feature
2023-11-02 18:34:39,558:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 18:34:39,911:INFO:Visual Rendered Successfully
2023-11-02 18:34:40,157:INFO:plot_model() successfully completed......................................
2023-11-02 18:34:59,215:INFO:PyCaret RegressionExperiment
2023-11-02 18:34:59,215:INFO:Logging name: reg-default-name
2023-11-02 18:34:59,215:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 18:34:59,215:INFO:version 3.1.0
2023-11-02 18:34:59,215:INFO:Initializing setup()
2023-11-02 18:34:59,215:INFO:self.USI: a6e4
2023-11-02 18:34:59,216:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 18:34:59,216:INFO:Checking environment
2023-11-02 18:34:59,216:INFO:python_version: 3.10.2
2023-11-02 18:34:59,216:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:34:59,216:INFO:machine: AMD64
2023-11-02 18:34:59,216:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:34:59,220:INFO:Memory: svmem(total=16952647680, available=5371850752, percent=68.3, used=11580796928, free=5371850752)
2023-11-02 18:34:59,220:INFO:Physical Core: 4
2023-11-02 18:34:59,220:INFO:Logical Core: 8
2023-11-02 18:34:59,220:INFO:Checking libraries
2023-11-02 18:34:59,220:INFO:System:
2023-11-02 18:34:59,221:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:34:59,221:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:34:59,221:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:34:59,221:INFO:PyCaret required dependencies:
2023-11-02 18:34:59,221:INFO:                 pip: 23.0.1
2023-11-02 18:34:59,221:INFO:          setuptools: 65.5.0
2023-11-02 18:34:59,221:INFO:             pycaret: 3.1.0
2023-11-02 18:34:59,221:INFO:             IPython: 8.15.0
2023-11-02 18:34:59,221:INFO:          ipywidgets: 8.1.1
2023-11-02 18:34:59,221:INFO:                tqdm: 4.66.1
2023-11-02 18:34:59,221:INFO:               numpy: 1.23.5
2023-11-02 18:34:59,221:INFO:              pandas: 1.5.3
2023-11-02 18:34:59,221:INFO:              jinja2: 3.1.2
2023-11-02 18:34:59,221:INFO:               scipy: 1.10.1
2023-11-02 18:34:59,221:INFO:              joblib: 1.3.2
2023-11-02 18:34:59,221:INFO:             sklearn: 1.2.2
2023-11-02 18:34:59,221:INFO:                pyod: 1.1.0
2023-11-02 18:34:59,221:INFO:            imblearn: 0.11.0
2023-11-02 18:34:59,221:INFO:   category_encoders: 2.6.2
2023-11-02 18:34:59,221:INFO:            lightgbm: 4.1.0
2023-11-02 18:34:59,221:INFO:               numba: 0.58.0
2023-11-02 18:34:59,221:INFO:            requests: 2.31.0
2023-11-02 18:34:59,221:INFO:          matplotlib: 3.8.0
2023-11-02 18:34:59,221:INFO:          scikitplot: 0.3.7
2023-11-02 18:34:59,221:INFO:         yellowbrick: 1.5
2023-11-02 18:34:59,221:INFO:              plotly: 5.17.0
2023-11-02 18:34:59,221:INFO:    plotly-resampler: Not installed
2023-11-02 18:34:59,222:INFO:             kaleido: 0.2.1
2023-11-02 18:34:59,222:INFO:           schemdraw: 0.15
2023-11-02 18:34:59,222:INFO:         statsmodels: 0.14.0
2023-11-02 18:34:59,222:INFO:              sktime: 0.21.1
2023-11-02 18:34:59,222:INFO:               tbats: 1.1.3
2023-11-02 18:34:59,222:INFO:            pmdarima: 2.0.3
2023-11-02 18:34:59,222:INFO:              psutil: 5.9.5
2023-11-02 18:34:59,222:INFO:          markupsafe: 2.1.3
2023-11-02 18:34:59,222:INFO:             pickle5: Not installed
2023-11-02 18:34:59,222:INFO:         cloudpickle: 2.2.1
2023-11-02 18:34:59,222:INFO:         deprecation: 2.1.0
2023-11-02 18:34:59,222:INFO:              xxhash: 3.3.0
2023-11-02 18:34:59,222:INFO:           wurlitzer: Not installed
2023-11-02 18:34:59,222:INFO:PyCaret optional dependencies:
2023-11-02 18:34:59,222:INFO:                shap: Not installed
2023-11-02 18:34:59,222:INFO:           interpret: Not installed
2023-11-02 18:34:59,222:INFO:                umap: Not installed
2023-11-02 18:34:59,222:INFO:     ydata_profiling: Not installed
2023-11-02 18:34:59,222:INFO:  explainerdashboard: Not installed
2023-11-02 18:34:59,222:INFO:             autoviz: Not installed
2023-11-02 18:34:59,222:INFO:           fairlearn: Not installed
2023-11-02 18:34:59,222:INFO:          deepchecks: Not installed
2023-11-02 18:34:59,222:INFO:             xgboost: 2.0.0
2023-11-02 18:34:59,222:INFO:            catboost: Not installed
2023-11-02 18:34:59,223:INFO:              kmodes: Not installed
2023-11-02 18:34:59,223:INFO:             mlxtend: Not installed
2023-11-02 18:34:59,223:INFO:       statsforecast: Not installed
2023-11-02 18:34:59,223:INFO:        tune_sklearn: Not installed
2023-11-02 18:34:59,223:INFO:                 ray: Not installed
2023-11-02 18:34:59,223:INFO:            hyperopt: Not installed
2023-11-02 18:34:59,223:INFO:              optuna: Not installed
2023-11-02 18:34:59,223:INFO:               skopt: Not installed
2023-11-02 18:34:59,223:INFO:              mlflow: Not installed
2023-11-02 18:34:59,223:INFO:              gradio: Not installed
2023-11-02 18:34:59,223:INFO:             fastapi: Not installed
2023-11-02 18:34:59,223:INFO:             uvicorn: Not installed
2023-11-02 18:34:59,223:INFO:              m2cgen: Not installed
2023-11-02 18:34:59,223:INFO:           evidently: Not installed
2023-11-02 18:34:59,223:INFO:               fugue: Not installed
2023-11-02 18:34:59,223:INFO:           streamlit: Not installed
2023-11-02 18:34:59,223:INFO:             prophet: Not installed
2023-11-02 18:34:59,223:INFO:None
2023-11-02 18:34:59,223:INFO:Set up data.
2023-11-02 18:34:59,233:INFO:Set up folding strategy.
2023-11-02 18:34:59,233:INFO:Set up train/test split.
2023-11-02 18:34:59,237:INFO:Set up index.
2023-11-02 18:34:59,237:INFO:Assigning column types.
2023-11-02 18:34:59,240:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 18:34:59,241:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,244:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,248:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,346:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,349:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,353:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,448:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,450:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 18:34:59,454:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,545:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,550:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,554:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,636:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,639:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 18:34:59,647:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,733:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,742:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,819:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,821:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 18:34:59,869:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,901:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:34:59,981:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:34:59,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:34:59,983:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 18:35:00,039:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:35:00,077:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:00,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:00,127:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:35:00,158:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:00,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:00,160:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 18:35:00,240:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:00,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:00,383:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:00,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:00,388:INFO:Preparing preprocessing pipeline...
2023-11-02 18:35:00,388:INFO:Set up simple imputation.
2023-11-02 18:35:00,396:INFO:Set up encoding of categorical features.
2023-11-02 18:35:00,534:INFO:Finished creating preprocessing pipeline.
2023-11-02 18:35:00,541:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 18:35:00,541:INFO:Creating final display dataframe.
2023-11-02 18:35:00,838:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (15479, 6)
4        Transformed data shape       (15479, 26)
5   Transformed train set shape       (10835, 26)
6    Transformed test set shape        (4644, 26)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              a6e4
2023-11-02 18:35:01,004:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:01,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:01,112:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:35:01,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:35:01,117:INFO:setup() successfully completed in 1.9s...............
2023-11-02 18:35:04,227:INFO:Initializing compare_models()
2023-11-02 18:35:04,228:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 18:35:04,228:INFO:Checking exceptions
2023-11-02 18:35:04,233:INFO:Preparing display monitor
2023-11-02 18:35:04,254:INFO:Initializing Linear Regression
2023-11-02 18:35:04,254:INFO:Total runtime is 8.340676625569662e-06 minutes
2023-11-02 18:35:04,257:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:04,257:INFO:Initializing create_model()
2023-11-02 18:35:04,257:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:04,258:INFO:Checking exceptions
2023-11-02 18:35:04,258:INFO:Importing libraries
2023-11-02 18:35:04,258:INFO:Copying training dataset
2023-11-02 18:35:04,262:INFO:Defining folds
2023-11-02 18:35:04,262:INFO:Declaring metric variables
2023-11-02 18:35:04,264:INFO:Importing untrained model
2023-11-02 18:35:04,267:INFO:Linear Regression Imported successfully
2023-11-02 18:35:04,277:INFO:Starting cross validation
2023-11-02 18:35:04,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:08,689:INFO:Calculating mean and std
2023-11-02 18:35:08,691:INFO:Creating metrics dataframe
2023-11-02 18:35:08,695:INFO:Uploading results into container
2023-11-02 18:35:08,696:INFO:Uploading model into container now
2023-11-02 18:35:08,698:INFO:_master_model_container: 1
2023-11-02 18:35:08,698:INFO:_display_container: 2
2023-11-02 18:35:08,699:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 18:35:08,699:INFO:create_model() successfully completed......................................
2023-11-02 18:35:08,883:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:08,883:INFO:Creating metrics dataframe
2023-11-02 18:35:08,889:INFO:Initializing Lasso Regression
2023-11-02 18:35:08,889:INFO:Total runtime is 0.07726198037465414 minutes
2023-11-02 18:35:08,891:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:08,891:INFO:Initializing create_model()
2023-11-02 18:35:08,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:08,892:INFO:Checking exceptions
2023-11-02 18:35:08,892:INFO:Importing libraries
2023-11-02 18:35:08,892:INFO:Copying training dataset
2023-11-02 18:35:08,898:INFO:Defining folds
2023-11-02 18:35:08,899:INFO:Declaring metric variables
2023-11-02 18:35:08,903:INFO:Importing untrained model
2023-11-02 18:35:08,906:INFO:Lasso Regression Imported successfully
2023-11-02 18:35:08,911:INFO:Starting cross validation
2023-11-02 18:35:08,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:09,232:INFO:Calculating mean and std
2023-11-02 18:35:09,233:INFO:Creating metrics dataframe
2023-11-02 18:35:09,237:INFO:Uploading results into container
2023-11-02 18:35:09,237:INFO:Uploading model into container now
2023-11-02 18:35:09,238:INFO:_master_model_container: 2
2023-11-02 18:35:09,238:INFO:_display_container: 2
2023-11-02 18:35:09,238:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 18:35:09,238:INFO:create_model() successfully completed......................................
2023-11-02 18:35:09,410:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:09,410:INFO:Creating metrics dataframe
2023-11-02 18:35:09,417:INFO:Initializing Ridge Regression
2023-11-02 18:35:09,417:INFO:Total runtime is 0.0860628366470337 minutes
2023-11-02 18:35:09,420:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:09,420:INFO:Initializing create_model()
2023-11-02 18:35:09,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:09,421:INFO:Checking exceptions
2023-11-02 18:35:09,421:INFO:Importing libraries
2023-11-02 18:35:09,421:INFO:Copying training dataset
2023-11-02 18:35:09,425:INFO:Defining folds
2023-11-02 18:35:09,425:INFO:Declaring metric variables
2023-11-02 18:35:09,428:INFO:Importing untrained model
2023-11-02 18:35:09,434:INFO:Ridge Regression Imported successfully
2023-11-02 18:35:09,439:INFO:Starting cross validation
2023-11-02 18:35:09,440:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:09,791:INFO:Calculating mean and std
2023-11-02 18:35:09,792:INFO:Creating metrics dataframe
2023-11-02 18:35:09,794:INFO:Uploading results into container
2023-11-02 18:35:09,795:INFO:Uploading model into container now
2023-11-02 18:35:09,795:INFO:_master_model_container: 3
2023-11-02 18:35:09,795:INFO:_display_container: 2
2023-11-02 18:35:09,796:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 18:35:09,796:INFO:create_model() successfully completed......................................
2023-11-02 18:35:09,977:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:09,977:INFO:Creating metrics dataframe
2023-11-02 18:35:09,988:INFO:Initializing Elastic Net
2023-11-02 18:35:09,989:INFO:Total runtime is 0.09558814366658529 minutes
2023-11-02 18:35:09,992:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:09,992:INFO:Initializing create_model()
2023-11-02 18:35:09,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:09,992:INFO:Checking exceptions
2023-11-02 18:35:09,992:INFO:Importing libraries
2023-11-02 18:35:09,992:INFO:Copying training dataset
2023-11-02 18:35:10,002:INFO:Defining folds
2023-11-02 18:35:10,002:INFO:Declaring metric variables
2023-11-02 18:35:10,007:INFO:Importing untrained model
2023-11-02 18:35:10,009:INFO:Elastic Net Imported successfully
2023-11-02 18:35:10,020:INFO:Starting cross validation
2023-11-02 18:35:10,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:10,372:INFO:Calculating mean and std
2023-11-02 18:35:10,373:INFO:Creating metrics dataframe
2023-11-02 18:35:10,375:INFO:Uploading results into container
2023-11-02 18:35:10,376:INFO:Uploading model into container now
2023-11-02 18:35:10,376:INFO:_master_model_container: 4
2023-11-02 18:35:10,376:INFO:_display_container: 2
2023-11-02 18:35:10,377:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 18:35:10,377:INFO:create_model() successfully completed......................................
2023-11-02 18:35:10,546:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:10,546:INFO:Creating metrics dataframe
2023-11-02 18:35:10,556:INFO:Initializing Least Angle Regression
2023-11-02 18:35:10,556:INFO:Total runtime is 0.10503789981206259 minutes
2023-11-02 18:35:10,558:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:10,559:INFO:Initializing create_model()
2023-11-02 18:35:10,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:10,559:INFO:Checking exceptions
2023-11-02 18:35:10,559:INFO:Importing libraries
2023-11-02 18:35:10,559:INFO:Copying training dataset
2023-11-02 18:35:10,565:INFO:Defining folds
2023-11-02 18:35:10,566:INFO:Declaring metric variables
2023-11-02 18:35:10,570:INFO:Importing untrained model
2023-11-02 18:35:10,574:INFO:Least Angle Regression Imported successfully
2023-11-02 18:35:10,579:INFO:Starting cross validation
2023-11-02 18:35:10,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:10,917:INFO:Calculating mean and std
2023-11-02 18:35:10,917:INFO:Creating metrics dataframe
2023-11-02 18:35:10,921:INFO:Uploading results into container
2023-11-02 18:35:10,921:INFO:Uploading model into container now
2023-11-02 18:35:10,921:INFO:_master_model_container: 5
2023-11-02 18:35:10,921:INFO:_display_container: 2
2023-11-02 18:35:10,922:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 18:35:10,922:INFO:create_model() successfully completed......................................
2023-11-02 18:35:11,126:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:11,126:INFO:Creating metrics dataframe
2023-11-02 18:35:11,134:INFO:Initializing Lasso Least Angle Regression
2023-11-02 18:35:11,134:INFO:Total runtime is 0.11467809279759726 minutes
2023-11-02 18:35:11,137:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:11,137:INFO:Initializing create_model()
2023-11-02 18:35:11,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:11,137:INFO:Checking exceptions
2023-11-02 18:35:11,137:INFO:Importing libraries
2023-11-02 18:35:11,138:INFO:Copying training dataset
2023-11-02 18:35:11,142:INFO:Defining folds
2023-11-02 18:35:11,142:INFO:Declaring metric variables
2023-11-02 18:35:11,145:INFO:Importing untrained model
2023-11-02 18:35:11,150:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 18:35:11,157:INFO:Starting cross validation
2023-11-02 18:35:11,158:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:11,486:INFO:Calculating mean and std
2023-11-02 18:35:11,487:INFO:Creating metrics dataframe
2023-11-02 18:35:11,489:INFO:Uploading results into container
2023-11-02 18:35:11,490:INFO:Uploading model into container now
2023-11-02 18:35:11,490:INFO:_master_model_container: 6
2023-11-02 18:35:11,490:INFO:_display_container: 2
2023-11-02 18:35:11,490:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 18:35:11,490:INFO:create_model() successfully completed......................................
2023-11-02 18:35:11,672:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:11,672:INFO:Creating metrics dataframe
2023-11-02 18:35:11,681:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 18:35:11,681:INFO:Total runtime is 0.12379213968912761 minutes
2023-11-02 18:35:11,687:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:11,688:INFO:Initializing create_model()
2023-11-02 18:35:11,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:11,688:INFO:Checking exceptions
2023-11-02 18:35:11,688:INFO:Importing libraries
2023-11-02 18:35:11,688:INFO:Copying training dataset
2023-11-02 18:35:11,696:INFO:Defining folds
2023-11-02 18:35:11,697:INFO:Declaring metric variables
2023-11-02 18:35:11,703:INFO:Importing untrained model
2023-11-02 18:35:11,707:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 18:35:11,713:INFO:Starting cross validation
2023-11-02 18:35:11,714:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:12,056:INFO:Calculating mean and std
2023-11-02 18:35:12,057:INFO:Creating metrics dataframe
2023-11-02 18:35:12,059:INFO:Uploading results into container
2023-11-02 18:35:12,060:INFO:Uploading model into container now
2023-11-02 18:35:12,060:INFO:_master_model_container: 7
2023-11-02 18:35:12,060:INFO:_display_container: 2
2023-11-02 18:35:12,060:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 18:35:12,061:INFO:create_model() successfully completed......................................
2023-11-02 18:35:12,243:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:12,243:INFO:Creating metrics dataframe
2023-11-02 18:35:12,252:INFO:Initializing Bayesian Ridge
2023-11-02 18:35:12,253:INFO:Total runtime is 0.13332401514053346 minutes
2023-11-02 18:35:12,256:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:12,256:INFO:Initializing create_model()
2023-11-02 18:35:12,256:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:12,256:INFO:Checking exceptions
2023-11-02 18:35:12,256:INFO:Importing libraries
2023-11-02 18:35:12,256:INFO:Copying training dataset
2023-11-02 18:35:12,261:INFO:Defining folds
2023-11-02 18:35:12,261:INFO:Declaring metric variables
2023-11-02 18:35:12,264:INFO:Importing untrained model
2023-11-02 18:35:12,269:INFO:Bayesian Ridge Imported successfully
2023-11-02 18:35:12,275:INFO:Starting cross validation
2023-11-02 18:35:12,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:12,722:INFO:Calculating mean and std
2023-11-02 18:35:12,723:INFO:Creating metrics dataframe
2023-11-02 18:35:12,725:INFO:Uploading results into container
2023-11-02 18:35:12,725:INFO:Uploading model into container now
2023-11-02 18:35:12,726:INFO:_master_model_container: 8
2023-11-02 18:35:12,726:INFO:_display_container: 2
2023-11-02 18:35:12,726:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 18:35:12,726:INFO:create_model() successfully completed......................................
2023-11-02 18:35:12,897:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:12,897:INFO:Creating metrics dataframe
2023-11-02 18:35:12,907:INFO:Initializing Passive Aggressive Regressor
2023-11-02 18:35:12,907:INFO:Total runtime is 0.14422781070073448 minutes
2023-11-02 18:35:12,910:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:12,911:INFO:Initializing create_model()
2023-11-02 18:35:12,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:12,911:INFO:Checking exceptions
2023-11-02 18:35:12,911:INFO:Importing libraries
2023-11-02 18:35:12,911:INFO:Copying training dataset
2023-11-02 18:35:12,918:INFO:Defining folds
2023-11-02 18:35:12,919:INFO:Declaring metric variables
2023-11-02 18:35:12,923:INFO:Importing untrained model
2023-11-02 18:35:12,926:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 18:35:12,932:INFO:Starting cross validation
2023-11-02 18:35:12,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:13,282:INFO:Calculating mean and std
2023-11-02 18:35:13,283:INFO:Creating metrics dataframe
2023-11-02 18:35:13,288:INFO:Uploading results into container
2023-11-02 18:35:13,288:INFO:Uploading model into container now
2023-11-02 18:35:13,289:INFO:_master_model_container: 9
2023-11-02 18:35:13,289:INFO:_display_container: 2
2023-11-02 18:35:13,289:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 18:35:13,290:INFO:create_model() successfully completed......................................
2023-11-02 18:35:13,474:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:13,474:INFO:Creating metrics dataframe
2023-11-02 18:35:13,481:INFO:Initializing Huber Regressor
2023-11-02 18:35:13,481:INFO:Total runtime is 0.1537883758544922 minutes
2023-11-02 18:35:13,485:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:13,486:INFO:Initializing create_model()
2023-11-02 18:35:13,486:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:13,486:INFO:Checking exceptions
2023-11-02 18:35:13,486:INFO:Importing libraries
2023-11-02 18:35:13,486:INFO:Copying training dataset
2023-11-02 18:35:13,490:INFO:Defining folds
2023-11-02 18:35:13,490:INFO:Declaring metric variables
2023-11-02 18:35:13,493:INFO:Importing untrained model
2023-11-02 18:35:13,497:INFO:Huber Regressor Imported successfully
2023-11-02 18:35:13,506:INFO:Starting cross validation
2023-11-02 18:35:13,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:14,641:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,726:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,740:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,755:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,777:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,781:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,785:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:14,862:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:15,097:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:15,134:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:15,155:INFO:Calculating mean and std
2023-11-02 18:35:15,156:INFO:Creating metrics dataframe
2023-11-02 18:35:15,158:INFO:Uploading results into container
2023-11-02 18:35:15,158:INFO:Uploading model into container now
2023-11-02 18:35:15,158:INFO:_master_model_container: 10
2023-11-02 18:35:15,158:INFO:_display_container: 2
2023-11-02 18:35:15,159:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 18:35:15,159:INFO:create_model() successfully completed......................................
2023-11-02 18:35:15,315:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:15,315:INFO:Creating metrics dataframe
2023-11-02 18:35:15,323:INFO:Initializing K Neighbors Regressor
2023-11-02 18:35:15,323:INFO:Total runtime is 0.18449084758758547 minutes
2023-11-02 18:35:15,328:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:15,328:INFO:Initializing create_model()
2023-11-02 18:35:15,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:15,328:INFO:Checking exceptions
2023-11-02 18:35:15,328:INFO:Importing libraries
2023-11-02 18:35:15,328:INFO:Copying training dataset
2023-11-02 18:35:15,333:INFO:Defining folds
2023-11-02 18:35:15,333:INFO:Declaring metric variables
2023-11-02 18:35:15,337:INFO:Importing untrained model
2023-11-02 18:35:15,342:INFO:K Neighbors Regressor Imported successfully
2023-11-02 18:35:15,347:INFO:Starting cross validation
2023-11-02 18:35:15,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:15,819:INFO:Calculating mean and std
2023-11-02 18:35:15,820:INFO:Creating metrics dataframe
2023-11-02 18:35:15,823:INFO:Uploading results into container
2023-11-02 18:35:15,825:INFO:Uploading model into container now
2023-11-02 18:35:15,826:INFO:_master_model_container: 11
2023-11-02 18:35:15,826:INFO:_display_container: 2
2023-11-02 18:35:15,826:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 18:35:15,826:INFO:create_model() successfully completed......................................
2023-11-02 18:35:15,999:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:15,999:INFO:Creating metrics dataframe
2023-11-02 18:35:16,007:INFO:Initializing Decision Tree Regressor
2023-11-02 18:35:16,007:INFO:Total runtime is 0.19588493903477988 minutes
2023-11-02 18:35:16,011:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:16,012:INFO:Initializing create_model()
2023-11-02 18:35:16,012:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:16,012:INFO:Checking exceptions
2023-11-02 18:35:16,012:INFO:Importing libraries
2023-11-02 18:35:16,012:INFO:Copying training dataset
2023-11-02 18:35:16,017:INFO:Defining folds
2023-11-02 18:35:16,017:INFO:Declaring metric variables
2023-11-02 18:35:16,019:INFO:Importing untrained model
2023-11-02 18:35:16,021:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:35:16,030:INFO:Starting cross validation
2023-11-02 18:35:16,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:16,436:INFO:Calculating mean and std
2023-11-02 18:35:16,438:INFO:Creating metrics dataframe
2023-11-02 18:35:16,442:INFO:Uploading results into container
2023-11-02 18:35:16,442:INFO:Uploading model into container now
2023-11-02 18:35:16,443:INFO:_master_model_container: 12
2023-11-02 18:35:16,443:INFO:_display_container: 2
2023-11-02 18:35:16,443:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:35:16,443:INFO:create_model() successfully completed......................................
2023-11-02 18:35:16,607:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:16,607:INFO:Creating metrics dataframe
2023-11-02 18:35:16,615:INFO:Initializing Random Forest Regressor
2023-11-02 18:35:16,615:INFO:Total runtime is 0.20601725578308108 minutes
2023-11-02 18:35:16,617:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:16,617:INFO:Initializing create_model()
2023-11-02 18:35:16,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:16,617:INFO:Checking exceptions
2023-11-02 18:35:16,618:INFO:Importing libraries
2023-11-02 18:35:16,618:INFO:Copying training dataset
2023-11-02 18:35:16,624:INFO:Defining folds
2023-11-02 18:35:16,624:INFO:Declaring metric variables
2023-11-02 18:35:16,627:INFO:Importing untrained model
2023-11-02 18:35:16,630:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:35:16,637:INFO:Starting cross validation
2023-11-02 18:35:16,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:25,336:INFO:Calculating mean and std
2023-11-02 18:35:25,337:INFO:Creating metrics dataframe
2023-11-02 18:35:25,341:INFO:Uploading results into container
2023-11-02 18:35:25,342:INFO:Uploading model into container now
2023-11-02 18:35:25,342:INFO:_master_model_container: 13
2023-11-02 18:35:25,342:INFO:_display_container: 2
2023-11-02 18:35:25,344:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:35:25,345:INFO:create_model() successfully completed......................................
2023-11-02 18:35:25,633:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:25,633:INFO:Creating metrics dataframe
2023-11-02 18:35:25,646:INFO:Initializing Extra Trees Regressor
2023-11-02 18:35:25,647:INFO:Total runtime is 0.3565642595291138 minutes
2023-11-02 18:35:25,653:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:25,653:INFO:Initializing create_model()
2023-11-02 18:35:25,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:25,654:INFO:Checking exceptions
2023-11-02 18:35:25,654:INFO:Importing libraries
2023-11-02 18:35:25,654:INFO:Copying training dataset
2023-11-02 18:35:25,666:INFO:Defining folds
2023-11-02 18:35:25,666:INFO:Declaring metric variables
2023-11-02 18:35:25,669:INFO:Importing untrained model
2023-11-02 18:35:25,673:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:35:25,684:INFO:Starting cross validation
2023-11-02 18:35:25,686:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:32,328:INFO:Calculating mean and std
2023-11-02 18:35:32,330:INFO:Creating metrics dataframe
2023-11-02 18:35:32,338:INFO:Uploading results into container
2023-11-02 18:35:32,339:INFO:Uploading model into container now
2023-11-02 18:35:32,340:INFO:_master_model_container: 14
2023-11-02 18:35:32,341:INFO:_display_container: 2
2023-11-02 18:35:32,341:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:35:32,341:INFO:create_model() successfully completed......................................
2023-11-02 18:35:32,618:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:32,619:INFO:Creating metrics dataframe
2023-11-02 18:35:32,630:INFO:Initializing AdaBoost Regressor
2023-11-02 18:35:32,630:INFO:Total runtime is 0.4729357918103536 minutes
2023-11-02 18:35:32,632:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:32,633:INFO:Initializing create_model()
2023-11-02 18:35:32,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:32,633:INFO:Checking exceptions
2023-11-02 18:35:32,633:INFO:Importing libraries
2023-11-02 18:35:32,633:INFO:Copying training dataset
2023-11-02 18:35:32,640:INFO:Defining folds
2023-11-02 18:35:32,640:INFO:Declaring metric variables
2023-11-02 18:35:32,644:INFO:Importing untrained model
2023-11-02 18:35:32,648:INFO:AdaBoost Regressor Imported successfully
2023-11-02 18:35:32,657:INFO:Starting cross validation
2023-11-02 18:35:32,658:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:34,653:INFO:Calculating mean and std
2023-11-02 18:35:34,654:INFO:Creating metrics dataframe
2023-11-02 18:35:34,657:INFO:Uploading results into container
2023-11-02 18:35:34,657:INFO:Uploading model into container now
2023-11-02 18:35:34,657:INFO:_master_model_container: 15
2023-11-02 18:35:34,657:INFO:_display_container: 2
2023-11-02 18:35:34,657:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 18:35:34,657:INFO:create_model() successfully completed......................................
2023-11-02 18:35:34,816:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:34,817:INFO:Creating metrics dataframe
2023-11-02 18:35:34,828:INFO:Initializing Gradient Boosting Regressor
2023-11-02 18:35:34,828:INFO:Total runtime is 0.5095714251200358 minutes
2023-11-02 18:35:34,831:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:34,831:INFO:Initializing create_model()
2023-11-02 18:35:34,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:34,831:INFO:Checking exceptions
2023-11-02 18:35:34,831:INFO:Importing libraries
2023-11-02 18:35:34,831:INFO:Copying training dataset
2023-11-02 18:35:34,838:INFO:Defining folds
2023-11-02 18:35:34,838:INFO:Declaring metric variables
2023-11-02 18:35:34,841:INFO:Importing untrained model
2023-11-02 18:35:34,844:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 18:35:34,849:INFO:Starting cross validation
2023-11-02 18:35:34,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:39,091:INFO:Calculating mean and std
2023-11-02 18:35:39,093:INFO:Creating metrics dataframe
2023-11-02 18:35:39,096:INFO:Uploading results into container
2023-11-02 18:35:39,097:INFO:Uploading model into container now
2023-11-02 18:35:39,098:INFO:_master_model_container: 16
2023-11-02 18:35:39,098:INFO:_display_container: 2
2023-11-02 18:35:39,098:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 18:35:39,098:INFO:create_model() successfully completed......................................
2023-11-02 18:35:39,304:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:39,304:INFO:Creating metrics dataframe
2023-11-02 18:35:39,319:INFO:Initializing Extreme Gradient Boosting
2023-11-02 18:35:39,320:INFO:Total runtime is 0.5844445069630941 minutes
2023-11-02 18:35:39,325:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:39,326:INFO:Initializing create_model()
2023-11-02 18:35:39,326:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:39,326:INFO:Checking exceptions
2023-11-02 18:35:39,326:INFO:Importing libraries
2023-11-02 18:35:39,326:INFO:Copying training dataset
2023-11-02 18:35:39,332:INFO:Defining folds
2023-11-02 18:35:39,332:INFO:Declaring metric variables
2023-11-02 18:35:39,334:INFO:Importing untrained model
2023-11-02 18:35:39,340:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:35:39,347:INFO:Starting cross validation
2023-11-02 18:35:39,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:40,630:INFO:Calculating mean and std
2023-11-02 18:35:40,631:INFO:Creating metrics dataframe
2023-11-02 18:35:40,635:INFO:Uploading results into container
2023-11-02 18:35:40,635:INFO:Uploading model into container now
2023-11-02 18:35:40,636:INFO:_master_model_container: 17
2023-11-02 18:35:40,636:INFO:_display_container: 2
2023-11-02 18:35:40,637:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:35:40,637:INFO:create_model() successfully completed......................................
2023-11-02 18:35:40,888:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:40,888:INFO:Creating metrics dataframe
2023-11-02 18:35:40,903:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 18:35:40,903:INFO:Total runtime is 0.6108283480008444 minutes
2023-11-02 18:35:40,909:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:40,910:INFO:Initializing create_model()
2023-11-02 18:35:40,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:40,911:INFO:Checking exceptions
2023-11-02 18:35:40,911:INFO:Importing libraries
2023-11-02 18:35:40,911:INFO:Copying training dataset
2023-11-02 18:35:40,920:INFO:Defining folds
2023-11-02 18:35:40,920:INFO:Declaring metric variables
2023-11-02 18:35:40,925:INFO:Importing untrained model
2023-11-02 18:35:40,931:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:35:40,944:INFO:Starting cross validation
2023-11-02 18:35:40,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:42,387:INFO:Calculating mean and std
2023-11-02 18:35:42,389:INFO:Creating metrics dataframe
2023-11-02 18:35:42,395:INFO:Uploading results into container
2023-11-02 18:35:42,396:INFO:Uploading model into container now
2023-11-02 18:35:42,397:INFO:_master_model_container: 18
2023-11-02 18:35:42,397:INFO:_display_container: 2
2023-11-02 18:35:42,397:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:35:42,397:INFO:create_model() successfully completed......................................
2023-11-02 18:35:42,681:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:42,681:INFO:Creating metrics dataframe
2023-11-02 18:35:42,695:INFO:Initializing Dummy Regressor
2023-11-02 18:35:42,696:INFO:Total runtime is 0.6406988620758057 minutes
2023-11-02 18:35:42,700:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:42,700:INFO:Initializing create_model()
2023-11-02 18:35:42,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B97461120>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:42,700:INFO:Checking exceptions
2023-11-02 18:35:42,700:INFO:Importing libraries
2023-11-02 18:35:42,700:INFO:Copying training dataset
2023-11-02 18:35:42,706:INFO:Defining folds
2023-11-02 18:35:42,706:INFO:Declaring metric variables
2023-11-02 18:35:42,717:INFO:Importing untrained model
2023-11-02 18:35:42,721:INFO:Dummy Regressor Imported successfully
2023-11-02 18:35:42,733:INFO:Starting cross validation
2023-11-02 18:35:42,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:43,337:INFO:Calculating mean and std
2023-11-02 18:35:43,338:INFO:Creating metrics dataframe
2023-11-02 18:35:43,345:INFO:Uploading results into container
2023-11-02 18:35:43,347:INFO:Uploading model into container now
2023-11-02 18:35:43,347:INFO:_master_model_container: 19
2023-11-02 18:35:43,347:INFO:_display_container: 2
2023-11-02 18:35:43,348:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 18:35:43,348:INFO:create_model() successfully completed......................................
2023-11-02 18:35:43,569:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:43,569:INFO:Creating metrics dataframe
2023-11-02 18:35:43,593:INFO:Initializing create_model()
2023-11-02 18:35:43,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:43,594:INFO:Checking exceptions
2023-11-02 18:35:43,595:INFO:Importing libraries
2023-11-02 18:35:43,595:INFO:Copying training dataset
2023-11-02 18:35:43,600:INFO:Defining folds
2023-11-02 18:35:43,600:INFO:Declaring metric variables
2023-11-02 18:35:43,600:INFO:Importing untrained model
2023-11-02 18:35:43,600:INFO:Declaring custom model
2023-11-02 18:35:43,601:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:35:43,602:INFO:Cross validation set to False
2023-11-02 18:35:43,602:INFO:Fitting Model
2023-11-02 18:35:43,812:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:35:43,812:INFO:create_model() successfully completed......................................
2023-11-02 18:35:44,042:INFO:Initializing create_model()
2023-11-02 18:35:44,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:44,044:INFO:Checking exceptions
2023-11-02 18:35:44,046:INFO:Importing libraries
2023-11-02 18:35:44,046:INFO:Copying training dataset
2023-11-02 18:35:44,052:INFO:Defining folds
2023-11-02 18:35:44,052:INFO:Declaring metric variables
2023-11-02 18:35:44,052:INFO:Importing untrained model
2023-11-02 18:35:44,052:INFO:Declaring custom model
2023-11-02 18:35:44,053:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:35:44,054:INFO:Cross validation set to False
2023-11-02 18:35:44,054:INFO:Fitting Model
2023-11-02 18:35:44,708:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:35:44,708:INFO:create_model() successfully completed......................................
2023-11-02 18:35:44,932:INFO:Initializing create_model()
2023-11-02 18:35:44,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:44,932:INFO:Checking exceptions
2023-11-02 18:35:44,933:INFO:Importing libraries
2023-11-02 18:35:44,934:INFO:Copying training dataset
2023-11-02 18:35:44,937:INFO:Defining folds
2023-11-02 18:35:44,937:INFO:Declaring metric variables
2023-11-02 18:35:44,938:INFO:Importing untrained model
2023-11-02 18:35:44,938:INFO:Declaring custom model
2023-11-02 18:35:44,938:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:35:44,939:INFO:Cross validation set to False
2023-11-02 18:35:44,940:INFO:Fitting Model
2023-11-02 18:35:46,340:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:35:46,340:INFO:create_model() successfully completed......................................
2023-11-02 18:35:46,524:INFO:Initializing create_model()
2023-11-02 18:35:46,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:46,525:INFO:Checking exceptions
2023-11-02 18:35:46,527:INFO:Importing libraries
2023-11-02 18:35:46,527:INFO:Copying training dataset
2023-11-02 18:35:46,533:INFO:Defining folds
2023-11-02 18:35:46,534:INFO:Declaring metric variables
2023-11-02 18:35:46,534:INFO:Importing untrained model
2023-11-02 18:35:46,534:INFO:Declaring custom model
2023-11-02 18:35:46,534:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:35:46,535:INFO:Cross validation set to False
2023-11-02 18:35:46,535:INFO:Fitting Model
2023-11-02 18:35:46,608:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 18:35:46,609:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000152 seconds.
2023-11-02 18:35:46,609:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 18:35:46,609:INFO:[LightGBM] [Info] Total Bins 848
2023-11-02 18:35:46,609:INFO:[LightGBM] [Info] Number of data points in the train set: 10835, number of used features: 25
2023-11-02 18:35:46,609:INFO:[LightGBM] [Info] Start training from score 1.020415
2023-11-02 18:35:46,675:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:35:46,675:INFO:create_model() successfully completed......................................
2023-11-02 18:35:46,870:INFO:Initializing create_model()
2023-11-02 18:35:46,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:46,871:INFO:Checking exceptions
2023-11-02 18:35:46,872:INFO:Importing libraries
2023-11-02 18:35:46,872:INFO:Copying training dataset
2023-11-02 18:35:46,878:INFO:Defining folds
2023-11-02 18:35:46,878:INFO:Declaring metric variables
2023-11-02 18:35:46,879:INFO:Importing untrained model
2023-11-02 18:35:46,879:INFO:Declaring custom model
2023-11-02 18:35:46,880:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:35:46,880:INFO:Cross validation set to False
2023-11-02 18:35:46,880:INFO:Fitting Model
2023-11-02 18:35:46,997:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:35:46,997:INFO:create_model() successfully completed......................................
2023-11-02 18:35:47,183:INFO:_master_model_container: 19
2023-11-02 18:35:47,183:INFO:_display_container: 2
2023-11-02 18:35:47,184:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 18:35:47,184:INFO:compare_models() successfully completed......................................
2023-11-02 18:35:52,110:INFO:Initializing compare_models()
2023-11-02 18:35:52,110:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 18:35:52,110:INFO:Checking exceptions
2023-11-02 18:35:52,112:INFO:Preparing display monitor
2023-11-02 18:35:52,130:INFO:Initializing Linear Regression
2023-11-02 18:35:52,130:INFO:Total runtime is 0.0 minutes
2023-11-02 18:35:52,134:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:52,135:INFO:Initializing create_model()
2023-11-02 18:35:52,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:52,135:INFO:Checking exceptions
2023-11-02 18:35:52,135:INFO:Importing libraries
2023-11-02 18:35:52,135:INFO:Copying training dataset
2023-11-02 18:35:52,140:INFO:Defining folds
2023-11-02 18:35:52,140:INFO:Declaring metric variables
2023-11-02 18:35:52,142:INFO:Importing untrained model
2023-11-02 18:35:52,145:INFO:Linear Regression Imported successfully
2023-11-02 18:35:52,151:INFO:Starting cross validation
2023-11-02 18:35:52,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:52,629:INFO:Calculating mean and std
2023-11-02 18:35:52,630:INFO:Creating metrics dataframe
2023-11-02 18:35:52,636:INFO:Uploading results into container
2023-11-02 18:35:52,638:INFO:Uploading model into container now
2023-11-02 18:35:52,639:INFO:_master_model_container: 20
2023-11-02 18:35:52,639:INFO:_display_container: 3
2023-11-02 18:35:52,639:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 18:35:52,639:INFO:create_model() successfully completed......................................
2023-11-02 18:35:52,928:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:52,928:INFO:Creating metrics dataframe
2023-11-02 18:35:52,937:INFO:Initializing Lasso Regression
2023-11-02 18:35:52,938:INFO:Total runtime is 0.013469783465067546 minutes
2023-11-02 18:35:52,943:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:52,943:INFO:Initializing create_model()
2023-11-02 18:35:52,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:52,943:INFO:Checking exceptions
2023-11-02 18:35:52,943:INFO:Importing libraries
2023-11-02 18:35:52,943:INFO:Copying training dataset
2023-11-02 18:35:52,946:INFO:Defining folds
2023-11-02 18:35:52,947:INFO:Declaring metric variables
2023-11-02 18:35:52,951:INFO:Importing untrained model
2023-11-02 18:35:52,957:INFO:Lasso Regression Imported successfully
2023-11-02 18:35:52,962:INFO:Starting cross validation
2023-11-02 18:35:52,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:53,365:INFO:Calculating mean and std
2023-11-02 18:35:53,367:INFO:Creating metrics dataframe
2023-11-02 18:35:53,373:INFO:Uploading results into container
2023-11-02 18:35:53,373:INFO:Uploading model into container now
2023-11-02 18:35:53,374:INFO:_master_model_container: 21
2023-11-02 18:35:53,374:INFO:_display_container: 3
2023-11-02 18:35:53,374:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 18:35:53,374:INFO:create_model() successfully completed......................................
2023-11-02 18:35:53,554:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:53,554:INFO:Creating metrics dataframe
2023-11-02 18:35:53,561:INFO:Initializing Ridge Regression
2023-11-02 18:35:53,561:INFO:Total runtime is 0.02385637362798055 minutes
2023-11-02 18:35:53,565:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:53,565:INFO:Initializing create_model()
2023-11-02 18:35:53,565:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:53,565:INFO:Checking exceptions
2023-11-02 18:35:53,565:INFO:Importing libraries
2023-11-02 18:35:53,565:INFO:Copying training dataset
2023-11-02 18:35:53,572:INFO:Defining folds
2023-11-02 18:35:53,572:INFO:Declaring metric variables
2023-11-02 18:35:53,574:INFO:Importing untrained model
2023-11-02 18:35:53,578:INFO:Ridge Regression Imported successfully
2023-11-02 18:35:53,583:INFO:Starting cross validation
2023-11-02 18:35:53,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:53,932:INFO:Calculating mean and std
2023-11-02 18:35:53,936:INFO:Creating metrics dataframe
2023-11-02 18:35:53,940:INFO:Uploading results into container
2023-11-02 18:35:53,941:INFO:Uploading model into container now
2023-11-02 18:35:53,942:INFO:_master_model_container: 22
2023-11-02 18:35:53,942:INFO:_display_container: 3
2023-11-02 18:35:53,942:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 18:35:53,942:INFO:create_model() successfully completed......................................
2023-11-02 18:35:54,141:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:54,141:INFO:Creating metrics dataframe
2023-11-02 18:35:54,147:INFO:Initializing Elastic Net
2023-11-02 18:35:54,147:INFO:Total runtime is 0.03362370729446411 minutes
2023-11-02 18:35:54,150:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:54,152:INFO:Initializing create_model()
2023-11-02 18:35:54,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:54,152:INFO:Checking exceptions
2023-11-02 18:35:54,152:INFO:Importing libraries
2023-11-02 18:35:54,152:INFO:Copying training dataset
2023-11-02 18:35:54,158:INFO:Defining folds
2023-11-02 18:35:54,158:INFO:Declaring metric variables
2023-11-02 18:35:54,161:INFO:Importing untrained model
2023-11-02 18:35:54,165:INFO:Elastic Net Imported successfully
2023-11-02 18:35:54,172:INFO:Starting cross validation
2023-11-02 18:35:54,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:54,498:INFO:Calculating mean and std
2023-11-02 18:35:54,499:INFO:Creating metrics dataframe
2023-11-02 18:35:54,503:INFO:Uploading results into container
2023-11-02 18:35:54,503:INFO:Uploading model into container now
2023-11-02 18:35:54,504:INFO:_master_model_container: 23
2023-11-02 18:35:54,504:INFO:_display_container: 3
2023-11-02 18:35:54,504:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 18:35:54,504:INFO:create_model() successfully completed......................................
2023-11-02 18:35:54,671:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:54,671:INFO:Creating metrics dataframe
2023-11-02 18:35:54,677:INFO:Initializing Least Angle Regression
2023-11-02 18:35:54,677:INFO:Total runtime is 0.04245055119196574 minutes
2023-11-02 18:35:54,681:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:54,681:INFO:Initializing create_model()
2023-11-02 18:35:54,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:54,682:INFO:Checking exceptions
2023-11-02 18:35:54,682:INFO:Importing libraries
2023-11-02 18:35:54,682:INFO:Copying training dataset
2023-11-02 18:35:54,688:INFO:Defining folds
2023-11-02 18:35:54,688:INFO:Declaring metric variables
2023-11-02 18:35:54,691:INFO:Importing untrained model
2023-11-02 18:35:54,694:INFO:Least Angle Regression Imported successfully
2023-11-02 18:35:54,699:INFO:Starting cross validation
2023-11-02 18:35:54,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:55,054:INFO:Calculating mean and std
2023-11-02 18:35:55,055:INFO:Creating metrics dataframe
2023-11-02 18:35:55,056:INFO:Uploading results into container
2023-11-02 18:35:55,057:INFO:Uploading model into container now
2023-11-02 18:35:55,057:INFO:_master_model_container: 24
2023-11-02 18:35:55,057:INFO:_display_container: 3
2023-11-02 18:35:55,058:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 18:35:55,058:INFO:create_model() successfully completed......................................
2023-11-02 18:35:55,246:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:55,246:INFO:Creating metrics dataframe
2023-11-02 18:35:55,254:INFO:Initializing Lasso Least Angle Regression
2023-11-02 18:35:55,254:INFO:Total runtime is 0.052078326543172196 minutes
2023-11-02 18:35:55,257:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:55,257:INFO:Initializing create_model()
2023-11-02 18:35:55,257:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:55,257:INFO:Checking exceptions
2023-11-02 18:35:55,258:INFO:Importing libraries
2023-11-02 18:35:55,258:INFO:Copying training dataset
2023-11-02 18:35:55,262:INFO:Defining folds
2023-11-02 18:35:55,262:INFO:Declaring metric variables
2023-11-02 18:35:55,265:INFO:Importing untrained model
2023-11-02 18:35:55,271:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 18:35:55,276:INFO:Starting cross validation
2023-11-02 18:35:55,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:55,590:INFO:Calculating mean and std
2023-11-02 18:35:55,591:INFO:Creating metrics dataframe
2023-11-02 18:35:55,593:INFO:Uploading results into container
2023-11-02 18:35:55,593:INFO:Uploading model into container now
2023-11-02 18:35:55,594:INFO:_master_model_container: 25
2023-11-02 18:35:55,594:INFO:_display_container: 3
2023-11-02 18:35:55,594:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 18:35:55,594:INFO:create_model() successfully completed......................................
2023-11-02 18:35:55,763:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:55,763:INFO:Creating metrics dataframe
2023-11-02 18:35:55,772:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 18:35:55,772:INFO:Total runtime is 0.0607036272684733 minutes
2023-11-02 18:35:55,775:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:55,775:INFO:Initializing create_model()
2023-11-02 18:35:55,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:55,775:INFO:Checking exceptions
2023-11-02 18:35:55,775:INFO:Importing libraries
2023-11-02 18:35:55,775:INFO:Copying training dataset
2023-11-02 18:35:55,781:INFO:Defining folds
2023-11-02 18:35:55,781:INFO:Declaring metric variables
2023-11-02 18:35:55,784:INFO:Importing untrained model
2023-11-02 18:35:55,790:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 18:35:55,795:INFO:Starting cross validation
2023-11-02 18:35:55,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:56,111:INFO:Calculating mean and std
2023-11-02 18:35:56,112:INFO:Creating metrics dataframe
2023-11-02 18:35:56,114:INFO:Uploading results into container
2023-11-02 18:35:56,114:INFO:Uploading model into container now
2023-11-02 18:35:56,114:INFO:_master_model_container: 26
2023-11-02 18:35:56,114:INFO:_display_container: 3
2023-11-02 18:35:56,115:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 18:35:56,115:INFO:create_model() successfully completed......................................
2023-11-02 18:35:56,284:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:56,285:INFO:Creating metrics dataframe
2023-11-02 18:35:56,294:INFO:Initializing Bayesian Ridge
2023-11-02 18:35:56,294:INFO:Total runtime is 0.06939954360326131 minutes
2023-11-02 18:35:56,296:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:56,296:INFO:Initializing create_model()
2023-11-02 18:35:56,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:56,296:INFO:Checking exceptions
2023-11-02 18:35:56,296:INFO:Importing libraries
2023-11-02 18:35:56,296:INFO:Copying training dataset
2023-11-02 18:35:56,304:INFO:Defining folds
2023-11-02 18:35:56,305:INFO:Declaring metric variables
2023-11-02 18:35:56,308:INFO:Importing untrained model
2023-11-02 18:35:56,311:INFO:Bayesian Ridge Imported successfully
2023-11-02 18:35:56,315:INFO:Starting cross validation
2023-11-02 18:35:56,317:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:56,658:INFO:Calculating mean and std
2023-11-02 18:35:56,659:INFO:Creating metrics dataframe
2023-11-02 18:35:56,661:INFO:Uploading results into container
2023-11-02 18:35:56,662:INFO:Uploading model into container now
2023-11-02 18:35:56,662:INFO:_master_model_container: 27
2023-11-02 18:35:56,662:INFO:_display_container: 3
2023-11-02 18:35:56,663:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 18:35:56,663:INFO:create_model() successfully completed......................................
2023-11-02 18:35:56,841:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:56,841:INFO:Creating metrics dataframe
2023-11-02 18:35:56,848:INFO:Initializing Passive Aggressive Regressor
2023-11-02 18:35:56,849:INFO:Total runtime is 0.07865856488545736 minutes
2023-11-02 18:35:56,851:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:56,851:INFO:Initializing create_model()
2023-11-02 18:35:56,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:56,852:INFO:Checking exceptions
2023-11-02 18:35:56,852:INFO:Importing libraries
2023-11-02 18:35:56,852:INFO:Copying training dataset
2023-11-02 18:35:56,860:INFO:Defining folds
2023-11-02 18:35:56,860:INFO:Declaring metric variables
2023-11-02 18:35:56,863:INFO:Importing untrained model
2023-11-02 18:35:56,867:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 18:35:56,875:INFO:Starting cross validation
2023-11-02 18:35:56,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:57,265:INFO:Calculating mean and std
2023-11-02 18:35:57,266:INFO:Creating metrics dataframe
2023-11-02 18:35:57,268:INFO:Uploading results into container
2023-11-02 18:35:57,270:INFO:Uploading model into container now
2023-11-02 18:35:57,271:INFO:_master_model_container: 28
2023-11-02 18:35:57,272:INFO:_display_container: 3
2023-11-02 18:35:57,272:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 18:35:57,272:INFO:create_model() successfully completed......................................
2023-11-02 18:35:57,435:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:57,436:INFO:Creating metrics dataframe
2023-11-02 18:35:57,446:INFO:Initializing Huber Regressor
2023-11-02 18:35:57,446:INFO:Total runtime is 0.08861055771509807 minutes
2023-11-02 18:35:57,449:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:57,449:INFO:Initializing create_model()
2023-11-02 18:35:57,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:57,449:INFO:Checking exceptions
2023-11-02 18:35:57,449:INFO:Importing libraries
2023-11-02 18:35:57,449:INFO:Copying training dataset
2023-11-02 18:35:57,457:INFO:Defining folds
2023-11-02 18:35:57,457:INFO:Declaring metric variables
2023-11-02 18:35:57,460:INFO:Importing untrained model
2023-11-02 18:35:57,464:INFO:Huber Regressor Imported successfully
2023-11-02 18:35:57,469:INFO:Starting cross validation
2023-11-02 18:35:57,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:58,652:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,677:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,708:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,709:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,716:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,728:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,752:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:58,764:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:59,118:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:59,149:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:35:59,173:INFO:Calculating mean and std
2023-11-02 18:35:59,173:INFO:Creating metrics dataframe
2023-11-02 18:35:59,177:INFO:Uploading results into container
2023-11-02 18:35:59,178:INFO:Uploading model into container now
2023-11-02 18:35:59,178:INFO:_master_model_container: 29
2023-11-02 18:35:59,178:INFO:_display_container: 3
2023-11-02 18:35:59,179:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 18:35:59,179:INFO:create_model() successfully completed......................................
2023-11-02 18:35:59,366:INFO:SubProcess create_model() end ==================================
2023-11-02 18:35:59,366:INFO:Creating metrics dataframe
2023-11-02 18:35:59,375:INFO:Initializing K Neighbors Regressor
2023-11-02 18:35:59,375:INFO:Total runtime is 0.12075315316518148 minutes
2023-11-02 18:35:59,379:INFO:SubProcess create_model() called ==================================
2023-11-02 18:35:59,379:INFO:Initializing create_model()
2023-11-02 18:35:59,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:35:59,380:INFO:Checking exceptions
2023-11-02 18:35:59,380:INFO:Importing libraries
2023-11-02 18:35:59,380:INFO:Copying training dataset
2023-11-02 18:35:59,384:INFO:Defining folds
2023-11-02 18:35:59,384:INFO:Declaring metric variables
2023-11-02 18:35:59,386:INFO:Importing untrained model
2023-11-02 18:35:59,392:INFO:K Neighbors Regressor Imported successfully
2023-11-02 18:35:59,397:INFO:Starting cross validation
2023-11-02 18:35:59,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:35:59,873:INFO:Calculating mean and std
2023-11-02 18:35:59,875:INFO:Creating metrics dataframe
2023-11-02 18:35:59,879:INFO:Uploading results into container
2023-11-02 18:35:59,880:INFO:Uploading model into container now
2023-11-02 18:35:59,880:INFO:_master_model_container: 30
2023-11-02 18:35:59,880:INFO:_display_container: 3
2023-11-02 18:35:59,880:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 18:35:59,880:INFO:create_model() successfully completed......................................
2023-11-02 18:36:00,092:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:00,092:INFO:Creating metrics dataframe
2023-11-02 18:36:00,100:INFO:Initializing Decision Tree Regressor
2023-11-02 18:36:00,100:INFO:Total runtime is 0.13283139069875083 minutes
2023-11-02 18:36:00,102:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:00,102:INFO:Initializing create_model()
2023-11-02 18:36:00,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:00,102:INFO:Checking exceptions
2023-11-02 18:36:00,102:INFO:Importing libraries
2023-11-02 18:36:00,102:INFO:Copying training dataset
2023-11-02 18:36:00,109:INFO:Defining folds
2023-11-02 18:36:00,109:INFO:Declaring metric variables
2023-11-02 18:36:00,113:INFO:Importing untrained model
2023-11-02 18:36:00,116:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:36:00,127:INFO:Starting cross validation
2023-11-02 18:36:00,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:00,558:INFO:Calculating mean and std
2023-11-02 18:36:00,559:INFO:Creating metrics dataframe
2023-11-02 18:36:00,561:INFO:Uploading results into container
2023-11-02 18:36:00,561:INFO:Uploading model into container now
2023-11-02 18:36:00,562:INFO:_master_model_container: 31
2023-11-02 18:36:00,562:INFO:_display_container: 3
2023-11-02 18:36:00,562:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:36:00,562:INFO:create_model() successfully completed......................................
2023-11-02 18:36:00,733:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:00,734:INFO:Creating metrics dataframe
2023-11-02 18:36:00,743:INFO:Initializing Random Forest Regressor
2023-11-02 18:36:00,743:INFO:Total runtime is 0.14355035225550336 minutes
2023-11-02 18:36:00,745:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:00,746:INFO:Initializing create_model()
2023-11-02 18:36:00,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:00,746:INFO:Checking exceptions
2023-11-02 18:36:00,746:INFO:Importing libraries
2023-11-02 18:36:00,746:INFO:Copying training dataset
2023-11-02 18:36:00,750:INFO:Defining folds
2023-11-02 18:36:00,750:INFO:Declaring metric variables
2023-11-02 18:36:00,752:INFO:Importing untrained model
2023-11-02 18:36:00,758:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:36:00,764:INFO:Starting cross validation
2023-11-02 18:36:00,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:12,514:INFO:Calculating mean and std
2023-11-02 18:36:12,518:INFO:Creating metrics dataframe
2023-11-02 18:36:12,522:INFO:Uploading results into container
2023-11-02 18:36:12,523:INFO:Uploading model into container now
2023-11-02 18:36:12,523:INFO:_master_model_container: 32
2023-11-02 18:36:12,523:INFO:_display_container: 3
2023-11-02 18:36:12,524:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:36:12,524:INFO:create_model() successfully completed......................................
2023-11-02 18:36:12,793:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:12,793:INFO:Creating metrics dataframe
2023-11-02 18:36:12,810:INFO:Initializing Extra Trees Regressor
2023-11-02 18:36:12,810:INFO:Total runtime is 0.34467306931813557 minutes
2023-11-02 18:36:12,813:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:12,814:INFO:Initializing create_model()
2023-11-02 18:36:12,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:12,814:INFO:Checking exceptions
2023-11-02 18:36:12,814:INFO:Importing libraries
2023-11-02 18:36:12,814:INFO:Copying training dataset
2023-11-02 18:36:12,822:INFO:Defining folds
2023-11-02 18:36:12,822:INFO:Declaring metric variables
2023-11-02 18:36:12,827:INFO:Importing untrained model
2023-11-02 18:36:12,830:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:36:12,840:INFO:Starting cross validation
2023-11-02 18:36:12,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:18,969:INFO:Calculating mean and std
2023-11-02 18:36:18,973:INFO:Creating metrics dataframe
2023-11-02 18:36:18,978:INFO:Uploading results into container
2023-11-02 18:36:18,979:INFO:Uploading model into container now
2023-11-02 18:36:18,980:INFO:_master_model_container: 33
2023-11-02 18:36:18,981:INFO:_display_container: 3
2023-11-02 18:36:18,981:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:36:18,982:INFO:create_model() successfully completed......................................
2023-11-02 18:36:19,267:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:19,267:INFO:Creating metrics dataframe
2023-11-02 18:36:19,284:INFO:Initializing AdaBoost Regressor
2023-11-02 18:36:19,285:INFO:Total runtime is 0.452588148911794 minutes
2023-11-02 18:36:19,293:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:19,293:INFO:Initializing create_model()
2023-11-02 18:36:19,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:19,293:INFO:Checking exceptions
2023-11-02 18:36:19,293:INFO:Importing libraries
2023-11-02 18:36:19,294:INFO:Copying training dataset
2023-11-02 18:36:19,302:INFO:Defining folds
2023-11-02 18:36:19,302:INFO:Declaring metric variables
2023-11-02 18:36:19,307:INFO:Importing untrained model
2023-11-02 18:36:19,310:INFO:AdaBoost Regressor Imported successfully
2023-11-02 18:36:19,322:INFO:Starting cross validation
2023-11-02 18:36:19,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:21,688:INFO:Calculating mean and std
2023-11-02 18:36:21,689:INFO:Creating metrics dataframe
2023-11-02 18:36:21,694:INFO:Uploading results into container
2023-11-02 18:36:21,695:INFO:Uploading model into container now
2023-11-02 18:36:21,696:INFO:_master_model_container: 34
2023-11-02 18:36:21,696:INFO:_display_container: 3
2023-11-02 18:36:21,696:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 18:36:21,696:INFO:create_model() successfully completed......................................
2023-11-02 18:36:21,897:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:21,897:INFO:Creating metrics dataframe
2023-11-02 18:36:21,904:INFO:Initializing Gradient Boosting Regressor
2023-11-02 18:36:21,905:INFO:Total runtime is 0.4962605873743693 minutes
2023-11-02 18:36:21,909:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:21,909:INFO:Initializing create_model()
2023-11-02 18:36:21,910:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:21,910:INFO:Checking exceptions
2023-11-02 18:36:21,910:INFO:Importing libraries
2023-11-02 18:36:21,910:INFO:Copying training dataset
2023-11-02 18:36:21,919:INFO:Defining folds
2023-11-02 18:36:21,920:INFO:Declaring metric variables
2023-11-02 18:36:21,925:INFO:Importing untrained model
2023-11-02 18:36:21,928:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 18:36:21,936:INFO:Starting cross validation
2023-11-02 18:36:21,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:26,494:INFO:Calculating mean and std
2023-11-02 18:36:26,497:INFO:Creating metrics dataframe
2023-11-02 18:36:26,499:INFO:Uploading results into container
2023-11-02 18:36:26,499:INFO:Uploading model into container now
2023-11-02 18:36:26,500:INFO:_master_model_container: 35
2023-11-02 18:36:26,500:INFO:_display_container: 3
2023-11-02 18:36:26,500:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 18:36:26,500:INFO:create_model() successfully completed......................................
2023-11-02 18:36:26,698:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:26,698:INFO:Creating metrics dataframe
2023-11-02 18:36:26,725:INFO:Initializing Extreme Gradient Boosting
2023-11-02 18:36:26,725:INFO:Total runtime is 0.5765829722086588 minutes
2023-11-02 18:36:26,732:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:26,733:INFO:Initializing create_model()
2023-11-02 18:36:26,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:26,733:INFO:Checking exceptions
2023-11-02 18:36:26,733:INFO:Importing libraries
2023-11-02 18:36:26,733:INFO:Copying training dataset
2023-11-02 18:36:26,739:INFO:Defining folds
2023-11-02 18:36:26,739:INFO:Declaring metric variables
2023-11-02 18:36:26,742:INFO:Importing untrained model
2023-11-02 18:36:26,749:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:36:26,758:INFO:Starting cross validation
2023-11-02 18:36:26,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:28,005:INFO:Calculating mean and std
2023-11-02 18:36:28,007:INFO:Creating metrics dataframe
2023-11-02 18:36:28,013:INFO:Uploading results into container
2023-11-02 18:36:28,014:INFO:Uploading model into container now
2023-11-02 18:36:28,014:INFO:_master_model_container: 36
2023-11-02 18:36:28,014:INFO:_display_container: 3
2023-11-02 18:36:28,016:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:36:28,016:INFO:create_model() successfully completed......................................
2023-11-02 18:36:28,260:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:28,260:INFO:Creating metrics dataframe
2023-11-02 18:36:28,281:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 18:36:28,282:INFO:Total runtime is 0.6025409936904907 minutes
2023-11-02 18:36:28,286:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:28,286:INFO:Initializing create_model()
2023-11-02 18:36:28,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:28,287:INFO:Checking exceptions
2023-11-02 18:36:28,287:INFO:Importing libraries
2023-11-02 18:36:28,287:INFO:Copying training dataset
2023-11-02 18:36:28,296:INFO:Defining folds
2023-11-02 18:36:28,297:INFO:Declaring metric variables
2023-11-02 18:36:28,303:INFO:Importing untrained model
2023-11-02 18:36:28,307:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:36:28,318:INFO:Starting cross validation
2023-11-02 18:36:28,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:29,607:INFO:Calculating mean and std
2023-11-02 18:36:29,608:INFO:Creating metrics dataframe
2023-11-02 18:36:29,615:INFO:Uploading results into container
2023-11-02 18:36:29,616:INFO:Uploading model into container now
2023-11-02 18:36:29,616:INFO:_master_model_container: 37
2023-11-02 18:36:29,616:INFO:_display_container: 3
2023-11-02 18:36:29,617:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:36:29,617:INFO:create_model() successfully completed......................................
2023-11-02 18:36:29,866:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:29,866:INFO:Creating metrics dataframe
2023-11-02 18:36:29,901:INFO:Initializing Dummy Regressor
2023-11-02 18:36:29,902:INFO:Total runtime is 0.6295337080955505 minutes
2023-11-02 18:36:29,910:INFO:SubProcess create_model() called ==================================
2023-11-02 18:36:29,910:INFO:Initializing create_model()
2023-11-02 18:36:29,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86201A20>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:29,911:INFO:Checking exceptions
2023-11-02 18:36:29,911:INFO:Importing libraries
2023-11-02 18:36:29,911:INFO:Copying training dataset
2023-11-02 18:36:29,928:INFO:Defining folds
2023-11-02 18:36:29,928:INFO:Declaring metric variables
2023-11-02 18:36:29,935:INFO:Importing untrained model
2023-11-02 18:36:29,945:INFO:Dummy Regressor Imported successfully
2023-11-02 18:36:29,959:INFO:Starting cross validation
2023-11-02 18:36:29,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:36:30,343:INFO:Calculating mean and std
2023-11-02 18:36:30,345:INFO:Creating metrics dataframe
2023-11-02 18:36:30,352:INFO:Uploading results into container
2023-11-02 18:36:30,354:INFO:Uploading model into container now
2023-11-02 18:36:30,355:INFO:_master_model_container: 38
2023-11-02 18:36:30,355:INFO:_display_container: 3
2023-11-02 18:36:30,356:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 18:36:30,356:INFO:create_model() successfully completed......................................
2023-11-02 18:36:30,656:INFO:SubProcess create_model() end ==================================
2023-11-02 18:36:30,656:INFO:Creating metrics dataframe
2023-11-02 18:36:30,681:INFO:Initializing create_model()
2023-11-02 18:36:30,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:30,683:INFO:Checking exceptions
2023-11-02 18:36:30,686:INFO:Importing libraries
2023-11-02 18:36:30,687:INFO:Copying training dataset
2023-11-02 18:36:30,695:INFO:Defining folds
2023-11-02 18:36:30,695:INFO:Declaring metric variables
2023-11-02 18:36:30,695:INFO:Importing untrained model
2023-11-02 18:36:30,695:INFO:Declaring custom model
2023-11-02 18:36:30,696:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:36:30,698:INFO:Cross validation set to False
2023-11-02 18:36:30,698:INFO:Fitting Model
2023-11-02 18:36:30,924:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:36:30,924:INFO:create_model() successfully completed......................................
2023-11-02 18:36:31,195:INFO:Initializing create_model()
2023-11-02 18:36:31,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:31,196:INFO:Checking exceptions
2023-11-02 18:36:31,203:INFO:Importing libraries
2023-11-02 18:36:31,203:INFO:Copying training dataset
2023-11-02 18:36:31,220:INFO:Defining folds
2023-11-02 18:36:31,221:INFO:Declaring metric variables
2023-11-02 18:36:31,221:INFO:Importing untrained model
2023-11-02 18:36:31,221:INFO:Declaring custom model
2023-11-02 18:36:31,224:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:36:31,227:INFO:Cross validation set to False
2023-11-02 18:36:31,227:INFO:Fitting Model
2023-11-02 18:36:31,835:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:36:31,835:INFO:create_model() successfully completed......................................
2023-11-02 18:36:32,120:INFO:Initializing create_model()
2023-11-02 18:36:32,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:32,120:INFO:Checking exceptions
2023-11-02 18:36:32,122:INFO:Importing libraries
2023-11-02 18:36:32,122:INFO:Copying training dataset
2023-11-02 18:36:32,125:INFO:Defining folds
2023-11-02 18:36:32,127:INFO:Declaring metric variables
2023-11-02 18:36:32,127:INFO:Importing untrained model
2023-11-02 18:36:32,127:INFO:Declaring custom model
2023-11-02 18:36:32,127:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:36:32,128:INFO:Cross validation set to False
2023-11-02 18:36:32,128:INFO:Fitting Model
2023-11-02 18:36:33,348:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:36:33,348:INFO:create_model() successfully completed......................................
2023-11-02 18:36:33,626:INFO:Initializing create_model()
2023-11-02 18:36:33,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:33,626:INFO:Checking exceptions
2023-11-02 18:36:33,627:INFO:Importing libraries
2023-11-02 18:36:33,628:INFO:Copying training dataset
2023-11-02 18:36:33,633:INFO:Defining folds
2023-11-02 18:36:33,633:INFO:Declaring metric variables
2023-11-02 18:36:33,634:INFO:Importing untrained model
2023-11-02 18:36:33,634:INFO:Declaring custom model
2023-11-02 18:36:33,635:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:36:33,637:INFO:Cross validation set to False
2023-11-02 18:36:33,637:INFO:Fitting Model
2023-11-02 18:36:33,739:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 18:36:33,739:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000310 seconds.
2023-11-02 18:36:33,740:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 18:36:33,740:INFO:[LightGBM] [Info] Total Bins 848
2023-11-02 18:36:33,740:INFO:[LightGBM] [Info] Number of data points in the train set: 10835, number of used features: 25
2023-11-02 18:36:33,740:INFO:[LightGBM] [Info] Start training from score 1.020415
2023-11-02 18:36:33,804:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:36:33,804:INFO:create_model() successfully completed......................................
2023-11-02 18:36:34,080:INFO:Initializing create_model()
2023-11-02 18:36:34,080:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:36:34,080:INFO:Checking exceptions
2023-11-02 18:36:34,083:INFO:Importing libraries
2023-11-02 18:36:34,083:INFO:Copying training dataset
2023-11-02 18:36:34,091:INFO:Defining folds
2023-11-02 18:36:34,092:INFO:Declaring metric variables
2023-11-02 18:36:34,092:INFO:Importing untrained model
2023-11-02 18:36:34,092:INFO:Declaring custom model
2023-11-02 18:36:34,092:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:36:34,094:INFO:Cross validation set to False
2023-11-02 18:36:34,094:INFO:Fitting Model
2023-11-02 18:36:34,211:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:36:34,211:INFO:create_model() successfully completed......................................
2023-11-02 18:36:34,461:INFO:_master_model_container: 38
2023-11-02 18:36:34,462:INFO:_display_container: 3
2023-11-02 18:36:34,464:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 18:36:34,464:INFO:compare_models() successfully completed......................................
2023-11-02 18:37:06,091:INFO:Initializing evaluate_model()
2023-11-02 18:37:06,091:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 18:37:06,104:INFO:Initializing plot_model()
2023-11-02 18:37:06,104:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, system=True)
2023-11-02 18:37:06,104:INFO:Checking exceptions
2023-11-02 18:37:23,506:INFO:Initializing evaluate_model()
2023-11-02 18:37:23,506:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 18:37:23,518:INFO:Initializing plot_model()
2023-11-02 18:37:23,519:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, system=True)
2023-11-02 18:37:23,519:INFO:Checking exceptions
2023-11-02 18:37:23,521:INFO:Preloading libraries
2023-11-02 18:37:23,527:INFO:Copying training dataset
2023-11-02 18:37:23,528:INFO:Plot type: pipeline
2023-11-02 18:37:23,650:INFO:Visual Rendered Successfully
2023-11-02 18:37:23,850:INFO:plot_model() successfully completed......................................
2023-11-02 18:37:26,024:INFO:Initializing plot_model()
2023-11-02 18:37:26,024:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, system=True)
2023-11-02 18:37:26,025:INFO:Checking exceptions
2023-11-02 18:37:26,029:INFO:Preloading libraries
2023-11-02 18:37:26,036:INFO:Copying training dataset
2023-11-02 18:37:26,036:INFO:Plot type: rfe
2023-11-02 18:37:26,290:INFO:Fitting Model
2023-11-02 18:43:21,160:INFO:Visual Rendered Successfully
2023-11-02 18:43:21,363:INFO:plot_model() successfully completed......................................
2023-11-02 18:43:21,372:INFO:Initializing tune_model()
2023-11-02 18:43:21,372:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>)
2023-11-02 18:43:21,372:INFO:Checking exceptions
2023-11-02 18:43:21,383:INFO:Copying training dataset
2023-11-02 18:43:21,387:INFO:Checking base model
2023-11-02 18:43:21,387:INFO:Base model : Extreme Gradient Boosting
2023-11-02 18:43:21,390:INFO:Declaring metric variables
2023-11-02 18:43:21,393:INFO:Defining Hyperparameters
2023-11-02 18:43:21,603:INFO:Tuning with n_jobs=-1
2023-11-02 18:43:21,604:INFO:Initializing RandomizedSearchCV
2023-11-02 18:43:40,885:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 18:43:40,886:INFO:Hyperparameter search completed
2023-11-02 18:43:40,886:INFO:SubProcess create_model() called ==================================
2023-11-02 18:43:40,888:INFO:Initializing create_model()
2023-11-02 18:43:40,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B997708E0>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 18:43:40,888:INFO:Checking exceptions
2023-11-02 18:43:40,889:INFO:Importing libraries
2023-11-02 18:43:40,889:INFO:Copying training dataset
2023-11-02 18:43:40,893:INFO:Defining folds
2023-11-02 18:43:40,893:INFO:Declaring metric variables
2023-11-02 18:43:40,896:INFO:Importing untrained model
2023-11-02 18:43:40,896:INFO:Declaring custom model
2023-11-02 18:43:40,900:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:43:40,908:INFO:Starting cross validation
2023-11-02 18:43:40,910:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:43:43,841:INFO:Calculating mean and std
2023-11-02 18:43:43,842:INFO:Creating metrics dataframe
2023-11-02 18:43:43,845:INFO:Finalizing model
2023-11-02 18:43:44,391:INFO:Uploading results into container
2023-11-02 18:43:44,392:INFO:Uploading model into container now
2023-11-02 18:43:44,393:INFO:_master_model_container: 39
2023-11-02 18:43:44,393:INFO:_display_container: 4
2023-11-02 18:43:44,394:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:43:44,394:INFO:create_model() successfully completed......................................
2023-11-02 18:43:44,599:INFO:SubProcess create_model() end ==================================
2023-11-02 18:43:44,599:INFO:choose_better activated
2023-11-02 18:43:44,602:INFO:SubProcess create_model() called ==================================
2023-11-02 18:43:44,602:INFO:Initializing create_model()
2023-11-02 18:43:44,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:43:44,602:INFO:Checking exceptions
2023-11-02 18:43:44,604:INFO:Importing libraries
2023-11-02 18:43:44,604:INFO:Copying training dataset
2023-11-02 18:43:44,611:INFO:Defining folds
2023-11-02 18:43:44,611:INFO:Declaring metric variables
2023-11-02 18:43:44,611:INFO:Importing untrained model
2023-11-02 18:43:44,611:INFO:Declaring custom model
2023-11-02 18:43:44,612:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:43:44,612:INFO:Starting cross validation
2023-11-02 18:43:44,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:43:45,506:INFO:Calculating mean and std
2023-11-02 18:43:45,506:INFO:Creating metrics dataframe
2023-11-02 18:43:45,509:INFO:Finalizing model
2023-11-02 18:43:45,797:INFO:Uploading results into container
2023-11-02 18:43:45,798:INFO:Uploading model into container now
2023-11-02 18:43:45,798:INFO:_master_model_container: 40
2023-11-02 18:43:45,798:INFO:_display_container: 5
2023-11-02 18:43:45,799:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:43:45,799:INFO:create_model() successfully completed......................................
2023-11-02 18:43:45,998:INFO:SubProcess create_model() end ==================================
2023-11-02 18:43:45,999:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9824
2023-11-02 18:43:46,000:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9839
2023-11-02 18:43:46,000:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 18:43:46,000:INFO:choose_better completed
2023-11-02 18:43:46,010:INFO:_master_model_container: 40
2023-11-02 18:43:46,010:INFO:_display_container: 4
2023-11-02 18:43:46,011:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:43:46,011:INFO:tune_model() successfully completed......................................
2023-11-02 18:43:46,190:INFO:Initializing plot_model()
2023-11-02 18:43:46,190:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022BFE1598D0>, system=True)
2023-11-02 18:43:46,190:INFO:Checking exceptions
2023-11-02 18:43:46,194:INFO:Preloading libraries
2023-11-02 18:43:46,199:INFO:Copying training dataset
2023-11-02 18:43:46,199:INFO:Plot type: feature_all
2023-11-02 18:43:46,286:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 18:43:46,531:INFO:Visual Rendered Successfully
2023-11-02 18:43:46,667:INFO:plot_model() successfully completed......................................
2023-11-02 18:48:15,987:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\302637815.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes'], axis=1, inplace =True)

2023-11-02 18:48:15,988:INFO:PyCaret RegressionExperiment
2023-11-02 18:48:15,988:INFO:Logging name: reg-default-name
2023-11-02 18:48:15,988:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 18:48:15,988:INFO:version 3.1.0
2023-11-02 18:48:15,988:INFO:Initializing setup()
2023-11-02 18:48:15,989:INFO:self.USI: 9c2e
2023-11-02 18:48:15,989:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 18:48:15,989:INFO:Checking environment
2023-11-02 18:48:15,989:INFO:python_version: 3.10.2
2023-11-02 18:48:15,989:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 18:48:15,989:INFO:machine: AMD64
2023-11-02 18:48:15,989:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 18:48:15,992:INFO:Memory: svmem(total=16952647680, available=3982704640, percent=76.5, used=12969943040, free=3982704640)
2023-11-02 18:48:15,992:INFO:Physical Core: 4
2023-11-02 18:48:15,992:INFO:Logical Core: 8
2023-11-02 18:48:15,993:INFO:Checking libraries
2023-11-02 18:48:15,993:INFO:System:
2023-11-02 18:48:15,993:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 18:48:15,993:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 18:48:15,993:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 18:48:15,993:INFO:PyCaret required dependencies:
2023-11-02 18:48:15,993:INFO:                 pip: 23.0.1
2023-11-02 18:48:15,993:INFO:          setuptools: 65.5.0
2023-11-02 18:48:15,993:INFO:             pycaret: 3.1.0
2023-11-02 18:48:15,993:INFO:             IPython: 8.15.0
2023-11-02 18:48:15,993:INFO:          ipywidgets: 8.1.1
2023-11-02 18:48:15,993:INFO:                tqdm: 4.66.1
2023-11-02 18:48:15,993:INFO:               numpy: 1.23.5
2023-11-02 18:48:15,993:INFO:              pandas: 1.5.3
2023-11-02 18:48:15,993:INFO:              jinja2: 3.1.2
2023-11-02 18:48:15,993:INFO:               scipy: 1.10.1
2023-11-02 18:48:15,993:INFO:              joblib: 1.3.2
2023-11-02 18:48:15,993:INFO:             sklearn: 1.2.2
2023-11-02 18:48:15,993:INFO:                pyod: 1.1.0
2023-11-02 18:48:15,993:INFO:            imblearn: 0.11.0
2023-11-02 18:48:15,993:INFO:   category_encoders: 2.6.2
2023-11-02 18:48:15,993:INFO:            lightgbm: 4.1.0
2023-11-02 18:48:15,994:INFO:               numba: 0.58.0
2023-11-02 18:48:15,994:INFO:            requests: 2.31.0
2023-11-02 18:48:15,994:INFO:          matplotlib: 3.8.0
2023-11-02 18:48:15,994:INFO:          scikitplot: 0.3.7
2023-11-02 18:48:15,994:INFO:         yellowbrick: 1.5
2023-11-02 18:48:15,994:INFO:              plotly: 5.17.0
2023-11-02 18:48:15,994:INFO:    plotly-resampler: Not installed
2023-11-02 18:48:15,994:INFO:             kaleido: 0.2.1
2023-11-02 18:48:15,994:INFO:           schemdraw: 0.15
2023-11-02 18:48:15,994:INFO:         statsmodels: 0.14.0
2023-11-02 18:48:15,994:INFO:              sktime: 0.21.1
2023-11-02 18:48:15,994:INFO:               tbats: 1.1.3
2023-11-02 18:48:15,994:INFO:            pmdarima: 2.0.3
2023-11-02 18:48:15,994:INFO:              psutil: 5.9.5
2023-11-02 18:48:15,994:INFO:          markupsafe: 2.1.3
2023-11-02 18:48:15,994:INFO:             pickle5: Not installed
2023-11-02 18:48:15,994:INFO:         cloudpickle: 2.2.1
2023-11-02 18:48:15,994:INFO:         deprecation: 2.1.0
2023-11-02 18:48:15,994:INFO:              xxhash: 3.3.0
2023-11-02 18:48:15,994:INFO:           wurlitzer: Not installed
2023-11-02 18:48:15,994:INFO:PyCaret optional dependencies:
2023-11-02 18:48:15,994:INFO:                shap: Not installed
2023-11-02 18:48:15,994:INFO:           interpret: Not installed
2023-11-02 18:48:15,994:INFO:                umap: Not installed
2023-11-02 18:48:15,994:INFO:     ydata_profiling: Not installed
2023-11-02 18:48:15,995:INFO:  explainerdashboard: Not installed
2023-11-02 18:48:15,995:INFO:             autoviz: Not installed
2023-11-02 18:48:15,995:INFO:           fairlearn: Not installed
2023-11-02 18:48:15,995:INFO:          deepchecks: Not installed
2023-11-02 18:48:15,995:INFO:             xgboost: 2.0.0
2023-11-02 18:48:15,995:INFO:            catboost: Not installed
2023-11-02 18:48:15,995:INFO:              kmodes: Not installed
2023-11-02 18:48:15,995:INFO:             mlxtend: Not installed
2023-11-02 18:48:15,995:INFO:       statsforecast: Not installed
2023-11-02 18:48:15,995:INFO:        tune_sklearn: Not installed
2023-11-02 18:48:15,995:INFO:                 ray: Not installed
2023-11-02 18:48:15,995:INFO:            hyperopt: Not installed
2023-11-02 18:48:15,995:INFO:              optuna: Not installed
2023-11-02 18:48:15,995:INFO:               skopt: Not installed
2023-11-02 18:48:15,995:INFO:              mlflow: Not installed
2023-11-02 18:48:15,995:INFO:              gradio: Not installed
2023-11-02 18:48:15,995:INFO:             fastapi: Not installed
2023-11-02 18:48:15,995:INFO:             uvicorn: Not installed
2023-11-02 18:48:15,995:INFO:              m2cgen: Not installed
2023-11-02 18:48:15,995:INFO:           evidently: Not installed
2023-11-02 18:48:15,995:INFO:               fugue: Not installed
2023-11-02 18:48:15,995:INFO:           streamlit: Not installed
2023-11-02 18:48:15,995:INFO:             prophet: Not installed
2023-11-02 18:48:15,995:INFO:None
2023-11-02 18:48:15,995:INFO:Set up data.
2023-11-02 18:48:16,004:INFO:Set up folding strategy.
2023-11-02 18:48:16,004:INFO:Set up train/test split.
2023-11-02 18:48:16,008:INFO:Set up index.
2023-11-02 18:48:16,008:INFO:Assigning column types.
2023-11-02 18:48:16,010:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 18:48:16,010:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,016:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,021:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,104:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,106:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,109:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,112:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,185:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,187:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 18:48:16,190:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,194:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,237:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,268:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,273:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,276:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,317:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,349:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,351:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 18:48:16,357:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,399:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,432:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,441:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,513:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,516:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 18:48:16,563:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,595:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,644:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,675:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,676:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,678:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 18:48:16,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,757:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,805:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 18:48:16,837:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,839:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 18:48:16,917:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:16,997:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:16,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:17,000:INFO:Preparing preprocessing pipeline...
2023-11-02 18:48:17,000:INFO:Set up simple imputation.
2023-11-02 18:48:17,002:INFO:Set up encoding of categorical features.
2023-11-02 18:48:17,078:INFO:Finished creating preprocessing pipeline.
2023-11-02 18:48:17,087:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 18:48:17,087:INFO:Creating final display dataframe.
2023-11-02 18:48:17,276:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12383, 6)
4        Transformed data shape       (12383, 21)
5   Transformed train set shape        (8668, 21)
6    Transformed test set shape        (3715, 21)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              9c2e
2023-11-02 18:48:17,361:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:17,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:17,444:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 18:48:17,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 18:48:17,449:INFO:setup() successfully completed in 1.46s...............
2023-11-02 18:48:17,475:INFO:Initializing compare_models()
2023-11-02 18:48:17,475:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 18:48:17,476:INFO:Checking exceptions
2023-11-02 18:48:17,477:INFO:Preparing display monitor
2023-11-02 18:48:17,499:INFO:Initializing Linear Regression
2023-11-02 18:48:17,499:INFO:Total runtime is 0.0 minutes
2023-11-02 18:48:17,502:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:17,502:INFO:Initializing create_model()
2023-11-02 18:48:17,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:17,503:INFO:Checking exceptions
2023-11-02 18:48:17,503:INFO:Importing libraries
2023-11-02 18:48:17,503:INFO:Copying training dataset
2023-11-02 18:48:17,507:INFO:Defining folds
2023-11-02 18:48:17,507:INFO:Declaring metric variables
2023-11-02 18:48:17,510:INFO:Importing untrained model
2023-11-02 18:48:17,513:INFO:Linear Regression Imported successfully
2023-11-02 18:48:17,521:INFO:Starting cross validation
2023-11-02 18:48:17,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:17,919:INFO:Calculating mean and std
2023-11-02 18:48:17,919:INFO:Creating metrics dataframe
2023-11-02 18:48:17,921:INFO:Uploading results into container
2023-11-02 18:48:17,922:INFO:Uploading model into container now
2023-11-02 18:48:17,922:INFO:_master_model_container: 1
2023-11-02 18:48:17,922:INFO:_display_container: 2
2023-11-02 18:48:17,922:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 18:48:17,922:INFO:create_model() successfully completed......................................
2023-11-02 18:48:18,099:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:18,099:INFO:Creating metrics dataframe
2023-11-02 18:48:18,106:INFO:Initializing Lasso Regression
2023-11-02 18:48:18,106:INFO:Total runtime is 0.010114467144012452 minutes
2023-11-02 18:48:18,108:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:18,109:INFO:Initializing create_model()
2023-11-02 18:48:18,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:18,109:INFO:Checking exceptions
2023-11-02 18:48:18,109:INFO:Importing libraries
2023-11-02 18:48:18,109:INFO:Copying training dataset
2023-11-02 18:48:18,112:INFO:Defining folds
2023-11-02 18:48:18,112:INFO:Declaring metric variables
2023-11-02 18:48:18,116:INFO:Importing untrained model
2023-11-02 18:48:18,119:INFO:Lasso Regression Imported successfully
2023-11-02 18:48:18,124:INFO:Starting cross validation
2023-11-02 18:48:18,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:18,385:INFO:Calculating mean and std
2023-11-02 18:48:18,385:INFO:Creating metrics dataframe
2023-11-02 18:48:18,387:INFO:Uploading results into container
2023-11-02 18:48:18,388:INFO:Uploading model into container now
2023-11-02 18:48:18,388:INFO:_master_model_container: 2
2023-11-02 18:48:18,388:INFO:_display_container: 2
2023-11-02 18:48:18,388:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 18:48:18,388:INFO:create_model() successfully completed......................................
2023-11-02 18:48:18,555:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:18,556:INFO:Creating metrics dataframe
2023-11-02 18:48:18,560:INFO:Initializing Ridge Regression
2023-11-02 18:48:18,561:INFO:Total runtime is 0.01770672798156738 minutes
2023-11-02 18:48:18,565:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:18,566:INFO:Initializing create_model()
2023-11-02 18:48:18,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:18,566:INFO:Checking exceptions
2023-11-02 18:48:18,566:INFO:Importing libraries
2023-11-02 18:48:18,566:INFO:Copying training dataset
2023-11-02 18:48:18,571:INFO:Defining folds
2023-11-02 18:48:18,571:INFO:Declaring metric variables
2023-11-02 18:48:18,574:INFO:Importing untrained model
2023-11-02 18:48:18,577:INFO:Ridge Regression Imported successfully
2023-11-02 18:48:18,582:INFO:Starting cross validation
2023-11-02 18:48:18,583:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:18,837:INFO:Calculating mean and std
2023-11-02 18:48:18,838:INFO:Creating metrics dataframe
2023-11-02 18:48:18,840:INFO:Uploading results into container
2023-11-02 18:48:18,841:INFO:Uploading model into container now
2023-11-02 18:48:18,841:INFO:_master_model_container: 3
2023-11-02 18:48:18,841:INFO:_display_container: 2
2023-11-02 18:48:18,841:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 18:48:18,841:INFO:create_model() successfully completed......................................
2023-11-02 18:48:19,003:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:19,003:INFO:Creating metrics dataframe
2023-11-02 18:48:19,010:INFO:Initializing Elastic Net
2023-11-02 18:48:19,010:INFO:Total runtime is 0.025189300378163654 minutes
2023-11-02 18:48:19,013:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:19,013:INFO:Initializing create_model()
2023-11-02 18:48:19,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:19,013:INFO:Checking exceptions
2023-11-02 18:48:19,013:INFO:Importing libraries
2023-11-02 18:48:19,013:INFO:Copying training dataset
2023-11-02 18:48:19,020:INFO:Defining folds
2023-11-02 18:48:19,020:INFO:Declaring metric variables
2023-11-02 18:48:19,022:INFO:Importing untrained model
2023-11-02 18:48:19,025:INFO:Elastic Net Imported successfully
2023-11-02 18:48:19,030:INFO:Starting cross validation
2023-11-02 18:48:19,032:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:19,313:INFO:Calculating mean and std
2023-11-02 18:48:19,314:INFO:Creating metrics dataframe
2023-11-02 18:48:19,318:INFO:Uploading results into container
2023-11-02 18:48:19,319:INFO:Uploading model into container now
2023-11-02 18:48:19,319:INFO:_master_model_container: 4
2023-11-02 18:48:19,319:INFO:_display_container: 2
2023-11-02 18:48:19,320:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 18:48:19,320:INFO:create_model() successfully completed......................................
2023-11-02 18:48:19,479:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:19,479:INFO:Creating metrics dataframe
2023-11-02 18:48:19,487:INFO:Initializing Least Angle Regression
2023-11-02 18:48:19,487:INFO:Total runtime is 0.03313636779785156 minutes
2023-11-02 18:48:19,489:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:19,490:INFO:Initializing create_model()
2023-11-02 18:48:19,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:19,490:INFO:Checking exceptions
2023-11-02 18:48:19,490:INFO:Importing libraries
2023-11-02 18:48:19,490:INFO:Copying training dataset
2023-11-02 18:48:19,495:INFO:Defining folds
2023-11-02 18:48:19,495:INFO:Declaring metric variables
2023-11-02 18:48:19,498:INFO:Importing untrained model
2023-11-02 18:48:19,503:INFO:Least Angle Regression Imported successfully
2023-11-02 18:48:19,508:INFO:Starting cross validation
2023-11-02 18:48:19,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:19,758:INFO:Calculating mean and std
2023-11-02 18:48:19,759:INFO:Creating metrics dataframe
2023-11-02 18:48:19,761:INFO:Uploading results into container
2023-11-02 18:48:19,761:INFO:Uploading model into container now
2023-11-02 18:48:19,762:INFO:_master_model_container: 5
2023-11-02 18:48:19,762:INFO:_display_container: 2
2023-11-02 18:48:19,762:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 18:48:19,762:INFO:create_model() successfully completed......................................
2023-11-02 18:48:19,922:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:19,922:INFO:Creating metrics dataframe
2023-11-02 18:48:19,929:INFO:Initializing Lasso Least Angle Regression
2023-11-02 18:48:19,929:INFO:Total runtime is 0.04050236145655314 minutes
2023-11-02 18:48:19,934:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:19,934:INFO:Initializing create_model()
2023-11-02 18:48:19,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:19,935:INFO:Checking exceptions
2023-11-02 18:48:19,935:INFO:Importing libraries
2023-11-02 18:48:19,935:INFO:Copying training dataset
2023-11-02 18:48:19,939:INFO:Defining folds
2023-11-02 18:48:19,939:INFO:Declaring metric variables
2023-11-02 18:48:19,942:INFO:Importing untrained model
2023-11-02 18:48:19,945:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 18:48:19,951:INFO:Starting cross validation
2023-11-02 18:48:19,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:20,212:INFO:Calculating mean and std
2023-11-02 18:48:20,213:INFO:Creating metrics dataframe
2023-11-02 18:48:20,216:INFO:Uploading results into container
2023-11-02 18:48:20,217:INFO:Uploading model into container now
2023-11-02 18:48:20,218:INFO:_master_model_container: 6
2023-11-02 18:48:20,218:INFO:_display_container: 2
2023-11-02 18:48:20,218:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 18:48:20,218:INFO:create_model() successfully completed......................................
2023-11-02 18:48:20,386:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:20,387:INFO:Creating metrics dataframe
2023-11-02 18:48:20,395:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 18:48:20,395:INFO:Total runtime is 0.04826657772064209 minutes
2023-11-02 18:48:20,398:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:20,398:INFO:Initializing create_model()
2023-11-02 18:48:20,398:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:20,398:INFO:Checking exceptions
2023-11-02 18:48:20,398:INFO:Importing libraries
2023-11-02 18:48:20,398:INFO:Copying training dataset
2023-11-02 18:48:20,405:INFO:Defining folds
2023-11-02 18:48:20,405:INFO:Declaring metric variables
2023-11-02 18:48:20,408:INFO:Importing untrained model
2023-11-02 18:48:20,411:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 18:48:20,414:INFO:Starting cross validation
2023-11-02 18:48:20,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:20,660:INFO:Calculating mean and std
2023-11-02 18:48:20,661:INFO:Creating metrics dataframe
2023-11-02 18:48:20,663:INFO:Uploading results into container
2023-11-02 18:48:20,663:INFO:Uploading model into container now
2023-11-02 18:48:20,664:INFO:_master_model_container: 7
2023-11-02 18:48:20,664:INFO:_display_container: 2
2023-11-02 18:48:20,664:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 18:48:20,664:INFO:create_model() successfully completed......................................
2023-11-02 18:48:20,837:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:20,837:INFO:Creating metrics dataframe
2023-11-02 18:48:20,845:INFO:Initializing Bayesian Ridge
2023-11-02 18:48:20,845:INFO:Total runtime is 0.055760991573333744 minutes
2023-11-02 18:48:20,848:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:20,848:INFO:Initializing create_model()
2023-11-02 18:48:20,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:20,849:INFO:Checking exceptions
2023-11-02 18:48:20,849:INFO:Importing libraries
2023-11-02 18:48:20,849:INFO:Copying training dataset
2023-11-02 18:48:20,855:INFO:Defining folds
2023-11-02 18:48:20,855:INFO:Declaring metric variables
2023-11-02 18:48:20,857:INFO:Importing untrained model
2023-11-02 18:48:20,860:INFO:Bayesian Ridge Imported successfully
2023-11-02 18:48:20,866:INFO:Starting cross validation
2023-11-02 18:48:20,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:21,126:INFO:Calculating mean and std
2023-11-02 18:48:21,127:INFO:Creating metrics dataframe
2023-11-02 18:48:21,129:INFO:Uploading results into container
2023-11-02 18:48:21,130:INFO:Uploading model into container now
2023-11-02 18:48:21,130:INFO:_master_model_container: 8
2023-11-02 18:48:21,130:INFO:_display_container: 2
2023-11-02 18:48:21,130:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 18:48:21,130:INFO:create_model() successfully completed......................................
2023-11-02 18:48:21,296:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:21,296:INFO:Creating metrics dataframe
2023-11-02 18:48:21,304:INFO:Initializing Passive Aggressive Regressor
2023-11-02 18:48:21,304:INFO:Total runtime is 0.06341340939203899 minutes
2023-11-02 18:48:21,307:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:21,307:INFO:Initializing create_model()
2023-11-02 18:48:21,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:21,307:INFO:Checking exceptions
2023-11-02 18:48:21,307:INFO:Importing libraries
2023-11-02 18:48:21,307:INFO:Copying training dataset
2023-11-02 18:48:21,311:INFO:Defining folds
2023-11-02 18:48:21,312:INFO:Declaring metric variables
2023-11-02 18:48:21,315:INFO:Importing untrained model
2023-11-02 18:48:21,321:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 18:48:21,326:INFO:Starting cross validation
2023-11-02 18:48:21,328:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:21,597:INFO:Calculating mean and std
2023-11-02 18:48:21,598:INFO:Creating metrics dataframe
2023-11-02 18:48:21,602:INFO:Uploading results into container
2023-11-02 18:48:21,602:INFO:Uploading model into container now
2023-11-02 18:48:21,603:INFO:_master_model_container: 9
2023-11-02 18:48:21,603:INFO:_display_container: 2
2023-11-02 18:48:21,603:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 18:48:21,603:INFO:create_model() successfully completed......................................
2023-11-02 18:48:21,763:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:21,763:INFO:Creating metrics dataframe
2023-11-02 18:48:21,773:INFO:Initializing Huber Regressor
2023-11-02 18:48:21,773:INFO:Total runtime is 0.07123563289642335 minutes
2023-11-02 18:48:21,777:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:21,777:INFO:Initializing create_model()
2023-11-02 18:48:21,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:21,777:INFO:Checking exceptions
2023-11-02 18:48:21,777:INFO:Importing libraries
2023-11-02 18:48:21,777:INFO:Copying training dataset
2023-11-02 18:48:21,781:INFO:Defining folds
2023-11-02 18:48:21,781:INFO:Declaring metric variables
2023-11-02 18:48:21,786:INFO:Importing untrained model
2023-11-02 18:48:21,789:INFO:Huber Regressor Imported successfully
2023-11-02 18:48:21,793:INFO:Starting cross validation
2023-11-02 18:48:21,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:22,416:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,445:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,460:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,464:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,482:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,490:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,498:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,686:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,694:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 18:48:22,721:INFO:Calculating mean and std
2023-11-02 18:48:22,722:INFO:Creating metrics dataframe
2023-11-02 18:48:22,725:INFO:Uploading results into container
2023-11-02 18:48:22,725:INFO:Uploading model into container now
2023-11-02 18:48:22,725:INFO:_master_model_container: 10
2023-11-02 18:48:22,726:INFO:_display_container: 2
2023-11-02 18:48:22,726:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 18:48:22,726:INFO:create_model() successfully completed......................................
2023-11-02 18:48:22,922:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:22,922:INFO:Creating metrics dataframe
2023-11-02 18:48:22,929:INFO:Initializing K Neighbors Regressor
2023-11-02 18:48:22,930:INFO:Total runtime is 0.09051004648208619 minutes
2023-11-02 18:48:22,931:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:22,931:INFO:Initializing create_model()
2023-11-02 18:48:22,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:22,932:INFO:Checking exceptions
2023-11-02 18:48:22,932:INFO:Importing libraries
2023-11-02 18:48:22,932:INFO:Copying training dataset
2023-11-02 18:48:22,938:INFO:Defining folds
2023-11-02 18:48:22,938:INFO:Declaring metric variables
2023-11-02 18:48:22,941:INFO:Importing untrained model
2023-11-02 18:48:22,944:INFO:K Neighbors Regressor Imported successfully
2023-11-02 18:48:22,949:INFO:Starting cross validation
2023-11-02 18:48:22,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:23,343:INFO:Calculating mean and std
2023-11-02 18:48:23,344:INFO:Creating metrics dataframe
2023-11-02 18:48:23,349:INFO:Uploading results into container
2023-11-02 18:48:23,349:INFO:Uploading model into container now
2023-11-02 18:48:23,350:INFO:_master_model_container: 11
2023-11-02 18:48:23,350:INFO:_display_container: 2
2023-11-02 18:48:23,350:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 18:48:23,350:INFO:create_model() successfully completed......................................
2023-11-02 18:48:23,533:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:23,533:INFO:Creating metrics dataframe
2023-11-02 18:48:23,542:INFO:Initializing Decision Tree Regressor
2023-11-02 18:48:23,542:INFO:Total runtime is 0.10072646935780843 minutes
2023-11-02 18:48:23,544:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:23,544:INFO:Initializing create_model()
2023-11-02 18:48:23,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:23,544:INFO:Checking exceptions
2023-11-02 18:48:23,544:INFO:Importing libraries
2023-11-02 18:48:23,544:INFO:Copying training dataset
2023-11-02 18:48:23,549:INFO:Defining folds
2023-11-02 18:48:23,549:INFO:Declaring metric variables
2023-11-02 18:48:23,554:INFO:Importing untrained model
2023-11-02 18:48:23,557:INFO:Decision Tree Regressor Imported successfully
2023-11-02 18:48:23,562:INFO:Starting cross validation
2023-11-02 18:48:23,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:23,882:INFO:Calculating mean and std
2023-11-02 18:48:23,883:INFO:Creating metrics dataframe
2023-11-02 18:48:23,887:INFO:Uploading results into container
2023-11-02 18:48:23,888:INFO:Uploading model into container now
2023-11-02 18:48:23,888:INFO:_master_model_container: 12
2023-11-02 18:48:23,888:INFO:_display_container: 2
2023-11-02 18:48:23,888:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 18:48:23,888:INFO:create_model() successfully completed......................................
2023-11-02 18:48:24,048:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:24,048:INFO:Creating metrics dataframe
2023-11-02 18:48:24,056:INFO:Initializing Random Forest Regressor
2023-11-02 18:48:24,056:INFO:Total runtime is 0.10929228862126669 minutes
2023-11-02 18:48:24,059:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:24,060:INFO:Initializing create_model()
2023-11-02 18:48:24,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:24,060:INFO:Checking exceptions
2023-11-02 18:48:24,060:INFO:Importing libraries
2023-11-02 18:48:24,060:INFO:Copying training dataset
2023-11-02 18:48:24,064:INFO:Defining folds
2023-11-02 18:48:24,064:INFO:Declaring metric variables
2023-11-02 18:48:24,067:INFO:Importing untrained model
2023-11-02 18:48:24,072:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:48:24,077:INFO:Starting cross validation
2023-11-02 18:48:24,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:30,149:INFO:Calculating mean and std
2023-11-02 18:48:30,150:INFO:Creating metrics dataframe
2023-11-02 18:48:30,152:INFO:Uploading results into container
2023-11-02 18:48:30,153:INFO:Uploading model into container now
2023-11-02 18:48:30,153:INFO:_master_model_container: 13
2023-11-02 18:48:30,153:INFO:_display_container: 2
2023-11-02 18:48:30,154:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:48:30,154:INFO:create_model() successfully completed......................................
2023-11-02 18:48:30,317:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:30,317:INFO:Creating metrics dataframe
2023-11-02 18:48:30,326:INFO:Initializing Extra Trees Regressor
2023-11-02 18:48:30,326:INFO:Total runtime is 0.2137817978858948 minutes
2023-11-02 18:48:30,328:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:30,329:INFO:Initializing create_model()
2023-11-02 18:48:30,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:30,329:INFO:Checking exceptions
2023-11-02 18:48:30,329:INFO:Importing libraries
2023-11-02 18:48:30,329:INFO:Copying training dataset
2023-11-02 18:48:30,364:INFO:Defining folds
2023-11-02 18:48:30,364:INFO:Declaring metric variables
2023-11-02 18:48:30,369:INFO:Importing untrained model
2023-11-02 18:48:30,373:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:48:30,410:INFO:Starting cross validation
2023-11-02 18:48:30,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:33,505:INFO:Calculating mean and std
2023-11-02 18:48:33,506:INFO:Creating metrics dataframe
2023-11-02 18:48:33,508:INFO:Uploading results into container
2023-11-02 18:48:33,509:INFO:Uploading model into container now
2023-11-02 18:48:33,509:INFO:_master_model_container: 14
2023-11-02 18:48:33,509:INFO:_display_container: 2
2023-11-02 18:48:33,510:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:48:33,510:INFO:create_model() successfully completed......................................
2023-11-02 18:48:33,669:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:33,669:INFO:Creating metrics dataframe
2023-11-02 18:48:33,679:INFO:Initializing AdaBoost Regressor
2023-11-02 18:48:33,679:INFO:Total runtime is 0.26966029802958175 minutes
2023-11-02 18:48:33,681:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:33,682:INFO:Initializing create_model()
2023-11-02 18:48:33,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:33,682:INFO:Checking exceptions
2023-11-02 18:48:33,682:INFO:Importing libraries
2023-11-02 18:48:33,682:INFO:Copying training dataset
2023-11-02 18:48:33,686:INFO:Defining folds
2023-11-02 18:48:33,687:INFO:Declaring metric variables
2023-11-02 18:48:33,690:INFO:Importing untrained model
2023-11-02 18:48:33,693:INFO:AdaBoost Regressor Imported successfully
2023-11-02 18:48:33,700:INFO:Starting cross validation
2023-11-02 18:48:33,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:34,901:INFO:Calculating mean and std
2023-11-02 18:48:34,902:INFO:Creating metrics dataframe
2023-11-02 18:48:34,903:INFO:Uploading results into container
2023-11-02 18:48:34,903:INFO:Uploading model into container now
2023-11-02 18:48:34,903:INFO:_master_model_container: 15
2023-11-02 18:48:34,903:INFO:_display_container: 2
2023-11-02 18:48:34,904:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 18:48:34,904:INFO:create_model() successfully completed......................................
2023-11-02 18:48:35,064:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:35,065:INFO:Creating metrics dataframe
2023-11-02 18:48:35,074:INFO:Initializing Gradient Boosting Regressor
2023-11-02 18:48:35,074:INFO:Total runtime is 0.2929257392883301 minutes
2023-11-02 18:48:35,077:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:35,079:INFO:Initializing create_model()
2023-11-02 18:48:35,079:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:35,079:INFO:Checking exceptions
2023-11-02 18:48:35,079:INFO:Importing libraries
2023-11-02 18:48:35,079:INFO:Copying training dataset
2023-11-02 18:48:35,085:INFO:Defining folds
2023-11-02 18:48:35,085:INFO:Declaring metric variables
2023-11-02 18:48:35,087:INFO:Importing untrained model
2023-11-02 18:48:35,090:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 18:48:35,099:INFO:Starting cross validation
2023-11-02 18:48:35,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:37,398:INFO:Calculating mean and std
2023-11-02 18:48:37,399:INFO:Creating metrics dataframe
2023-11-02 18:48:37,401:INFO:Uploading results into container
2023-11-02 18:48:37,402:INFO:Uploading model into container now
2023-11-02 18:48:37,402:INFO:_master_model_container: 16
2023-11-02 18:48:37,402:INFO:_display_container: 2
2023-11-02 18:48:37,402:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 18:48:37,402:INFO:create_model() successfully completed......................................
2023-11-02 18:48:37,569:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:37,569:INFO:Creating metrics dataframe
2023-11-02 18:48:37,578:INFO:Initializing Extreme Gradient Boosting
2023-11-02 18:48:37,578:INFO:Total runtime is 0.3346544623374939 minutes
2023-11-02 18:48:37,582:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:37,583:INFO:Initializing create_model()
2023-11-02 18:48:37,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:37,583:INFO:Checking exceptions
2023-11-02 18:48:37,583:INFO:Importing libraries
2023-11-02 18:48:37,583:INFO:Copying training dataset
2023-11-02 18:48:37,587:INFO:Defining folds
2023-11-02 18:48:37,587:INFO:Declaring metric variables
2023-11-02 18:48:37,589:INFO:Importing untrained model
2023-11-02 18:48:37,592:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:48:37,597:INFO:Starting cross validation
2023-11-02 18:48:37,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:38,194:INFO:Calculating mean and std
2023-11-02 18:48:38,195:INFO:Creating metrics dataframe
2023-11-02 18:48:38,198:INFO:Uploading results into container
2023-11-02 18:48:38,199:INFO:Uploading model into container now
2023-11-02 18:48:38,200:INFO:_master_model_container: 17
2023-11-02 18:48:38,200:INFO:_display_container: 2
2023-11-02 18:48:38,200:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:48:38,201:INFO:create_model() successfully completed......................................
2023-11-02 18:48:38,386:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:38,386:INFO:Creating metrics dataframe
2023-11-02 18:48:38,395:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 18:48:38,396:INFO:Total runtime is 0.3482845107714335 minutes
2023-11-02 18:48:38,400:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:38,401:INFO:Initializing create_model()
2023-11-02 18:48:38,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:38,401:INFO:Checking exceptions
2023-11-02 18:48:38,401:INFO:Importing libraries
2023-11-02 18:48:38,401:INFO:Copying training dataset
2023-11-02 18:48:38,405:INFO:Defining folds
2023-11-02 18:48:38,405:INFO:Declaring metric variables
2023-11-02 18:48:38,408:INFO:Importing untrained model
2023-11-02 18:48:38,413:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:48:38,422:INFO:Starting cross validation
2023-11-02 18:48:38,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:39,257:INFO:Calculating mean and std
2023-11-02 18:48:39,259:INFO:Creating metrics dataframe
2023-11-02 18:48:39,262:INFO:Uploading results into container
2023-11-02 18:48:39,263:INFO:Uploading model into container now
2023-11-02 18:48:39,263:INFO:_master_model_container: 18
2023-11-02 18:48:39,263:INFO:_display_container: 2
2023-11-02 18:48:39,264:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:48:39,264:INFO:create_model() successfully completed......................................
2023-11-02 18:48:39,487:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:39,488:INFO:Creating metrics dataframe
2023-11-02 18:48:39,499:INFO:Initializing Dummy Regressor
2023-11-02 18:48:39,499:INFO:Total runtime is 0.366663118203481 minutes
2023-11-02 18:48:39,503:INFO:SubProcess create_model() called ==================================
2023-11-02 18:48:39,503:INFO:Initializing create_model()
2023-11-02 18:48:39,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BFEFE9810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:39,503:INFO:Checking exceptions
2023-11-02 18:48:39,503:INFO:Importing libraries
2023-11-02 18:48:39,504:INFO:Copying training dataset
2023-11-02 18:48:39,506:INFO:Defining folds
2023-11-02 18:48:39,507:INFO:Declaring metric variables
2023-11-02 18:48:39,509:INFO:Importing untrained model
2023-11-02 18:48:39,511:INFO:Dummy Regressor Imported successfully
2023-11-02 18:48:39,518:INFO:Starting cross validation
2023-11-02 18:48:39,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:48:39,770:INFO:Calculating mean and std
2023-11-02 18:48:39,771:INFO:Creating metrics dataframe
2023-11-02 18:48:39,773:INFO:Uploading results into container
2023-11-02 18:48:39,774:INFO:Uploading model into container now
2023-11-02 18:48:39,774:INFO:_master_model_container: 19
2023-11-02 18:48:39,774:INFO:_display_container: 2
2023-11-02 18:48:39,774:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 18:48:39,775:INFO:create_model() successfully completed......................................
2023-11-02 18:48:39,935:INFO:SubProcess create_model() end ==================================
2023-11-02 18:48:39,935:INFO:Creating metrics dataframe
2023-11-02 18:48:39,954:INFO:Initializing create_model()
2023-11-02 18:48:39,954:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:39,954:INFO:Checking exceptions
2023-11-02 18:48:39,956:INFO:Importing libraries
2023-11-02 18:48:39,956:INFO:Copying training dataset
2023-11-02 18:48:39,959:INFO:Defining folds
2023-11-02 18:48:39,959:INFO:Declaring metric variables
2023-11-02 18:48:39,959:INFO:Importing untrained model
2023-11-02 18:48:39,959:INFO:Declaring custom model
2023-11-02 18:48:39,960:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:48:39,961:INFO:Cross validation set to False
2023-11-02 18:48:39,961:INFO:Fitting Model
2023-11-02 18:48:40,096:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:48:40,096:INFO:create_model() successfully completed......................................
2023-11-02 18:48:40,293:INFO:Initializing create_model()
2023-11-02 18:48:40,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:40,293:INFO:Checking exceptions
2023-11-02 18:48:40,295:INFO:Importing libraries
2023-11-02 18:48:40,295:INFO:Copying training dataset
2023-11-02 18:48:40,299:INFO:Defining folds
2023-11-02 18:48:40,299:INFO:Declaring metric variables
2023-11-02 18:48:40,299:INFO:Importing untrained model
2023-11-02 18:48:40,299:INFO:Declaring custom model
2023-11-02 18:48:40,300:INFO:Extra Trees Regressor Imported successfully
2023-11-02 18:48:40,302:INFO:Cross validation set to False
2023-11-02 18:48:40,302:INFO:Fitting Model
2023-11-02 18:48:40,689:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 18:48:40,689:INFO:create_model() successfully completed......................................
2023-11-02 18:48:40,853:INFO:Initializing create_model()
2023-11-02 18:48:40,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:40,854:INFO:Checking exceptions
2023-11-02 18:48:40,856:INFO:Importing libraries
2023-11-02 18:48:40,856:INFO:Copying training dataset
2023-11-02 18:48:40,859:INFO:Defining folds
2023-11-02 18:48:40,859:INFO:Declaring metric variables
2023-11-02 18:48:40,859:INFO:Importing untrained model
2023-11-02 18:48:40,859:INFO:Declaring custom model
2023-11-02 18:48:40,859:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 18:48:40,860:INFO:Cross validation set to False
2023-11-02 18:48:40,860:INFO:Fitting Model
2023-11-02 18:48:40,912:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 18:48:40,912:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000125 seconds.
2023-11-02 18:48:40,913:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 18:48:40,913:INFO:[LightGBM] [Info] Total Bins 800
2023-11-02 18:48:40,913:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 19
2023-11-02 18:48:40,913:INFO:[LightGBM] [Info] Start training from score 1.029560
2023-11-02 18:48:40,968:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 18:48:40,968:INFO:create_model() successfully completed......................................
2023-11-02 18:48:41,155:INFO:Initializing create_model()
2023-11-02 18:48:41,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:41,155:INFO:Checking exceptions
2023-11-02 18:48:41,157:INFO:Importing libraries
2023-11-02 18:48:41,157:INFO:Copying training dataset
2023-11-02 18:48:41,162:INFO:Defining folds
2023-11-02 18:48:41,162:INFO:Declaring metric variables
2023-11-02 18:48:41,163:INFO:Importing untrained model
2023-11-02 18:48:41,163:INFO:Declaring custom model
2023-11-02 18:48:41,163:INFO:Random Forest Regressor Imported successfully
2023-11-02 18:48:41,164:INFO:Cross validation set to False
2023-11-02 18:48:41,164:INFO:Fitting Model
2023-11-02 18:48:41,935:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 18:48:41,936:INFO:create_model() successfully completed......................................
2023-11-02 18:48:42,096:INFO:Initializing create_model()
2023-11-02 18:48:42,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:48:42,096:INFO:Checking exceptions
2023-11-02 18:48:42,098:INFO:Importing libraries
2023-11-02 18:48:42,098:INFO:Copying training dataset
2023-11-02 18:48:42,102:INFO:Defining folds
2023-11-02 18:48:42,103:INFO:Declaring metric variables
2023-11-02 18:48:42,103:INFO:Importing untrained model
2023-11-02 18:48:42,103:INFO:Declaring custom model
2023-11-02 18:48:42,103:INFO:Linear Regression Imported successfully
2023-11-02 18:48:42,104:INFO:Cross validation set to False
2023-11-02 18:48:42,104:INFO:Fitting Model
2023-11-02 18:48:42,166:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 18:48:42,166:INFO:create_model() successfully completed......................................
2023-11-02 18:48:42,354:INFO:_master_model_container: 19
2023-11-02 18:48:42,354:INFO:_display_container: 2
2023-11-02 18:48:42,356:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)]
2023-11-02 18:48:42,356:INFO:compare_models() successfully completed......................................
2023-11-02 18:48:42,400:INFO:Initializing evaluate_model()
2023-11-02 18:48:42,400:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 18:48:42,409:INFO:Initializing plot_model()
2023-11-02 18:48:42,409:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, system=True)
2023-11-02 18:48:42,409:INFO:Checking exceptions
2023-11-02 18:48:42,411:INFO:Preloading libraries
2023-11-02 18:48:42,419:INFO:Copying training dataset
2023-11-02 18:48:42,419:INFO:Plot type: pipeline
2023-11-02 18:48:42,583:INFO:Visual Rendered Successfully
2023-11-02 18:48:42,755:INFO:plot_model() successfully completed......................................
2023-11-02 18:48:42,830:INFO:Initializing tune_model()
2023-11-02 18:48:42,830:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>)
2023-11-02 18:48:42,830:INFO:Checking exceptions
2023-11-02 18:48:42,849:INFO:Copying training dataset
2023-11-02 18:48:42,856:INFO:Checking base model
2023-11-02 18:48:42,856:INFO:Base model : Extreme Gradient Boosting
2023-11-02 18:48:42,859:INFO:Declaring metric variables
2023-11-02 18:48:42,862:INFO:Defining Hyperparameters
2023-11-02 18:48:43,273:INFO:Tuning with n_jobs=-1
2023-11-02 18:48:43,273:INFO:Initializing RandomizedSearchCV
2023-11-02 18:49:04,183:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 18:49:04,185:INFO:Hyperparameter search completed
2023-11-02 18:49:04,185:INFO:SubProcess create_model() called ==================================
2023-11-02 18:49:04,188:INFO:Initializing create_model()
2023-11-02 18:49:04,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9971CB20>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 18:49:04,189:INFO:Checking exceptions
2023-11-02 18:49:04,189:INFO:Importing libraries
2023-11-02 18:49:04,189:INFO:Copying training dataset
2023-11-02 18:49:04,195:INFO:Defining folds
2023-11-02 18:49:04,195:INFO:Declaring metric variables
2023-11-02 18:49:04,198:INFO:Importing untrained model
2023-11-02 18:49:04,198:INFO:Declaring custom model
2023-11-02 18:49:04,205:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:49:04,212:INFO:Starting cross validation
2023-11-02 18:49:04,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:49:07,175:INFO:Calculating mean and std
2023-11-02 18:49:07,176:INFO:Creating metrics dataframe
2023-11-02 18:49:07,182:INFO:Finalizing model
2023-11-02 18:49:07,733:INFO:Uploading results into container
2023-11-02 18:49:07,734:INFO:Uploading model into container now
2023-11-02 18:49:07,735:INFO:_master_model_container: 20
2023-11-02 18:49:07,735:INFO:_display_container: 3
2023-11-02 18:49:07,736:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:49:07,736:INFO:create_model() successfully completed......................................
2023-11-02 18:49:08,018:INFO:SubProcess create_model() end ==================================
2023-11-02 18:49:08,018:INFO:choose_better activated
2023-11-02 18:49:08,030:INFO:SubProcess create_model() called ==================================
2023-11-02 18:49:08,034:INFO:Initializing create_model()
2023-11-02 18:49:08,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 18:49:08,035:INFO:Checking exceptions
2023-11-02 18:49:08,038:INFO:Importing libraries
2023-11-02 18:49:08,038:INFO:Copying training dataset
2023-11-02 18:49:08,047:INFO:Defining folds
2023-11-02 18:49:08,047:INFO:Declaring metric variables
2023-11-02 18:49:08,047:INFO:Importing untrained model
2023-11-02 18:49:08,047:INFO:Declaring custom model
2023-11-02 18:49:08,048:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 18:49:08,049:INFO:Starting cross validation
2023-11-02 18:49:08,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 18:49:09,112:INFO:Calculating mean and std
2023-11-02 18:49:09,112:INFO:Creating metrics dataframe
2023-11-02 18:49:09,114:INFO:Finalizing model
2023-11-02 18:49:09,317:INFO:Uploading results into container
2023-11-02 18:49:09,318:INFO:Uploading model into container now
2023-11-02 18:49:09,319:INFO:_master_model_container: 21
2023-11-02 18:49:09,319:INFO:_display_container: 4
2023-11-02 18:49:09,320:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:49:09,320:INFO:create_model() successfully completed......................................
2023-11-02 18:49:09,619:INFO:SubProcess create_model() end ==================================
2023-11-02 18:49:09,621:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.982
2023-11-02 18:49:09,622:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9823
2023-11-02 18:49:09,622:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 18:49:09,623:INFO:choose_better completed
2023-11-02 18:49:09,632:INFO:_master_model_container: 21
2023-11-02 18:49:09,632:INFO:_display_container: 3
2023-11-02 18:49:09,633:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 18:49:09,633:INFO:tune_model() successfully completed......................................
2023-11-02 18:49:09,832:INFO:Initializing plot_model()
2023-11-02 18:49:09,832:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, system=True)
2023-11-02 18:49:09,832:INFO:Checking exceptions
2023-11-02 18:49:09,834:INFO:Preloading libraries
2023-11-02 18:49:09,840:INFO:Copying training dataset
2023-11-02 18:49:09,841:INFO:Plot type: feature_all
2023-11-02 18:49:09,920:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 18:49:10,149:INFO:Visual Rendered Successfully
2023-11-02 18:49:10,478:INFO:plot_model() successfully completed......................................
2023-11-02 18:50:27,956:INFO:Initializing predict_model()
2023-11-02 18:50:27,956:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022B988A5990>)
2023-11-02 18:50:27,957:INFO:Checking exceptions
2023-11-02 18:50:27,957:INFO:Preloading libraries
2023-11-02 18:50:27,961:INFO:Set up data.
2023-11-02 18:50:27,968:INFO:Set up index.
2023-11-02 18:52:46,414:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\347709500.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes', 'log_yield'], axis=1, inplace =True)

2023-11-02 18:52:58,539:INFO:Initializing predict_model()
2023-11-02 18:52:58,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9971CC40>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022B988A7250>)
2023-11-02 18:52:58,539:INFO:Checking exceptions
2023-11-02 18:52:58,539:INFO:Preloading libraries
2023-11-02 18:52:58,541:INFO:Set up data.
2023-11-02 18:52:58,545:INFO:Set up index.
2023-11-02 19:02:06,131:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\771160942.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data = prediction_data_raw.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes', 'log_yield'], axis=1, inplace =True)

2023-11-02 19:02:22,273:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\920458111.py:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=df_analysis, x='Actual Values', y='Predicted Values', palette='colorblind')

2023-11-02 19:03:46,553:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\302637815.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes'], axis=1, inplace =True)

2023-11-02 19:03:46,555:INFO:PyCaret RegressionExperiment
2023-11-02 19:03:46,555:INFO:Logging name: reg-default-name
2023-11-02 19:03:46,555:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:03:46,555:INFO:version 3.1.0
2023-11-02 19:03:46,555:INFO:Initializing setup()
2023-11-02 19:03:46,555:INFO:self.USI: c2bb
2023-11-02 19:03:46,555:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:03:46,556:INFO:Checking environment
2023-11-02 19:03:46,556:INFO:python_version: 3.10.2
2023-11-02 19:03:46,556:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:03:46,556:INFO:machine: AMD64
2023-11-02 19:03:46,556:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:03:46,560:INFO:Memory: svmem(total=16952647680, available=4911460352, percent=71.0, used=12041187328, free=4911460352)
2023-11-02 19:03:46,560:INFO:Physical Core: 4
2023-11-02 19:03:46,560:INFO:Logical Core: 8
2023-11-02 19:03:46,560:INFO:Checking libraries
2023-11-02 19:03:46,561:INFO:System:
2023-11-02 19:03:46,561:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:03:46,561:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:03:46,561:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:03:46,561:INFO:PyCaret required dependencies:
2023-11-02 19:03:46,561:INFO:                 pip: 23.0.1
2023-11-02 19:03:46,561:INFO:          setuptools: 65.5.0
2023-11-02 19:03:46,561:INFO:             pycaret: 3.1.0
2023-11-02 19:03:46,561:INFO:             IPython: 8.15.0
2023-11-02 19:03:46,561:INFO:          ipywidgets: 8.1.1
2023-11-02 19:03:46,561:INFO:                tqdm: 4.66.1
2023-11-02 19:03:46,561:INFO:               numpy: 1.23.5
2023-11-02 19:03:46,561:INFO:              pandas: 1.5.3
2023-11-02 19:03:46,561:INFO:              jinja2: 3.1.2
2023-11-02 19:03:46,561:INFO:               scipy: 1.10.1
2023-11-02 19:03:46,561:INFO:              joblib: 1.3.2
2023-11-02 19:03:46,561:INFO:             sklearn: 1.2.2
2023-11-02 19:03:46,561:INFO:                pyod: 1.1.0
2023-11-02 19:03:46,561:INFO:            imblearn: 0.11.0
2023-11-02 19:03:46,561:INFO:   category_encoders: 2.6.2
2023-11-02 19:03:46,561:INFO:            lightgbm: 4.1.0
2023-11-02 19:03:46,561:INFO:               numba: 0.58.0
2023-11-02 19:03:46,561:INFO:            requests: 2.31.0
2023-11-02 19:03:46,561:INFO:          matplotlib: 3.8.0
2023-11-02 19:03:46,561:INFO:          scikitplot: 0.3.7
2023-11-02 19:03:46,561:INFO:         yellowbrick: 1.5
2023-11-02 19:03:46,561:INFO:              plotly: 5.17.0
2023-11-02 19:03:46,561:INFO:    plotly-resampler: Not installed
2023-11-02 19:03:46,562:INFO:             kaleido: 0.2.1
2023-11-02 19:03:46,562:INFO:           schemdraw: 0.15
2023-11-02 19:03:46,562:INFO:         statsmodels: 0.14.0
2023-11-02 19:03:46,562:INFO:              sktime: 0.21.1
2023-11-02 19:03:46,562:INFO:               tbats: 1.1.3
2023-11-02 19:03:46,562:INFO:            pmdarima: 2.0.3
2023-11-02 19:03:46,562:INFO:              psutil: 5.9.5
2023-11-02 19:03:46,562:INFO:          markupsafe: 2.1.3
2023-11-02 19:03:46,562:INFO:             pickle5: Not installed
2023-11-02 19:03:46,562:INFO:         cloudpickle: 2.2.1
2023-11-02 19:03:46,562:INFO:         deprecation: 2.1.0
2023-11-02 19:03:46,562:INFO:              xxhash: 3.3.0
2023-11-02 19:03:46,562:INFO:           wurlitzer: Not installed
2023-11-02 19:03:46,562:INFO:PyCaret optional dependencies:
2023-11-02 19:03:46,562:INFO:                shap: Not installed
2023-11-02 19:03:46,562:INFO:           interpret: Not installed
2023-11-02 19:03:46,562:INFO:                umap: Not installed
2023-11-02 19:03:46,562:INFO:     ydata_profiling: Not installed
2023-11-02 19:03:46,562:INFO:  explainerdashboard: Not installed
2023-11-02 19:03:46,562:INFO:             autoviz: Not installed
2023-11-02 19:03:46,562:INFO:           fairlearn: Not installed
2023-11-02 19:03:46,562:INFO:          deepchecks: Not installed
2023-11-02 19:03:46,562:INFO:             xgboost: 2.0.0
2023-11-02 19:03:46,562:INFO:            catboost: Not installed
2023-11-02 19:03:46,562:INFO:              kmodes: Not installed
2023-11-02 19:03:46,562:INFO:             mlxtend: Not installed
2023-11-02 19:03:46,562:INFO:       statsforecast: Not installed
2023-11-02 19:03:46,563:INFO:        tune_sklearn: Not installed
2023-11-02 19:03:46,563:INFO:                 ray: Not installed
2023-11-02 19:03:46,563:INFO:            hyperopt: Not installed
2023-11-02 19:03:46,563:INFO:              optuna: Not installed
2023-11-02 19:03:46,563:INFO:               skopt: Not installed
2023-11-02 19:03:46,563:INFO:              mlflow: Not installed
2023-11-02 19:03:46,563:INFO:              gradio: Not installed
2023-11-02 19:03:46,563:INFO:             fastapi: Not installed
2023-11-02 19:03:46,563:INFO:             uvicorn: Not installed
2023-11-02 19:03:46,563:INFO:              m2cgen: Not installed
2023-11-02 19:03:46,563:INFO:           evidently: Not installed
2023-11-02 19:03:46,563:INFO:               fugue: Not installed
2023-11-02 19:03:46,563:INFO:           streamlit: Not installed
2023-11-02 19:03:46,563:INFO:             prophet: Not installed
2023-11-02 19:03:46,563:INFO:None
2023-11-02 19:03:46,563:INFO:Set up data.
2023-11-02 19:03:46,569:INFO:Set up folding strategy.
2023-11-02 19:03:46,569:INFO:Set up train/test split.
2023-11-02 19:03:46,572:INFO:Set up index.
2023-11-02 19:03:46,572:INFO:Assigning column types.
2023-11-02 19:03:46,574:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:03:46,575:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,579:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,670:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:46,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:46,671:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,675:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,755:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:46,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:46,758:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:03:46,760:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,765:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,841:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:46,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:46,847:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,850:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,923:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:46,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:46,925:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:03:46,933:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:46,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,007:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,016:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,094:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,099:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:03:47,169:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,214:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,303:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,305:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:03:47,352:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,385:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:03:47,468:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,470:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:03:47,551:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,646:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:47,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:47,651:INFO:Preparing preprocessing pipeline...
2023-11-02 19:03:47,651:INFO:Set up simple imputation.
2023-11-02 19:03:47,654:INFO:Set up encoding of categorical features.
2023-11-02 19:03:47,739:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:03:47,743:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:03:47,743:INFO:Creating final display dataframe.
2023-11-02 19:03:47,957:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 6)
4        Transformed data shape       (12384, 17)
5   Transformed train set shape        (8668, 17)
6    Transformed test set shape        (3716, 17)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              c2bb
2023-11-02 19:03:48,053:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:48,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:48,139:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:03:48,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:03:48,141:INFO:setup() successfully completed in 1.59s...............
2023-11-02 19:03:48,162:INFO:Initializing compare_models()
2023-11-02 19:03:48,162:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:03:48,163:INFO:Checking exceptions
2023-11-02 19:03:48,167:INFO:Preparing display monitor
2023-11-02 19:03:48,186:INFO:Initializing Linear Regression
2023-11-02 19:03:48,186:INFO:Total runtime is 0.0 minutes
2023-11-02 19:03:48,188:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:48,189:INFO:Initializing create_model()
2023-11-02 19:03:48,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:48,189:INFO:Checking exceptions
2023-11-02 19:03:48,189:INFO:Importing libraries
2023-11-02 19:03:48,189:INFO:Copying training dataset
2023-11-02 19:03:48,194:INFO:Defining folds
2023-11-02 19:03:48,195:INFO:Declaring metric variables
2023-11-02 19:03:48,200:INFO:Importing untrained model
2023-11-02 19:03:48,204:INFO:Linear Regression Imported successfully
2023-11-02 19:03:48,210:INFO:Starting cross validation
2023-11-02 19:03:48,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:52,758:INFO:Calculating mean and std
2023-11-02 19:03:52,759:INFO:Creating metrics dataframe
2023-11-02 19:03:52,763:INFO:Uploading results into container
2023-11-02 19:03:52,763:INFO:Uploading model into container now
2023-11-02 19:03:52,764:INFO:_master_model_container: 1
2023-11-02 19:03:52,765:INFO:_display_container: 2
2023-11-02 19:03:52,765:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:03:52,765:INFO:create_model() successfully completed......................................
2023-11-02 19:03:52,957:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:52,957:INFO:Creating metrics dataframe
2023-11-02 19:03:52,963:INFO:Initializing Lasso Regression
2023-11-02 19:03:52,964:INFO:Total runtime is 0.07963231007258097 minutes
2023-11-02 19:03:52,966:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:52,967:INFO:Initializing create_model()
2023-11-02 19:03:52,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:52,967:INFO:Checking exceptions
2023-11-02 19:03:52,967:INFO:Importing libraries
2023-11-02 19:03:52,967:INFO:Copying training dataset
2023-11-02 19:03:52,973:INFO:Defining folds
2023-11-02 19:03:52,974:INFO:Declaring metric variables
2023-11-02 19:03:52,977:INFO:Importing untrained model
2023-11-02 19:03:52,979:INFO:Lasso Regression Imported successfully
2023-11-02 19:03:52,987:INFO:Starting cross validation
2023-11-02 19:03:52,988:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:53,232:INFO:Calculating mean and std
2023-11-02 19:03:53,232:INFO:Creating metrics dataframe
2023-11-02 19:03:53,236:INFO:Uploading results into container
2023-11-02 19:03:53,237:INFO:Uploading model into container now
2023-11-02 19:03:53,237:INFO:_master_model_container: 2
2023-11-02 19:03:53,237:INFO:_display_container: 2
2023-11-02 19:03:53,237:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:03:53,238:INFO:create_model() successfully completed......................................
2023-11-02 19:03:53,404:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:53,405:INFO:Creating metrics dataframe
2023-11-02 19:03:53,411:INFO:Initializing Ridge Regression
2023-11-02 19:03:53,411:INFO:Total runtime is 0.08707597653071085 minutes
2023-11-02 19:03:53,414:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:53,414:INFO:Initializing create_model()
2023-11-02 19:03:53,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:53,414:INFO:Checking exceptions
2023-11-02 19:03:53,414:INFO:Importing libraries
2023-11-02 19:03:53,414:INFO:Copying training dataset
2023-11-02 19:03:53,421:INFO:Defining folds
2023-11-02 19:03:53,421:INFO:Declaring metric variables
2023-11-02 19:03:53,424:INFO:Importing untrained model
2023-11-02 19:03:53,426:INFO:Ridge Regression Imported successfully
2023-11-02 19:03:53,431:INFO:Starting cross validation
2023-11-02 19:03:53,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:53,662:INFO:Calculating mean and std
2023-11-02 19:03:53,663:INFO:Creating metrics dataframe
2023-11-02 19:03:53,665:INFO:Uploading results into container
2023-11-02 19:03:53,665:INFO:Uploading model into container now
2023-11-02 19:03:53,665:INFO:_master_model_container: 3
2023-11-02 19:03:53,665:INFO:_display_container: 2
2023-11-02 19:03:53,665:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:03:53,666:INFO:create_model() successfully completed......................................
2023-11-02 19:03:53,834:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:53,834:INFO:Creating metrics dataframe
2023-11-02 19:03:53,842:INFO:Initializing Elastic Net
2023-11-02 19:03:53,842:INFO:Total runtime is 0.09426550070444742 minutes
2023-11-02 19:03:53,846:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:53,846:INFO:Initializing create_model()
2023-11-02 19:03:53,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:53,846:INFO:Checking exceptions
2023-11-02 19:03:53,846:INFO:Importing libraries
2023-11-02 19:03:53,846:INFO:Copying training dataset
2023-11-02 19:03:53,850:INFO:Defining folds
2023-11-02 19:03:53,851:INFO:Declaring metric variables
2023-11-02 19:03:53,856:INFO:Importing untrained model
2023-11-02 19:03:53,859:INFO:Elastic Net Imported successfully
2023-11-02 19:03:53,864:INFO:Starting cross validation
2023-11-02 19:03:53,865:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:54,096:INFO:Calculating mean and std
2023-11-02 19:03:54,097:INFO:Creating metrics dataframe
2023-11-02 19:03:54,099:INFO:Uploading results into container
2023-11-02 19:03:54,099:INFO:Uploading model into container now
2023-11-02 19:03:54,100:INFO:_master_model_container: 4
2023-11-02 19:03:54,100:INFO:_display_container: 2
2023-11-02 19:03:54,100:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:03:54,100:INFO:create_model() successfully completed......................................
2023-11-02 19:03:54,267:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:54,268:INFO:Creating metrics dataframe
2023-11-02 19:03:54,277:INFO:Initializing Least Angle Regression
2023-11-02 19:03:54,277:INFO:Total runtime is 0.10151057243347167 minutes
2023-11-02 19:03:54,280:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:54,280:INFO:Initializing create_model()
2023-11-02 19:03:54,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:54,280:INFO:Checking exceptions
2023-11-02 19:03:54,280:INFO:Importing libraries
2023-11-02 19:03:54,280:INFO:Copying training dataset
2023-11-02 19:03:54,286:INFO:Defining folds
2023-11-02 19:03:54,287:INFO:Declaring metric variables
2023-11-02 19:03:54,291:INFO:Importing untrained model
2023-11-02 19:03:54,293:INFO:Least Angle Regression Imported successfully
2023-11-02 19:03:54,298:INFO:Starting cross validation
2023-11-02 19:03:54,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:54,541:INFO:Calculating mean and std
2023-11-02 19:03:54,542:INFO:Creating metrics dataframe
2023-11-02 19:03:54,544:INFO:Uploading results into container
2023-11-02 19:03:54,544:INFO:Uploading model into container now
2023-11-02 19:03:54,544:INFO:_master_model_container: 5
2023-11-02 19:03:54,545:INFO:_display_container: 2
2023-11-02 19:03:54,545:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:03:54,545:INFO:create_model() successfully completed......................................
2023-11-02 19:03:54,714:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:54,714:INFO:Creating metrics dataframe
2023-11-02 19:03:54,724:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:03:54,725:INFO:Total runtime is 0.10897991259892781 minutes
2023-11-02 19:03:54,728:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:54,728:INFO:Initializing create_model()
2023-11-02 19:03:54,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:54,729:INFO:Checking exceptions
2023-11-02 19:03:54,729:INFO:Importing libraries
2023-11-02 19:03:54,729:INFO:Copying training dataset
2023-11-02 19:03:54,732:INFO:Defining folds
2023-11-02 19:03:54,733:INFO:Declaring metric variables
2023-11-02 19:03:54,736:INFO:Importing untrained model
2023-11-02 19:03:54,741:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:03:54,745:INFO:Starting cross validation
2023-11-02 19:03:54,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:55,058:INFO:Calculating mean and std
2023-11-02 19:03:55,059:INFO:Creating metrics dataframe
2023-11-02 19:03:55,062:INFO:Uploading results into container
2023-11-02 19:03:55,062:INFO:Uploading model into container now
2023-11-02 19:03:55,062:INFO:_master_model_container: 6
2023-11-02 19:03:55,062:INFO:_display_container: 2
2023-11-02 19:03:55,063:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:03:55,063:INFO:create_model() successfully completed......................................
2023-11-02 19:03:55,295:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:55,295:INFO:Creating metrics dataframe
2023-11-02 19:03:55,303:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:03:55,304:INFO:Total runtime is 0.1186256488164266 minutes
2023-11-02 19:03:55,310:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:55,310:INFO:Initializing create_model()
2023-11-02 19:03:55,310:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:55,310:INFO:Checking exceptions
2023-11-02 19:03:55,310:INFO:Importing libraries
2023-11-02 19:03:55,310:INFO:Copying training dataset
2023-11-02 19:03:55,315:INFO:Defining folds
2023-11-02 19:03:55,316:INFO:Declaring metric variables
2023-11-02 19:03:55,319:INFO:Importing untrained model
2023-11-02 19:03:55,326:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:03:55,331:INFO:Starting cross validation
2023-11-02 19:03:55,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:55,624:INFO:Calculating mean and std
2023-11-02 19:03:55,625:INFO:Creating metrics dataframe
2023-11-02 19:03:55,628:INFO:Uploading results into container
2023-11-02 19:03:55,629:INFO:Uploading model into container now
2023-11-02 19:03:55,629:INFO:_master_model_container: 7
2023-11-02 19:03:55,629:INFO:_display_container: 2
2023-11-02 19:03:55,630:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:03:55,630:INFO:create_model() successfully completed......................................
2023-11-02 19:03:55,856:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:55,856:INFO:Creating metrics dataframe
2023-11-02 19:03:55,865:INFO:Initializing Bayesian Ridge
2023-11-02 19:03:55,865:INFO:Total runtime is 0.12798172235488892 minutes
2023-11-02 19:03:55,868:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:55,869:INFO:Initializing create_model()
2023-11-02 19:03:55,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:55,869:INFO:Checking exceptions
2023-11-02 19:03:55,869:INFO:Importing libraries
2023-11-02 19:03:55,869:INFO:Copying training dataset
2023-11-02 19:03:55,877:INFO:Defining folds
2023-11-02 19:03:55,877:INFO:Declaring metric variables
2023-11-02 19:03:55,879:INFO:Importing untrained model
2023-11-02 19:03:55,883:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:03:55,892:INFO:Starting cross validation
2023-11-02 19:03:55,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:56,239:INFO:Calculating mean and std
2023-11-02 19:03:56,241:INFO:Creating metrics dataframe
2023-11-02 19:03:56,244:INFO:Uploading results into container
2023-11-02 19:03:56,245:INFO:Uploading model into container now
2023-11-02 19:03:56,245:INFO:_master_model_container: 8
2023-11-02 19:03:56,245:INFO:_display_container: 2
2023-11-02 19:03:56,245:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:03:56,246:INFO:create_model() successfully completed......................................
2023-11-02 19:03:56,485:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:56,485:INFO:Creating metrics dataframe
2023-11-02 19:03:56,499:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:03:56,499:INFO:Total runtime is 0.1385536034901937 minutes
2023-11-02 19:03:56,503:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:56,504:INFO:Initializing create_model()
2023-11-02 19:03:56,504:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:56,504:INFO:Checking exceptions
2023-11-02 19:03:56,504:INFO:Importing libraries
2023-11-02 19:03:56,504:INFO:Copying training dataset
2023-11-02 19:03:56,514:INFO:Defining folds
2023-11-02 19:03:56,514:INFO:Declaring metric variables
2023-11-02 19:03:56,517:INFO:Importing untrained model
2023-11-02 19:03:56,525:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:03:56,532:INFO:Starting cross validation
2023-11-02 19:03:56,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:56,853:INFO:Calculating mean and std
2023-11-02 19:03:56,856:INFO:Creating metrics dataframe
2023-11-02 19:03:56,860:INFO:Uploading results into container
2023-11-02 19:03:56,861:INFO:Uploading model into container now
2023-11-02 19:03:56,861:INFO:_master_model_container: 9
2023-11-02 19:03:56,861:INFO:_display_container: 2
2023-11-02 19:03:56,862:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:03:56,862:INFO:create_model() successfully completed......................................
2023-11-02 19:03:57,098:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:57,098:INFO:Creating metrics dataframe
2023-11-02 19:03:57,108:INFO:Initializing Huber Regressor
2023-11-02 19:03:57,108:INFO:Total runtime is 0.14870177507400514 minutes
2023-11-02 19:03:57,111:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:57,112:INFO:Initializing create_model()
2023-11-02 19:03:57,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:57,112:INFO:Checking exceptions
2023-11-02 19:03:57,112:INFO:Importing libraries
2023-11-02 19:03:57,112:INFO:Copying training dataset
2023-11-02 19:03:57,117:INFO:Defining folds
2023-11-02 19:03:57,117:INFO:Declaring metric variables
2023-11-02 19:03:57,121:INFO:Importing untrained model
2023-11-02 19:03:57,128:INFO:Huber Regressor Imported successfully
2023-11-02 19:03:57,132:INFO:Starting cross validation
2023-11-02 19:03:57,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:57,614:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,617:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,633:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,645:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,645:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,648:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,657:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,671:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,903:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,904:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:03:57,937:INFO:Calculating mean and std
2023-11-02 19:03:57,939:INFO:Creating metrics dataframe
2023-11-02 19:03:57,944:INFO:Uploading results into container
2023-11-02 19:03:57,945:INFO:Uploading model into container now
2023-11-02 19:03:57,946:INFO:_master_model_container: 10
2023-11-02 19:03:57,946:INFO:_display_container: 2
2023-11-02 19:03:57,947:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:03:57,947:INFO:create_model() successfully completed......................................
2023-11-02 19:03:58,191:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:58,191:INFO:Creating metrics dataframe
2023-11-02 19:03:58,205:INFO:Initializing K Neighbors Regressor
2023-11-02 19:03:58,205:INFO:Total runtime is 0.16697630484898887 minutes
2023-11-02 19:03:58,210:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:58,211:INFO:Initializing create_model()
2023-11-02 19:03:58,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:58,211:INFO:Checking exceptions
2023-11-02 19:03:58,212:INFO:Importing libraries
2023-11-02 19:03:58,212:INFO:Copying training dataset
2023-11-02 19:03:58,216:INFO:Defining folds
2023-11-02 19:03:58,217:INFO:Declaring metric variables
2023-11-02 19:03:58,220:INFO:Importing untrained model
2023-11-02 19:03:58,226:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:03:58,234:INFO:Starting cross validation
2023-11-02 19:03:58,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:58,730:INFO:Calculating mean and std
2023-11-02 19:03:58,733:INFO:Creating metrics dataframe
2023-11-02 19:03:58,742:INFO:Uploading results into container
2023-11-02 19:03:58,743:INFO:Uploading model into container now
2023-11-02 19:03:58,744:INFO:_master_model_container: 11
2023-11-02 19:03:58,744:INFO:_display_container: 2
2023-11-02 19:03:58,745:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:03:58,745:INFO:create_model() successfully completed......................................
2023-11-02 19:03:58,972:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:58,974:INFO:Creating metrics dataframe
2023-11-02 19:03:58,984:INFO:Initializing Decision Tree Regressor
2023-11-02 19:03:58,984:INFO:Total runtime is 0.17997106711069744 minutes
2023-11-02 19:03:58,987:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:58,988:INFO:Initializing create_model()
2023-11-02 19:03:58,988:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:58,988:INFO:Checking exceptions
2023-11-02 19:03:58,988:INFO:Importing libraries
2023-11-02 19:03:58,988:INFO:Copying training dataset
2023-11-02 19:03:58,994:INFO:Defining folds
2023-11-02 19:03:58,995:INFO:Declaring metric variables
2023-11-02 19:03:58,998:INFO:Importing untrained model
2023-11-02 19:03:59,001:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:03:59,008:INFO:Starting cross validation
2023-11-02 19:03:59,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:03:59,400:INFO:Calculating mean and std
2023-11-02 19:03:59,401:INFO:Creating metrics dataframe
2023-11-02 19:03:59,403:INFO:Uploading results into container
2023-11-02 19:03:59,403:INFO:Uploading model into container now
2023-11-02 19:03:59,404:INFO:_master_model_container: 12
2023-11-02 19:03:59,404:INFO:_display_container: 2
2023-11-02 19:03:59,404:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:03:59,404:INFO:create_model() successfully completed......................................
2023-11-02 19:03:59,629:INFO:SubProcess create_model() end ==================================
2023-11-02 19:03:59,629:INFO:Creating metrics dataframe
2023-11-02 19:03:59,647:INFO:Initializing Random Forest Regressor
2023-11-02 19:03:59,647:INFO:Total runtime is 0.19101094802220664 minutes
2023-11-02 19:03:59,651:INFO:SubProcess create_model() called ==================================
2023-11-02 19:03:59,651:INFO:Initializing create_model()
2023-11-02 19:03:59,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:03:59,651:INFO:Checking exceptions
2023-11-02 19:03:59,651:INFO:Importing libraries
2023-11-02 19:03:59,651:INFO:Copying training dataset
2023-11-02 19:03:59,686:INFO:Defining folds
2023-11-02 19:03:59,686:INFO:Declaring metric variables
2023-11-02 19:03:59,693:INFO:Importing untrained model
2023-11-02 19:03:59,698:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:03:59,712:INFO:Starting cross validation
2023-11-02 19:03:59,713:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:05,934:INFO:Calculating mean and std
2023-11-02 19:04:05,935:INFO:Creating metrics dataframe
2023-11-02 19:04:05,937:INFO:Uploading results into container
2023-11-02 19:04:05,937:INFO:Uploading model into container now
2023-11-02 19:04:05,939:INFO:_master_model_container: 13
2023-11-02 19:04:05,939:INFO:_display_container: 2
2023-11-02 19:04:05,939:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:04:05,939:INFO:create_model() successfully completed......................................
2023-11-02 19:04:06,106:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:06,106:INFO:Creating metrics dataframe
2023-11-02 19:04:06,116:INFO:Initializing Extra Trees Regressor
2023-11-02 19:04:06,116:INFO:Total runtime is 0.2988305767377218 minutes
2023-11-02 19:04:06,118:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:06,119:INFO:Initializing create_model()
2023-11-02 19:04:06,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:06,119:INFO:Checking exceptions
2023-11-02 19:04:06,119:INFO:Importing libraries
2023-11-02 19:04:06,119:INFO:Copying training dataset
2023-11-02 19:04:06,123:INFO:Defining folds
2023-11-02 19:04:06,124:INFO:Declaring metric variables
2023-11-02 19:04:06,126:INFO:Importing untrained model
2023-11-02 19:04:06,131:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:04:06,136:INFO:Starting cross validation
2023-11-02 19:04:06,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:09,173:INFO:Calculating mean and std
2023-11-02 19:04:09,174:INFO:Creating metrics dataframe
2023-11-02 19:04:09,176:INFO:Uploading results into container
2023-11-02 19:04:09,177:INFO:Uploading model into container now
2023-11-02 19:04:09,177:INFO:_master_model_container: 14
2023-11-02 19:04:09,177:INFO:_display_container: 2
2023-11-02 19:04:09,177:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:04:09,177:INFO:create_model() successfully completed......................................
2023-11-02 19:04:09,343:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:09,343:INFO:Creating metrics dataframe
2023-11-02 19:04:09,351:INFO:Initializing AdaBoost Regressor
2023-11-02 19:04:09,351:INFO:Total runtime is 0.35275245904922486 minutes
2023-11-02 19:04:09,353:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:09,354:INFO:Initializing create_model()
2023-11-02 19:04:09,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:09,354:INFO:Checking exceptions
2023-11-02 19:04:09,354:INFO:Importing libraries
2023-11-02 19:04:09,354:INFO:Copying training dataset
2023-11-02 19:04:09,359:INFO:Defining folds
2023-11-02 19:04:09,359:INFO:Declaring metric variables
2023-11-02 19:04:09,362:INFO:Importing untrained model
2023-11-02 19:04:09,367:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:04:09,372:INFO:Starting cross validation
2023-11-02 19:04:09,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:10,478:INFO:Calculating mean and std
2023-11-02 19:04:10,479:INFO:Creating metrics dataframe
2023-11-02 19:04:10,481:INFO:Uploading results into container
2023-11-02 19:04:10,481:INFO:Uploading model into container now
2023-11-02 19:04:10,482:INFO:_master_model_container: 15
2023-11-02 19:04:10,482:INFO:_display_container: 2
2023-11-02 19:04:10,482:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:04:10,482:INFO:create_model() successfully completed......................................
2023-11-02 19:04:10,640:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:10,640:INFO:Creating metrics dataframe
2023-11-02 19:04:10,648:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:04:10,648:INFO:Total runtime is 0.3743642727533976 minutes
2023-11-02 19:04:10,653:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:10,653:INFO:Initializing create_model()
2023-11-02 19:04:10,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:10,654:INFO:Checking exceptions
2023-11-02 19:04:10,654:INFO:Importing libraries
2023-11-02 19:04:10,654:INFO:Copying training dataset
2023-11-02 19:04:10,658:INFO:Defining folds
2023-11-02 19:04:10,658:INFO:Declaring metric variables
2023-11-02 19:04:10,661:INFO:Importing untrained model
2023-11-02 19:04:10,664:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:04:10,670:INFO:Starting cross validation
2023-11-02 19:04:10,671:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:12,857:INFO:Calculating mean and std
2023-11-02 19:04:12,858:INFO:Creating metrics dataframe
2023-11-02 19:04:12,860:INFO:Uploading results into container
2023-11-02 19:04:12,860:INFO:Uploading model into container now
2023-11-02 19:04:12,860:INFO:_master_model_container: 16
2023-11-02 19:04:12,861:INFO:_display_container: 2
2023-11-02 19:04:12,861:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:04:12,861:INFO:create_model() successfully completed......................................
2023-11-02 19:04:13,023:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:13,023:INFO:Creating metrics dataframe
2023-11-02 19:04:13,031:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:04:13,031:INFO:Total runtime is 0.4140844186147054 minutes
2023-11-02 19:04:13,035:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:13,036:INFO:Initializing create_model()
2023-11-02 19:04:13,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:13,037:INFO:Checking exceptions
2023-11-02 19:04:13,037:INFO:Importing libraries
2023-11-02 19:04:13,037:INFO:Copying training dataset
2023-11-02 19:04:13,041:INFO:Defining folds
2023-11-02 19:04:13,041:INFO:Declaring metric variables
2023-11-02 19:04:13,044:INFO:Importing untrained model
2023-11-02 19:04:13,047:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:04:13,053:INFO:Starting cross validation
2023-11-02 19:04:13,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:13,680:INFO:Calculating mean and std
2023-11-02 19:04:13,681:INFO:Creating metrics dataframe
2023-11-02 19:04:13,682:INFO:Uploading results into container
2023-11-02 19:04:13,682:INFO:Uploading model into container now
2023-11-02 19:04:13,683:INFO:_master_model_container: 17
2023-11-02 19:04:13,683:INFO:_display_container: 2
2023-11-02 19:04:13,684:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:04:13,684:INFO:create_model() successfully completed......................................
2023-11-02 19:04:13,915:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:13,915:INFO:Creating metrics dataframe
2023-11-02 19:04:13,931:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:04:13,932:INFO:Total runtime is 0.42910285393397013 minutes
2023-11-02 19:04:13,937:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:13,937:INFO:Initializing create_model()
2023-11-02 19:04:13,937:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:13,937:INFO:Checking exceptions
2023-11-02 19:04:13,937:INFO:Importing libraries
2023-11-02 19:04:13,937:INFO:Copying training dataset
2023-11-02 19:04:13,941:INFO:Defining folds
2023-11-02 19:04:13,941:INFO:Declaring metric variables
2023-11-02 19:04:13,944:INFO:Importing untrained model
2023-11-02 19:04:13,947:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:04:13,954:INFO:Starting cross validation
2023-11-02 19:04:13,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:14,972:INFO:Calculating mean and std
2023-11-02 19:04:14,973:INFO:Creating metrics dataframe
2023-11-02 19:04:14,976:INFO:Uploading results into container
2023-11-02 19:04:14,977:INFO:Uploading model into container now
2023-11-02 19:04:14,978:INFO:_master_model_container: 18
2023-11-02 19:04:14,978:INFO:_display_container: 2
2023-11-02 19:04:14,978:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:04:14,978:INFO:create_model() successfully completed......................................
2023-11-02 19:04:15,196:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:15,196:INFO:Creating metrics dataframe
2023-11-02 19:04:15,208:INFO:Initializing Dummy Regressor
2023-11-02 19:04:15,208:INFO:Total runtime is 0.45036596059799194 minutes
2023-11-02 19:04:15,211:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:15,212:INFO:Initializing create_model()
2023-11-02 19:04:15,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B86D14910>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:15,212:INFO:Checking exceptions
2023-11-02 19:04:15,212:INFO:Importing libraries
2023-11-02 19:04:15,212:INFO:Copying training dataset
2023-11-02 19:04:15,216:INFO:Defining folds
2023-11-02 19:04:15,217:INFO:Declaring metric variables
2023-11-02 19:04:15,222:INFO:Importing untrained model
2023-11-02 19:04:15,225:INFO:Dummy Regressor Imported successfully
2023-11-02 19:04:15,230:INFO:Starting cross validation
2023-11-02 19:04:15,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:15,514:INFO:Calculating mean and std
2023-11-02 19:04:15,515:INFO:Creating metrics dataframe
2023-11-02 19:04:15,521:INFO:Uploading results into container
2023-11-02 19:04:15,521:INFO:Uploading model into container now
2023-11-02 19:04:15,522:INFO:_master_model_container: 19
2023-11-02 19:04:15,522:INFO:_display_container: 2
2023-11-02 19:04:15,522:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:04:15,522:INFO:create_model() successfully completed......................................
2023-11-02 19:04:15,706:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:15,706:INFO:Creating metrics dataframe
2023-11-02 19:04:15,726:INFO:Initializing create_model()
2023-11-02 19:04:15,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:15,726:INFO:Checking exceptions
2023-11-02 19:04:15,727:INFO:Importing libraries
2023-11-02 19:04:15,727:INFO:Copying training dataset
2023-11-02 19:04:15,731:INFO:Defining folds
2023-11-02 19:04:15,731:INFO:Declaring metric variables
2023-11-02 19:04:15,731:INFO:Importing untrained model
2023-11-02 19:04:15,731:INFO:Declaring custom model
2023-11-02 19:04:15,732:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:04:15,732:INFO:Cross validation set to False
2023-11-02 19:04:15,732:INFO:Fitting Model
2023-11-02 19:04:15,868:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:04:15,869:INFO:create_model() successfully completed......................................
2023-11-02 19:04:16,067:INFO:Initializing create_model()
2023-11-02 19:04:16,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:16,068:INFO:Checking exceptions
2023-11-02 19:04:16,072:INFO:Importing libraries
2023-11-02 19:04:16,072:INFO:Copying training dataset
2023-11-02 19:04:16,077:INFO:Defining folds
2023-11-02 19:04:16,077:INFO:Declaring metric variables
2023-11-02 19:04:16,078:INFO:Importing untrained model
2023-11-02 19:04:16,078:INFO:Declaring custom model
2023-11-02 19:04:16,078:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:04:16,080:INFO:Cross validation set to False
2023-11-02 19:04:16,080:INFO:Fitting Model
2023-11-02 19:04:16,472:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:04:16,472:INFO:create_model() successfully completed......................................
2023-11-02 19:04:16,649:INFO:Initializing create_model()
2023-11-02 19:04:16,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:16,649:INFO:Checking exceptions
2023-11-02 19:04:16,651:INFO:Importing libraries
2023-11-02 19:04:16,651:INFO:Copying training dataset
2023-11-02 19:04:16,657:INFO:Defining folds
2023-11-02 19:04:16,657:INFO:Declaring metric variables
2023-11-02 19:04:16,658:INFO:Importing untrained model
2023-11-02 19:04:16,658:INFO:Declaring custom model
2023-11-02 19:04:16,658:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:04:16,659:INFO:Cross validation set to False
2023-11-02 19:04:16,659:INFO:Fitting Model
2023-11-02 19:04:16,709:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:04:16,710:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000179 seconds.
2023-11-02 19:04:16,710:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 19:04:16,710:INFO:[LightGBM] [Info] Total Bins 796
2023-11-02 19:04:16,710:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 16
2023-11-02 19:04:16,710:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:04:16,765:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:04:16,765:INFO:create_model() successfully completed......................................
2023-11-02 19:04:16,968:INFO:Initializing create_model()
2023-11-02 19:04:16,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:16,969:INFO:Checking exceptions
2023-11-02 19:04:16,973:INFO:Importing libraries
2023-11-02 19:04:16,973:INFO:Copying training dataset
2023-11-02 19:04:16,976:INFO:Defining folds
2023-11-02 19:04:16,976:INFO:Declaring metric variables
2023-11-02 19:04:16,976:INFO:Importing untrained model
2023-11-02 19:04:16,976:INFO:Declaring custom model
2023-11-02 19:04:16,977:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:04:16,978:INFO:Cross validation set to False
2023-11-02 19:04:16,978:INFO:Fitting Model
2023-11-02 19:04:17,683:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:04:17,684:INFO:create_model() successfully completed......................................
2023-11-02 19:04:17,859:INFO:Initializing create_model()
2023-11-02 19:04:17,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:17,859:INFO:Checking exceptions
2023-11-02 19:04:17,861:INFO:Importing libraries
2023-11-02 19:04:17,861:INFO:Copying training dataset
2023-11-02 19:04:17,865:INFO:Defining folds
2023-11-02 19:04:17,865:INFO:Declaring metric variables
2023-11-02 19:04:17,865:INFO:Importing untrained model
2023-11-02 19:04:17,865:INFO:Declaring custom model
2023-11-02 19:04:17,865:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:04:17,866:INFO:Cross validation set to False
2023-11-02 19:04:17,866:INFO:Fitting Model
2023-11-02 19:04:17,944:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:04:17,944:INFO:create_model() successfully completed......................................
2023-11-02 19:04:18,133:INFO:_master_model_container: 19
2023-11-02 19:04:18,133:INFO:_display_container: 2
2023-11-02 19:04:18,134:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:04:18,134:INFO:compare_models() successfully completed......................................
2023-11-02 19:04:18,192:INFO:Initializing evaluate_model()
2023-11-02 19:04:18,193:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:04:18,203:INFO:Initializing plot_model()
2023-11-02 19:04:18,203:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, system=True)
2023-11-02 19:04:18,203:INFO:Checking exceptions
2023-11-02 19:04:18,208:INFO:Preloading libraries
2023-11-02 19:04:18,213:INFO:Copying training dataset
2023-11-02 19:04:18,213:INFO:Plot type: pipeline
2023-11-02 19:04:18,393:INFO:Visual Rendered Successfully
2023-11-02 19:04:18,579:INFO:plot_model() successfully completed......................................
2023-11-02 19:04:18,645:INFO:Initializing tune_model()
2023-11-02 19:04:18,645:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>)
2023-11-02 19:04:18,645:INFO:Checking exceptions
2023-11-02 19:04:18,660:INFO:Copying training dataset
2023-11-02 19:04:18,662:INFO:Checking base model
2023-11-02 19:04:18,663:INFO:Base model : Extreme Gradient Boosting
2023-11-02 19:04:18,666:INFO:Declaring metric variables
2023-11-02 19:04:18,669:INFO:Defining Hyperparameters
2023-11-02 19:04:18,869:INFO:Tuning with n_jobs=-1
2023-11-02 19:04:18,869:INFO:Initializing RandomizedSearchCV
2023-11-02 19:04:36,333:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 19:04:36,334:INFO:Hyperparameter search completed
2023-11-02 19:04:36,334:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:36,337:INFO:Initializing create_model()
2023-11-02 19:04:36,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B865927A0>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 19:04:36,337:INFO:Checking exceptions
2023-11-02 19:04:36,337:INFO:Importing libraries
2023-11-02 19:04:36,337:INFO:Copying training dataset
2023-11-02 19:04:36,345:INFO:Defining folds
2023-11-02 19:04:36,345:INFO:Declaring metric variables
2023-11-02 19:04:36,349:INFO:Importing untrained model
2023-11-02 19:04:36,350:INFO:Declaring custom model
2023-11-02 19:04:36,357:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:04:36,364:INFO:Starting cross validation
2023-11-02 19:04:36,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:39,455:INFO:Calculating mean and std
2023-11-02 19:04:39,459:INFO:Creating metrics dataframe
2023-11-02 19:04:39,465:INFO:Finalizing model
2023-11-02 19:04:39,987:INFO:Uploading results into container
2023-11-02 19:04:39,988:INFO:Uploading model into container now
2023-11-02 19:04:39,990:INFO:_master_model_container: 20
2023-11-02 19:04:39,990:INFO:_display_container: 3
2023-11-02 19:04:39,991:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:04:39,991:INFO:create_model() successfully completed......................................
2023-11-02 19:04:40,200:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:40,201:INFO:choose_better activated
2023-11-02 19:04:40,204:INFO:SubProcess create_model() called ==================================
2023-11-02 19:04:40,204:INFO:Initializing create_model()
2023-11-02 19:04:40,205:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:04:40,205:INFO:Checking exceptions
2023-11-02 19:04:40,206:INFO:Importing libraries
2023-11-02 19:04:40,207:INFO:Copying training dataset
2023-11-02 19:04:40,213:INFO:Defining folds
2023-11-02 19:04:40,213:INFO:Declaring metric variables
2023-11-02 19:04:40,213:INFO:Importing untrained model
2023-11-02 19:04:40,213:INFO:Declaring custom model
2023-11-02 19:04:40,214:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:04:40,215:INFO:Starting cross validation
2023-11-02 19:04:40,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:04:41,088:INFO:Calculating mean and std
2023-11-02 19:04:41,088:INFO:Creating metrics dataframe
2023-11-02 19:04:41,091:INFO:Finalizing model
2023-11-02 19:04:41,291:INFO:Uploading results into container
2023-11-02 19:04:41,292:INFO:Uploading model into container now
2023-11-02 19:04:41,292:INFO:_master_model_container: 21
2023-11-02 19:04:41,292:INFO:_display_container: 4
2023-11-02 19:04:41,293:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:04:41,294:INFO:create_model() successfully completed......................................
2023-11-02 19:04:41,539:INFO:SubProcess create_model() end ==================================
2023-11-02 19:04:41,540:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9861
2023-11-02 19:04:41,540:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9871
2023-11-02 19:04:41,541:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 19:04:41,541:INFO:choose_better completed
2023-11-02 19:04:41,554:INFO:_master_model_container: 21
2023-11-02 19:04:41,554:INFO:_display_container: 3
2023-11-02 19:04:41,556:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:04:41,556:INFO:tune_model() successfully completed......................................
2023-11-02 19:04:41,866:INFO:Initializing predict_model()
2023-11-02 19:04:41,868:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022B9A3DAB90>)
2023-11-02 19:04:41,868:INFO:Checking exceptions
2023-11-02 19:04:41,868:INFO:Preloading libraries
2023-11-02 19:04:41,869:INFO:Set up data.
2023-11-02 19:04:41,873:INFO:Set up index.
2023-11-02 19:04:52,142:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\920458111.py:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=df_analysis, x='Actual Values', y='Predicted Values', palette='colorblind')

2023-11-02 19:05:36,814:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\1571122689.py:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=df_analysis, x='Actual Values', y='Predicted Values', palette='colorblind', title='Predicted vs Actual Values')

2023-11-02 19:06:15,243:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\1085908258.py:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=df_analysis, x='Actual Values', y='Predicted Values', palette='colorblind').set(title='Predicted vs Actual Values')

2023-11-02 19:10:00,648:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\1206011389.py:4: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=predictions, x='prediction_label', y=residuals, palette='colorblind')

2023-11-02 19:10:58,708:INFO:Initializing plot_model()
2023-11-02 19:10:58,708:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, system=True)
2023-11-02 19:10:58,708:INFO:Checking exceptions
2023-11-02 19:10:58,711:INFO:Preloading libraries
2023-11-02 19:10:58,717:INFO:Copying training dataset
2023-11-02 19:10:58,717:INFO:Plot type: feature
2023-11-02 19:10:58,718:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:10:58,888:INFO:Visual Rendered Successfully
2023-11-02 19:10:59,098:INFO:plot_model() successfully completed......................................
2023-11-02 19:10:59,461:INFO:Initializing plot_model()
2023-11-02 19:10:59,461:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B98B5E5F0>, system=True)
2023-11-02 19:10:59,461:INFO:Checking exceptions
2023-11-02 19:10:59,464:INFO:Preloading libraries
2023-11-02 19:10:59,472:INFO:Copying training dataset
2023-11-02 19:10:59,472:INFO:Plot type: feature_all
2023-11-02 19:10:59,536:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:10:59,714:INFO:Visual Rendered Successfully
2023-11-02 19:10:59,925:INFO:plot_model() successfully completed......................................
2023-11-02 19:13:07,257:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\302637815.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes'], axis=1, inplace =True)

2023-11-02 19:13:07,262:INFO:PyCaret RegressionExperiment
2023-11-02 19:13:07,262:INFO:Logging name: reg-default-name
2023-11-02 19:13:07,262:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:13:07,262:INFO:version 3.1.0
2023-11-02 19:13:07,262:INFO:Initializing setup()
2023-11-02 19:13:07,262:INFO:self.USI: 0df4
2023-11-02 19:13:07,262:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:13:07,262:INFO:Checking environment
2023-11-02 19:13:07,262:INFO:python_version: 3.10.2
2023-11-02 19:13:07,262:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:13:07,262:INFO:machine: AMD64
2023-11-02 19:13:07,262:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:13:07,267:INFO:Memory: svmem(total=16952647680, available=3986272256, percent=76.5, used=12966375424, free=3986272256)
2023-11-02 19:13:07,267:INFO:Physical Core: 4
2023-11-02 19:13:07,267:INFO:Logical Core: 8
2023-11-02 19:13:07,267:INFO:Checking libraries
2023-11-02 19:13:07,267:INFO:System:
2023-11-02 19:13:07,267:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:13:07,267:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:13:07,267:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:13:07,267:INFO:PyCaret required dependencies:
2023-11-02 19:13:07,267:INFO:                 pip: 23.0.1
2023-11-02 19:13:07,267:INFO:          setuptools: 65.5.0
2023-11-02 19:13:07,267:INFO:             pycaret: 3.1.0
2023-11-02 19:13:07,267:INFO:             IPython: 8.15.0
2023-11-02 19:13:07,267:INFO:          ipywidgets: 8.1.1
2023-11-02 19:13:07,267:INFO:                tqdm: 4.66.1
2023-11-02 19:13:07,267:INFO:               numpy: 1.23.5
2023-11-02 19:13:07,267:INFO:              pandas: 1.5.3
2023-11-02 19:13:07,267:INFO:              jinja2: 3.1.2
2023-11-02 19:13:07,268:INFO:               scipy: 1.10.1
2023-11-02 19:13:07,268:INFO:              joblib: 1.3.2
2023-11-02 19:13:07,268:INFO:             sklearn: 1.2.2
2023-11-02 19:13:07,268:INFO:                pyod: 1.1.0
2023-11-02 19:13:07,268:INFO:            imblearn: 0.11.0
2023-11-02 19:13:07,268:INFO:   category_encoders: 2.6.2
2023-11-02 19:13:07,268:INFO:            lightgbm: 4.1.0
2023-11-02 19:13:07,268:INFO:               numba: 0.58.0
2023-11-02 19:13:07,268:INFO:            requests: 2.31.0
2023-11-02 19:13:07,268:INFO:          matplotlib: 3.8.0
2023-11-02 19:13:07,268:INFO:          scikitplot: 0.3.7
2023-11-02 19:13:07,268:INFO:         yellowbrick: 1.5
2023-11-02 19:13:07,268:INFO:              plotly: 5.17.0
2023-11-02 19:13:07,268:INFO:    plotly-resampler: Not installed
2023-11-02 19:13:07,268:INFO:             kaleido: 0.2.1
2023-11-02 19:13:07,268:INFO:           schemdraw: 0.15
2023-11-02 19:13:07,268:INFO:         statsmodels: 0.14.0
2023-11-02 19:13:07,268:INFO:              sktime: 0.21.1
2023-11-02 19:13:07,268:INFO:               tbats: 1.1.3
2023-11-02 19:13:07,268:INFO:            pmdarima: 2.0.3
2023-11-02 19:13:07,268:INFO:              psutil: 5.9.5
2023-11-02 19:13:07,268:INFO:          markupsafe: 2.1.3
2023-11-02 19:13:07,269:INFO:             pickle5: Not installed
2023-11-02 19:13:07,269:INFO:         cloudpickle: 2.2.1
2023-11-02 19:13:07,269:INFO:         deprecation: 2.1.0
2023-11-02 19:13:07,269:INFO:              xxhash: 3.3.0
2023-11-02 19:13:07,269:INFO:           wurlitzer: Not installed
2023-11-02 19:13:07,269:INFO:PyCaret optional dependencies:
2023-11-02 19:13:07,269:INFO:                shap: Not installed
2023-11-02 19:13:07,269:INFO:           interpret: Not installed
2023-11-02 19:13:07,269:INFO:                umap: Not installed
2023-11-02 19:13:07,269:INFO:     ydata_profiling: Not installed
2023-11-02 19:13:07,269:INFO:  explainerdashboard: Not installed
2023-11-02 19:13:07,269:INFO:             autoviz: Not installed
2023-11-02 19:13:07,269:INFO:           fairlearn: Not installed
2023-11-02 19:13:07,269:INFO:          deepchecks: Not installed
2023-11-02 19:13:07,269:INFO:             xgboost: 2.0.0
2023-11-02 19:13:07,269:INFO:            catboost: Not installed
2023-11-02 19:13:07,269:INFO:              kmodes: Not installed
2023-11-02 19:13:07,269:INFO:             mlxtend: Not installed
2023-11-02 19:13:07,269:INFO:       statsforecast: Not installed
2023-11-02 19:13:07,269:INFO:        tune_sklearn: Not installed
2023-11-02 19:13:07,269:INFO:                 ray: Not installed
2023-11-02 19:13:07,269:INFO:            hyperopt: Not installed
2023-11-02 19:13:07,269:INFO:              optuna: Not installed
2023-11-02 19:13:07,269:INFO:               skopt: Not installed
2023-11-02 19:13:07,269:INFO:              mlflow: Not installed
2023-11-02 19:13:07,269:INFO:              gradio: Not installed
2023-11-02 19:13:07,269:INFO:             fastapi: Not installed
2023-11-02 19:13:07,269:INFO:             uvicorn: Not installed
2023-11-02 19:13:07,269:INFO:              m2cgen: Not installed
2023-11-02 19:13:07,269:INFO:           evidently: Not installed
2023-11-02 19:13:07,269:INFO:               fugue: Not installed
2023-11-02 19:13:07,269:INFO:           streamlit: Not installed
2023-11-02 19:13:07,269:INFO:             prophet: Not installed
2023-11-02 19:13:07,269:INFO:None
2023-11-02 19:13:07,269:INFO:Set up data.
2023-11-02 19:13:07,275:INFO:Set up folding strategy.
2023-11-02 19:13:07,275:INFO:Set up train/test split.
2023-11-02 19:13:07,279:INFO:Set up index.
2023-11-02 19:13:07,279:INFO:Assigning column types.
2023-11-02 19:13:07,282:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:13:07,282:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,287:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,292:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,341:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,380:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,382:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,385:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,389:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,433:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,464:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,466:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:13:07,470:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,552:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,560:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,563:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,653:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,656:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:13:07,668:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,761:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,774:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,822:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:07,860:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:07,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:07,862:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:13:08,139:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,170:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,252:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,254:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:13:08,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,381:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,497:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:13:08,536:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,539:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:13:08,629:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,714:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:08,717:INFO:Preparing preprocessing pipeline...
2023-11-02 19:13:08,717:INFO:Set up simple imputation.
2023-11-02 19:13:08,719:INFO:Set up encoding of categorical features.
2023-11-02 19:13:08,751:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:13:08,755:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:13:08,755:INFO:Creating final display dataframe.
2023-11-02 19:13:08,884:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 5)
4        Transformed data shape        (12384, 5)
5   Transformed train set shape         (8668, 5)
6    Transformed test set shape         (3716, 5)
7              Numeric features                 3
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              0df4
2023-11-02 19:13:08,989:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:08,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:09,096:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:13:09,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:13:09,098:INFO:setup() successfully completed in 1.84s...............
2023-11-02 19:13:09,132:INFO:Initializing compare_models()
2023-11-02 19:13:09,132:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:13:09,132:INFO:Checking exceptions
2023-11-02 19:13:09,134:INFO:Preparing display monitor
2023-11-02 19:13:09,157:INFO:Initializing Linear Regression
2023-11-02 19:13:09,157:INFO:Total runtime is 0.0 minutes
2023-11-02 19:13:09,160:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:09,161:INFO:Initializing create_model()
2023-11-02 19:13:09,161:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:09,162:INFO:Checking exceptions
2023-11-02 19:13:09,162:INFO:Importing libraries
2023-11-02 19:13:09,162:INFO:Copying training dataset
2023-11-02 19:13:09,166:INFO:Defining folds
2023-11-02 19:13:09,166:INFO:Declaring metric variables
2023-11-02 19:13:09,169:INFO:Importing untrained model
2023-11-02 19:13:09,172:INFO:Linear Regression Imported successfully
2023-11-02 19:13:09,181:INFO:Starting cross validation
2023-11-02 19:13:09,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:13,150:INFO:Calculating mean and std
2023-11-02 19:13:13,151:INFO:Creating metrics dataframe
2023-11-02 19:13:13,154:INFO:Uploading results into container
2023-11-02 19:13:13,154:INFO:Uploading model into container now
2023-11-02 19:13:13,155:INFO:_master_model_container: 1
2023-11-02 19:13:13,155:INFO:_display_container: 2
2023-11-02 19:13:13,155:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:13:13,155:INFO:create_model() successfully completed......................................
2023-11-02 19:13:13,353:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:13,353:INFO:Creating metrics dataframe
2023-11-02 19:13:13,358:INFO:Initializing Lasso Regression
2023-11-02 19:13:13,359:INFO:Total runtime is 0.07002586523691813 minutes
2023-11-02 19:13:13,361:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:13,361:INFO:Initializing create_model()
2023-11-02 19:13:13,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:13,362:INFO:Checking exceptions
2023-11-02 19:13:13,362:INFO:Importing libraries
2023-11-02 19:13:13,362:INFO:Copying training dataset
2023-11-02 19:13:13,367:INFO:Defining folds
2023-11-02 19:13:13,367:INFO:Declaring metric variables
2023-11-02 19:13:13,370:INFO:Importing untrained model
2023-11-02 19:13:13,374:INFO:Lasso Regression Imported successfully
2023-11-02 19:13:13,381:INFO:Starting cross validation
2023-11-02 19:13:13,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:13,524:INFO:Calculating mean and std
2023-11-02 19:13:13,525:INFO:Creating metrics dataframe
2023-11-02 19:13:13,527:INFO:Uploading results into container
2023-11-02 19:13:13,527:INFO:Uploading model into container now
2023-11-02 19:13:13,527:INFO:_master_model_container: 2
2023-11-02 19:13:13,528:INFO:_display_container: 2
2023-11-02 19:13:13,528:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:13:13,528:INFO:create_model() successfully completed......................................
2023-11-02 19:13:13,782:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:13,782:INFO:Creating metrics dataframe
2023-11-02 19:13:13,821:INFO:Initializing Ridge Regression
2023-11-02 19:13:13,821:INFO:Total runtime is 0.07773503065109252 minutes
2023-11-02 19:13:13,837:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:13,837:INFO:Initializing create_model()
2023-11-02 19:13:13,837:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:13,837:INFO:Checking exceptions
2023-11-02 19:13:13,837:INFO:Importing libraries
2023-11-02 19:13:13,837:INFO:Copying training dataset
2023-11-02 19:13:13,844:INFO:Defining folds
2023-11-02 19:13:13,844:INFO:Declaring metric variables
2023-11-02 19:13:13,850:INFO:Importing untrained model
2023-11-02 19:13:13,855:INFO:Ridge Regression Imported successfully
2023-11-02 19:13:13,865:INFO:Starting cross validation
2023-11-02 19:13:13,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:14,084:INFO:Calculating mean and std
2023-11-02 19:13:14,085:INFO:Creating metrics dataframe
2023-11-02 19:13:14,089:INFO:Uploading results into container
2023-11-02 19:13:14,090:INFO:Uploading model into container now
2023-11-02 19:13:14,091:INFO:_master_model_container: 3
2023-11-02 19:13:14,091:INFO:_display_container: 2
2023-11-02 19:13:14,091:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:13:14,091:INFO:create_model() successfully completed......................................
2023-11-02 19:13:14,387:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:14,387:INFO:Creating metrics dataframe
2023-11-02 19:13:14,395:INFO:Initializing Elastic Net
2023-11-02 19:13:14,396:INFO:Total runtime is 0.08731501102447509 minutes
2023-11-02 19:13:14,403:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:14,403:INFO:Initializing create_model()
2023-11-02 19:13:14,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:14,403:INFO:Checking exceptions
2023-11-02 19:13:14,403:INFO:Importing libraries
2023-11-02 19:13:14,403:INFO:Copying training dataset
2023-11-02 19:13:14,408:INFO:Defining folds
2023-11-02 19:13:14,408:INFO:Declaring metric variables
2023-11-02 19:13:14,411:INFO:Importing untrained model
2023-11-02 19:13:14,419:INFO:Elastic Net Imported successfully
2023-11-02 19:13:14,425:INFO:Starting cross validation
2023-11-02 19:13:14,426:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:14,601:INFO:Calculating mean and std
2023-11-02 19:13:14,602:INFO:Creating metrics dataframe
2023-11-02 19:13:14,605:INFO:Uploading results into container
2023-11-02 19:13:14,605:INFO:Uploading model into container now
2023-11-02 19:13:14,605:INFO:_master_model_container: 4
2023-11-02 19:13:14,606:INFO:_display_container: 2
2023-11-02 19:13:14,606:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:13:14,606:INFO:create_model() successfully completed......................................
2023-11-02 19:13:14,859:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:14,860:INFO:Creating metrics dataframe
2023-11-02 19:13:14,872:INFO:Initializing Least Angle Regression
2023-11-02 19:13:14,872:INFO:Total runtime is 0.09525626103083291 minutes
2023-11-02 19:13:14,875:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:14,877:INFO:Initializing create_model()
2023-11-02 19:13:14,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:14,877:INFO:Checking exceptions
2023-11-02 19:13:14,877:INFO:Importing libraries
2023-11-02 19:13:14,877:INFO:Copying training dataset
2023-11-02 19:13:14,883:INFO:Defining folds
2023-11-02 19:13:14,883:INFO:Declaring metric variables
2023-11-02 19:13:14,889:INFO:Importing untrained model
2023-11-02 19:13:14,895:INFO:Least Angle Regression Imported successfully
2023-11-02 19:13:14,941:INFO:Starting cross validation
2023-11-02 19:13:14,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:15,162:INFO:Calculating mean and std
2023-11-02 19:13:15,163:INFO:Creating metrics dataframe
2023-11-02 19:13:15,168:INFO:Uploading results into container
2023-11-02 19:13:15,169:INFO:Uploading model into container now
2023-11-02 19:13:15,169:INFO:_master_model_container: 5
2023-11-02 19:13:15,169:INFO:_display_container: 2
2023-11-02 19:13:15,169:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:13:15,170:INFO:create_model() successfully completed......................................
2023-11-02 19:13:15,359:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:15,359:INFO:Creating metrics dataframe
2023-11-02 19:13:15,367:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:13:15,367:INFO:Total runtime is 0.1035058538118998 minutes
2023-11-02 19:13:15,369:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:15,369:INFO:Initializing create_model()
2023-11-02 19:13:15,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:15,369:INFO:Checking exceptions
2023-11-02 19:13:15,369:INFO:Importing libraries
2023-11-02 19:13:15,369:INFO:Copying training dataset
2023-11-02 19:13:15,374:INFO:Defining folds
2023-11-02 19:13:15,374:INFO:Declaring metric variables
2023-11-02 19:13:15,378:INFO:Importing untrained model
2023-11-02 19:13:15,383:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:13:15,388:INFO:Starting cross validation
2023-11-02 19:13:15,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:15,551:INFO:Calculating mean and std
2023-11-02 19:13:15,552:INFO:Creating metrics dataframe
2023-11-02 19:13:15,554:INFO:Uploading results into container
2023-11-02 19:13:15,554:INFO:Uploading model into container now
2023-11-02 19:13:15,554:INFO:_master_model_container: 6
2023-11-02 19:13:15,554:INFO:_display_container: 2
2023-11-02 19:13:15,554:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:13:15,555:INFO:create_model() successfully completed......................................
2023-11-02 19:13:15,764:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:15,764:INFO:Creating metrics dataframe
2023-11-02 19:13:15,775:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:13:15,775:INFO:Total runtime is 0.11029580831527709 minutes
2023-11-02 19:13:15,778:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:15,779:INFO:Initializing create_model()
2023-11-02 19:13:15,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:15,779:INFO:Checking exceptions
2023-11-02 19:13:15,779:INFO:Importing libraries
2023-11-02 19:13:15,779:INFO:Copying training dataset
2023-11-02 19:13:15,785:INFO:Defining folds
2023-11-02 19:13:15,785:INFO:Declaring metric variables
2023-11-02 19:13:15,789:INFO:Importing untrained model
2023-11-02 19:13:15,791:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:13:15,797:INFO:Starting cross validation
2023-11-02 19:13:15,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:15,954:INFO:Calculating mean and std
2023-11-02 19:13:15,955:INFO:Creating metrics dataframe
2023-11-02 19:13:15,958:INFO:Uploading results into container
2023-11-02 19:13:15,958:INFO:Uploading model into container now
2023-11-02 19:13:15,958:INFO:_master_model_container: 7
2023-11-02 19:13:15,959:INFO:_display_container: 2
2023-11-02 19:13:15,959:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:13:15,959:INFO:create_model() successfully completed......................................
2023-11-02 19:13:16,170:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:16,170:INFO:Creating metrics dataframe
2023-11-02 19:13:16,178:INFO:Initializing Bayesian Ridge
2023-11-02 19:13:16,178:INFO:Total runtime is 0.1170180082321167 minutes
2023-11-02 19:13:16,180:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:16,180:INFO:Initializing create_model()
2023-11-02 19:13:16,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:16,181:INFO:Checking exceptions
2023-11-02 19:13:16,181:INFO:Importing libraries
2023-11-02 19:13:16,181:INFO:Copying training dataset
2023-11-02 19:13:16,187:INFO:Defining folds
2023-11-02 19:13:16,187:INFO:Declaring metric variables
2023-11-02 19:13:16,190:INFO:Importing untrained model
2023-11-02 19:13:16,194:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:13:16,201:INFO:Starting cross validation
2023-11-02 19:13:16,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:16,370:INFO:Calculating mean and std
2023-11-02 19:13:16,371:INFO:Creating metrics dataframe
2023-11-02 19:13:16,373:INFO:Uploading results into container
2023-11-02 19:13:16,373:INFO:Uploading model into container now
2023-11-02 19:13:16,374:INFO:_master_model_container: 8
2023-11-02 19:13:16,374:INFO:_display_container: 2
2023-11-02 19:13:16,374:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:13:16,374:INFO:create_model() successfully completed......................................
2023-11-02 19:13:16,572:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:16,572:INFO:Creating metrics dataframe
2023-11-02 19:13:16,579:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:13:16,579:INFO:Total runtime is 0.12369556427001953 minutes
2023-11-02 19:13:16,584:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:16,584:INFO:Initializing create_model()
2023-11-02 19:13:16,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:16,585:INFO:Checking exceptions
2023-11-02 19:13:16,585:INFO:Importing libraries
2023-11-02 19:13:16,585:INFO:Copying training dataset
2023-11-02 19:13:16,589:INFO:Defining folds
2023-11-02 19:13:16,589:INFO:Declaring metric variables
2023-11-02 19:13:16,594:INFO:Importing untrained model
2023-11-02 19:13:16,596:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:13:16,604:INFO:Starting cross validation
2023-11-02 19:13:16,605:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:16,805:INFO:Calculating mean and std
2023-11-02 19:13:16,806:INFO:Creating metrics dataframe
2023-11-02 19:13:16,808:INFO:Uploading results into container
2023-11-02 19:13:16,809:INFO:Uploading model into container now
2023-11-02 19:13:16,809:INFO:_master_model_container: 9
2023-11-02 19:13:16,809:INFO:_display_container: 2
2023-11-02 19:13:16,810:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:13:16,810:INFO:create_model() successfully completed......................................
2023-11-02 19:13:17,021:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:17,021:INFO:Creating metrics dataframe
2023-11-02 19:13:17,029:INFO:Initializing Huber Regressor
2023-11-02 19:13:17,029:INFO:Total runtime is 0.13120057185490927 minutes
2023-11-02 19:13:17,032:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:17,033:INFO:Initializing create_model()
2023-11-02 19:13:17,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:17,033:INFO:Checking exceptions
2023-11-02 19:13:17,033:INFO:Importing libraries
2023-11-02 19:13:17,033:INFO:Copying training dataset
2023-11-02 19:13:17,038:INFO:Defining folds
2023-11-02 19:13:17,039:INFO:Declaring metric variables
2023-11-02 19:13:17,042:INFO:Importing untrained model
2023-11-02 19:13:17,044:INFO:Huber Regressor Imported successfully
2023-11-02 19:13:17,052:INFO:Starting cross validation
2023-11-02 19:13:17,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:17,334:INFO:Calculating mean and std
2023-11-02 19:13:17,335:INFO:Creating metrics dataframe
2023-11-02 19:13:17,337:INFO:Uploading results into container
2023-11-02 19:13:17,338:INFO:Uploading model into container now
2023-11-02 19:13:17,338:INFO:_master_model_container: 10
2023-11-02 19:13:17,338:INFO:_display_container: 2
2023-11-02 19:13:17,338:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:13:17,338:INFO:create_model() successfully completed......................................
2023-11-02 19:13:17,525:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:17,525:INFO:Creating metrics dataframe
2023-11-02 19:13:17,532:INFO:Initializing K Neighbors Regressor
2023-11-02 19:13:17,533:INFO:Total runtime is 0.13959415753682455 minutes
2023-11-02 19:13:17,537:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:17,537:INFO:Initializing create_model()
2023-11-02 19:13:17,537:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:17,537:INFO:Checking exceptions
2023-11-02 19:13:17,537:INFO:Importing libraries
2023-11-02 19:13:17,537:INFO:Copying training dataset
2023-11-02 19:13:17,541:INFO:Defining folds
2023-11-02 19:13:17,542:INFO:Declaring metric variables
2023-11-02 19:13:17,544:INFO:Importing untrained model
2023-11-02 19:13:17,548:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:13:17,556:INFO:Starting cross validation
2023-11-02 19:13:17,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:17,755:INFO:Calculating mean and std
2023-11-02 19:13:17,756:INFO:Creating metrics dataframe
2023-11-02 19:13:17,759:INFO:Uploading results into container
2023-11-02 19:13:17,759:INFO:Uploading model into container now
2023-11-02 19:13:17,760:INFO:_master_model_container: 11
2023-11-02 19:13:17,760:INFO:_display_container: 2
2023-11-02 19:13:17,760:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:13:17,760:INFO:create_model() successfully completed......................................
2023-11-02 19:13:18,027:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:18,027:INFO:Creating metrics dataframe
2023-11-02 19:13:18,036:INFO:Initializing Decision Tree Regressor
2023-11-02 19:13:18,036:INFO:Total runtime is 0.14797691106796265 minutes
2023-11-02 19:13:18,039:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:18,039:INFO:Initializing create_model()
2023-11-02 19:13:18,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:18,039:INFO:Checking exceptions
2023-11-02 19:13:18,039:INFO:Importing libraries
2023-11-02 19:13:18,039:INFO:Copying training dataset
2023-11-02 19:13:18,043:INFO:Defining folds
2023-11-02 19:13:18,044:INFO:Declaring metric variables
2023-11-02 19:13:18,046:INFO:Importing untrained model
2023-11-02 19:13:18,052:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:13:18,059:INFO:Starting cross validation
2023-11-02 19:13:18,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:18,280:INFO:Calculating mean and std
2023-11-02 19:13:18,281:INFO:Creating metrics dataframe
2023-11-02 19:13:18,286:INFO:Uploading results into container
2023-11-02 19:13:18,287:INFO:Uploading model into container now
2023-11-02 19:13:18,288:INFO:_master_model_container: 12
2023-11-02 19:13:18,288:INFO:_display_container: 2
2023-11-02 19:13:18,288:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:13:18,288:INFO:create_model() successfully completed......................................
2023-11-02 19:13:18,476:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:18,476:INFO:Creating metrics dataframe
2023-11-02 19:13:18,486:INFO:Initializing Random Forest Regressor
2023-11-02 19:13:18,486:INFO:Total runtime is 0.1554790536562602 minutes
2023-11-02 19:13:18,488:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:18,489:INFO:Initializing create_model()
2023-11-02 19:13:18,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:18,489:INFO:Checking exceptions
2023-11-02 19:13:18,489:INFO:Importing libraries
2023-11-02 19:13:18,489:INFO:Copying training dataset
2023-11-02 19:13:18,493:INFO:Defining folds
2023-11-02 19:13:18,493:INFO:Declaring metric variables
2023-11-02 19:13:18,495:INFO:Importing untrained model
2023-11-02 19:13:18,499:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:13:18,508:INFO:Starting cross validation
2023-11-02 19:13:18,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:23,811:INFO:Calculating mean and std
2023-11-02 19:13:23,812:INFO:Creating metrics dataframe
2023-11-02 19:13:23,815:INFO:Uploading results into container
2023-11-02 19:13:23,817:INFO:Uploading model into container now
2023-11-02 19:13:23,817:INFO:_master_model_container: 13
2023-11-02 19:13:23,818:INFO:_display_container: 2
2023-11-02 19:13:23,818:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:13:23,818:INFO:create_model() successfully completed......................................
2023-11-02 19:13:24,030:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:24,030:INFO:Creating metrics dataframe
2023-11-02 19:13:24,038:INFO:Initializing Extra Trees Regressor
2023-11-02 19:13:24,038:INFO:Total runtime is 0.24801042477289836 minutes
2023-11-02 19:13:24,042:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:24,042:INFO:Initializing create_model()
2023-11-02 19:13:24,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:24,042:INFO:Checking exceptions
2023-11-02 19:13:24,042:INFO:Importing libraries
2023-11-02 19:13:24,042:INFO:Copying training dataset
2023-11-02 19:13:24,046:INFO:Defining folds
2023-11-02 19:13:24,046:INFO:Declaring metric variables
2023-11-02 19:13:24,049:INFO:Importing untrained model
2023-11-02 19:13:24,053:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:13:24,061:INFO:Starting cross validation
2023-11-02 19:13:24,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:26,548:INFO:Calculating mean and std
2023-11-02 19:13:26,549:INFO:Creating metrics dataframe
2023-11-02 19:13:26,551:INFO:Uploading results into container
2023-11-02 19:13:26,552:INFO:Uploading model into container now
2023-11-02 19:13:26,552:INFO:_master_model_container: 14
2023-11-02 19:13:26,552:INFO:_display_container: 2
2023-11-02 19:13:26,552:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:13:26,553:INFO:create_model() successfully completed......................................
2023-11-02 19:13:26,749:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:26,749:INFO:Creating metrics dataframe
2023-11-02 19:13:26,757:INFO:Initializing AdaBoost Regressor
2023-11-02 19:13:26,758:INFO:Total runtime is 0.29335010846455895 minutes
2023-11-02 19:13:26,762:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:26,762:INFO:Initializing create_model()
2023-11-02 19:13:26,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:26,762:INFO:Checking exceptions
2023-11-02 19:13:26,763:INFO:Importing libraries
2023-11-02 19:13:26,763:INFO:Copying training dataset
2023-11-02 19:13:26,767:INFO:Defining folds
2023-11-02 19:13:26,767:INFO:Declaring metric variables
2023-11-02 19:13:26,769:INFO:Importing untrained model
2023-11-02 19:13:26,773:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:13:26,781:INFO:Starting cross validation
2023-11-02 19:13:26,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:27,616:INFO:Calculating mean and std
2023-11-02 19:13:27,617:INFO:Creating metrics dataframe
2023-11-02 19:13:27,619:INFO:Uploading results into container
2023-11-02 19:13:27,619:INFO:Uploading model into container now
2023-11-02 19:13:27,619:INFO:_master_model_container: 15
2023-11-02 19:13:27,620:INFO:_display_container: 2
2023-11-02 19:13:27,620:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:13:27,620:INFO:create_model() successfully completed......................................
2023-11-02 19:13:27,805:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:27,805:INFO:Creating metrics dataframe
2023-11-02 19:13:27,816:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:13:27,816:INFO:Total runtime is 0.3109918395678203 minutes
2023-11-02 19:13:27,821:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:27,821:INFO:Initializing create_model()
2023-11-02 19:13:27,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:27,822:INFO:Checking exceptions
2023-11-02 19:13:27,822:INFO:Importing libraries
2023-11-02 19:13:27,822:INFO:Copying training dataset
2023-11-02 19:13:27,829:INFO:Defining folds
2023-11-02 19:13:27,830:INFO:Declaring metric variables
2023-11-02 19:13:27,833:INFO:Importing untrained model
2023-11-02 19:13:27,836:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:13:27,840:INFO:Starting cross validation
2023-11-02 19:13:27,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:29,842:INFO:Calculating mean and std
2023-11-02 19:13:29,843:INFO:Creating metrics dataframe
2023-11-02 19:13:29,847:INFO:Uploading results into container
2023-11-02 19:13:29,848:INFO:Uploading model into container now
2023-11-02 19:13:29,849:INFO:_master_model_container: 16
2023-11-02 19:13:29,849:INFO:_display_container: 2
2023-11-02 19:13:29,849:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:13:29,849:INFO:create_model() successfully completed......................................
2023-11-02 19:13:30,038:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:30,038:INFO:Creating metrics dataframe
2023-11-02 19:13:30,049:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:13:30,049:INFO:Total runtime is 0.3481987833976746 minutes
2023-11-02 19:13:30,051:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:30,051:INFO:Initializing create_model()
2023-11-02 19:13:30,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:30,051:INFO:Checking exceptions
2023-11-02 19:13:30,051:INFO:Importing libraries
2023-11-02 19:13:30,052:INFO:Copying training dataset
2023-11-02 19:13:30,056:INFO:Defining folds
2023-11-02 19:13:30,056:INFO:Declaring metric variables
2023-11-02 19:13:30,059:INFO:Importing untrained model
2023-11-02 19:13:30,065:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:13:30,070:INFO:Starting cross validation
2023-11-02 19:13:30,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:30,553:INFO:Calculating mean and std
2023-11-02 19:13:30,554:INFO:Creating metrics dataframe
2023-11-02 19:13:30,557:INFO:Uploading results into container
2023-11-02 19:13:30,557:INFO:Uploading model into container now
2023-11-02 19:13:30,558:INFO:_master_model_container: 17
2023-11-02 19:13:30,558:INFO:_display_container: 2
2023-11-02 19:13:30,558:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:13:30,558:INFO:create_model() successfully completed......................................
2023-11-02 19:13:30,745:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:30,745:INFO:Creating metrics dataframe
2023-11-02 19:13:30,754:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:13:30,754:INFO:Total runtime is 0.35995123386383066 minutes
2023-11-02 19:13:30,759:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:30,759:INFO:Initializing create_model()
2023-11-02 19:13:30,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:30,760:INFO:Checking exceptions
2023-11-02 19:13:30,760:INFO:Importing libraries
2023-11-02 19:13:30,760:INFO:Copying training dataset
2023-11-02 19:13:30,766:INFO:Defining folds
2023-11-02 19:13:30,766:INFO:Declaring metric variables
2023-11-02 19:13:30,769:INFO:Importing untrained model
2023-11-02 19:13:30,772:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:13:30,776:INFO:Starting cross validation
2023-11-02 19:13:30,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:31,467:INFO:Calculating mean and std
2023-11-02 19:13:31,468:INFO:Creating metrics dataframe
2023-11-02 19:13:31,471:INFO:Uploading results into container
2023-11-02 19:13:31,472:INFO:Uploading model into container now
2023-11-02 19:13:31,473:INFO:_master_model_container: 18
2023-11-02 19:13:31,473:INFO:_display_container: 2
2023-11-02 19:13:31,474:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:13:31,474:INFO:create_model() successfully completed......................................
2023-11-02 19:13:31,683:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:31,683:INFO:Creating metrics dataframe
2023-11-02 19:13:31,692:INFO:Initializing Dummy Regressor
2023-11-02 19:13:31,692:INFO:Total runtime is 0.3755869388580323 minutes
2023-11-02 19:13:31,694:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:31,695:INFO:Initializing create_model()
2023-11-02 19:13:31,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B98613610>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:31,695:INFO:Checking exceptions
2023-11-02 19:13:31,695:INFO:Importing libraries
2023-11-02 19:13:31,695:INFO:Copying training dataset
2023-11-02 19:13:31,701:INFO:Defining folds
2023-11-02 19:13:31,701:INFO:Declaring metric variables
2023-11-02 19:13:31,703:INFO:Importing untrained model
2023-11-02 19:13:31,707:INFO:Dummy Regressor Imported successfully
2023-11-02 19:13:31,714:INFO:Starting cross validation
2023-11-02 19:13:31,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:31,872:INFO:Calculating mean and std
2023-11-02 19:13:31,873:INFO:Creating metrics dataframe
2023-11-02 19:13:31,875:INFO:Uploading results into container
2023-11-02 19:13:31,876:INFO:Uploading model into container now
2023-11-02 19:13:31,876:INFO:_master_model_container: 19
2023-11-02 19:13:31,876:INFO:_display_container: 2
2023-11-02 19:13:31,876:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:13:31,876:INFO:create_model() successfully completed......................................
2023-11-02 19:13:32,086:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:32,086:INFO:Creating metrics dataframe
2023-11-02 19:13:32,109:INFO:Initializing create_model()
2023-11-02 19:13:32,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:32,109:INFO:Checking exceptions
2023-11-02 19:13:32,115:INFO:Importing libraries
2023-11-02 19:13:32,115:INFO:Copying training dataset
2023-11-02 19:13:32,119:INFO:Defining folds
2023-11-02 19:13:32,119:INFO:Declaring metric variables
2023-11-02 19:13:32,119:INFO:Importing untrained model
2023-11-02 19:13:32,119:INFO:Declaring custom model
2023-11-02 19:13:32,120:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:13:32,121:INFO:Cross validation set to False
2023-11-02 19:13:32,121:INFO:Fitting Model
2023-11-02 19:13:32,270:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:13:32,270:INFO:create_model() successfully completed......................................
2023-11-02 19:13:32,504:INFO:Initializing create_model()
2023-11-02 19:13:32,504:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:32,504:INFO:Checking exceptions
2023-11-02 19:13:32,506:INFO:Importing libraries
2023-11-02 19:13:32,506:INFO:Copying training dataset
2023-11-02 19:13:32,509:INFO:Defining folds
2023-11-02 19:13:32,510:INFO:Declaring metric variables
2023-11-02 19:13:32,510:INFO:Importing untrained model
2023-11-02 19:13:32,510:INFO:Declaring custom model
2023-11-02 19:13:32,510:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:13:32,512:INFO:Cross validation set to False
2023-11-02 19:13:32,512:INFO:Fitting Model
2023-11-02 19:13:32,549:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000162 seconds.
2023-11-02 19:13:32,549:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 19:13:32,550:INFO:[LightGBM] [Info] Total Bins 772
2023-11-02 19:13:32,550:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 4
2023-11-02 19:13:32,550:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:13:32,608:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:13:32,608:INFO:create_model() successfully completed......................................
2023-11-02 19:13:32,824:INFO:Initializing create_model()
2023-11-02 19:13:32,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:32,825:INFO:Checking exceptions
2023-11-02 19:13:32,826:INFO:Importing libraries
2023-11-02 19:13:32,827:INFO:Copying training dataset
2023-11-02 19:13:32,833:INFO:Defining folds
2023-11-02 19:13:32,834:INFO:Declaring metric variables
2023-11-02 19:13:32,834:INFO:Importing untrained model
2023-11-02 19:13:32,834:INFO:Declaring custom model
2023-11-02 19:13:32,834:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:13:32,835:INFO:Cross validation set to False
2023-11-02 19:13:32,835:INFO:Fitting Model
2023-11-02 19:13:33,157:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:13:33,158:INFO:create_model() successfully completed......................................
2023-11-02 19:13:33,343:INFO:Initializing create_model()
2023-11-02 19:13:33,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:33,343:INFO:Checking exceptions
2023-11-02 19:13:33,347:INFO:Importing libraries
2023-11-02 19:13:33,347:INFO:Copying training dataset
2023-11-02 19:13:33,351:INFO:Defining folds
2023-11-02 19:13:33,352:INFO:Declaring metric variables
2023-11-02 19:13:33,352:INFO:Importing untrained model
2023-11-02 19:13:33,352:INFO:Declaring custom model
2023-11-02 19:13:33,352:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:13:33,353:INFO:Cross validation set to False
2023-11-02 19:13:33,353:INFO:Fitting Model
2023-11-02 19:13:34,006:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:13:34,006:INFO:create_model() successfully completed......................................
2023-11-02 19:13:34,196:INFO:Initializing create_model()
2023-11-02 19:13:34,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:34,196:INFO:Checking exceptions
2023-11-02 19:13:34,199:INFO:Importing libraries
2023-11-02 19:13:34,199:INFO:Copying training dataset
2023-11-02 19:13:34,203:INFO:Defining folds
2023-11-02 19:13:34,203:INFO:Declaring metric variables
2023-11-02 19:13:34,203:INFO:Importing untrained model
2023-11-02 19:13:34,203:INFO:Declaring custom model
2023-11-02 19:13:34,204:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:13:34,204:INFO:Cross validation set to False
2023-11-02 19:13:34,204:INFO:Fitting Model
2023-11-02 19:13:34,261:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:13:34,261:INFO:create_model() successfully completed......................................
2023-11-02 19:13:34,474:INFO:_master_model_container: 19
2023-11-02 19:13:34,474:INFO:_display_container: 2
2023-11-02 19:13:34,476:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:13:34,476:INFO:compare_models() successfully completed......................................
2023-11-02 19:13:34,553:INFO:Initializing evaluate_model()
2023-11-02 19:13:34,553:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:13:34,567:INFO:Initializing plot_model()
2023-11-02 19:13:34,567:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, system=True)
2023-11-02 19:13:34,567:INFO:Checking exceptions
2023-11-02 19:13:34,570:INFO:Preloading libraries
2023-11-02 19:13:34,576:INFO:Copying training dataset
2023-11-02 19:13:34,576:INFO:Plot type: pipeline
2023-11-02 19:13:34,682:INFO:Visual Rendered Successfully
2023-11-02 19:13:34,878:INFO:plot_model() successfully completed......................................
2023-11-02 19:13:34,925:INFO:Initializing tune_model()
2023-11-02 19:13:34,925:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>)
2023-11-02 19:13:34,925:INFO:Checking exceptions
2023-11-02 19:13:34,945:INFO:Copying training dataset
2023-11-02 19:13:34,952:INFO:Checking base model
2023-11-02 19:13:34,952:INFO:Base model : Extreme Gradient Boosting
2023-11-02 19:13:34,956:INFO:Declaring metric variables
2023-11-02 19:13:34,961:INFO:Defining Hyperparameters
2023-11-02 19:13:35,256:INFO:Tuning with n_jobs=-1
2023-11-02 19:13:35,256:INFO:Initializing RandomizedSearchCV
2023-11-02 19:13:49,564:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 19:13:49,565:INFO:Hyperparameter search completed
2023-11-02 19:13:49,565:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:49,567:INFO:Initializing create_model()
2023-11-02 19:13:49,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9948EB00>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 19:13:49,567:INFO:Checking exceptions
2023-11-02 19:13:49,567:INFO:Importing libraries
2023-11-02 19:13:49,568:INFO:Copying training dataset
2023-11-02 19:13:49,573:INFO:Defining folds
2023-11-02 19:13:49,573:INFO:Declaring metric variables
2023-11-02 19:13:49,579:INFO:Importing untrained model
2023-11-02 19:13:49,579:INFO:Declaring custom model
2023-11-02 19:13:49,583:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:13:49,590:INFO:Starting cross validation
2023-11-02 19:13:49,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:52,076:INFO:Calculating mean and std
2023-11-02 19:13:52,078:INFO:Creating metrics dataframe
2023-11-02 19:13:52,086:INFO:Finalizing model
2023-11-02 19:13:52,599:INFO:Uploading results into container
2023-11-02 19:13:52,599:INFO:Uploading model into container now
2023-11-02 19:13:52,600:INFO:_master_model_container: 20
2023-11-02 19:13:52,600:INFO:_display_container: 3
2023-11-02 19:13:52,601:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:13:52,601:INFO:create_model() successfully completed......................................
2023-11-02 19:13:52,879:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:52,879:INFO:choose_better activated
2023-11-02 19:13:52,883:INFO:SubProcess create_model() called ==================================
2023-11-02 19:13:52,884:INFO:Initializing create_model()
2023-11-02 19:13:52,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:13:52,884:INFO:Checking exceptions
2023-11-02 19:13:52,886:INFO:Importing libraries
2023-11-02 19:13:52,886:INFO:Copying training dataset
2023-11-02 19:13:52,889:INFO:Defining folds
2023-11-02 19:13:52,889:INFO:Declaring metric variables
2023-11-02 19:13:52,889:INFO:Importing untrained model
2023-11-02 19:13:52,889:INFO:Declaring custom model
2023-11-02 19:13:52,890:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:13:52,890:INFO:Starting cross validation
2023-11-02 19:13:52,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:13:53,658:INFO:Calculating mean and std
2023-11-02 19:13:53,658:INFO:Creating metrics dataframe
2023-11-02 19:13:53,660:INFO:Finalizing model
2023-11-02 19:13:53,896:INFO:Uploading results into container
2023-11-02 19:13:53,898:INFO:Uploading model into container now
2023-11-02 19:13:53,899:INFO:_master_model_container: 21
2023-11-02 19:13:53,899:INFO:_display_container: 4
2023-11-02 19:13:53,900:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:13:53,900:INFO:create_model() successfully completed......................................
2023-11-02 19:13:54,158:INFO:SubProcess create_model() end ==================================
2023-11-02 19:13:54,159:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9861
2023-11-02 19:13:54,160:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9907
2023-11-02 19:13:54,160:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 19:13:54,160:INFO:choose_better completed
2023-11-02 19:13:54,168:INFO:_master_model_container: 21
2023-11-02 19:13:54,170:INFO:_display_container: 3
2023-11-02 19:13:54,170:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:13:54,170:INFO:tune_model() successfully completed......................................
2023-11-02 19:13:57,317:INFO:Initializing plot_model()
2023-11-02 19:13:57,317:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, system=True)
2023-11-02 19:13:57,317:INFO:Checking exceptions
2023-11-02 19:13:57,320:INFO:Preloading libraries
2023-11-02 19:13:57,326:INFO:Copying training dataset
2023-11-02 19:13:57,326:INFO:Plot type: feature_all
2023-11-02 19:13:57,369:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:13:57,463:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in double_scalars
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2023-11-02 19:13:57,463:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in double_scalars
  fig.bbox.width / w1, fig.bbox.height / h1)

2023-11-02 19:13:57,493:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\matplotlib\patches.py:743: RuntimeWarning: invalid value encountered in double_scalars
  y1 = self.convert_yunits(self._y0 + self._height)

2023-11-02 19:13:57,519:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\matplotlib\transforms.py:2039: RuntimeWarning: invalid value encountered in double_scalars
  self._mtx[1, 2] += ty

2023-11-02 19:13:57,539:INFO:Visual Rendered Successfully
2023-11-02 19:13:57,706:INFO:plot_model() successfully completed......................................
2023-11-02 19:14:51,246:INFO:Initializing plot_model()
2023-11-02 19:14:51,246:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99AA84C0>, system=True)
2023-11-02 19:14:51,246:INFO:Checking exceptions
2023-11-02 19:14:51,248:INFO:Preloading libraries
2023-11-02 19:14:51,253:INFO:Copying training dataset
2023-11-02 19:14:51,253:INFO:Plot type: feature
2023-11-02 19:14:51,254:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:14:51,381:INFO:Visual Rendered Successfully
2023-11-02 19:14:51,543:INFO:plot_model() successfully completed......................................
2023-11-02 19:15:17,174:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\302637815.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train_data.drop(['yield_tonnes_ha', 'hectares_ha', 'production_tonnes'], axis=1, inplace =True)

2023-11-02 19:15:17,177:INFO:PyCaret RegressionExperiment
2023-11-02 19:15:17,177:INFO:Logging name: reg-default-name
2023-11-02 19:15:17,177:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:15:17,177:INFO:version 3.1.0
2023-11-02 19:15:17,177:INFO:Initializing setup()
2023-11-02 19:15:17,177:INFO:self.USI: c79d
2023-11-02 19:15:17,177:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:15:17,177:INFO:Checking environment
2023-11-02 19:15:17,177:INFO:python_version: 3.10.2
2023-11-02 19:15:17,177:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:15:17,177:INFO:machine: AMD64
2023-11-02 19:15:17,177:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:15:17,182:INFO:Memory: svmem(total=16952647680, available=3135311872, percent=81.5, used=13817335808, free=3135311872)
2023-11-02 19:15:17,182:INFO:Physical Core: 4
2023-11-02 19:15:17,182:INFO:Logical Core: 8
2023-11-02 19:15:17,182:INFO:Checking libraries
2023-11-02 19:15:17,182:INFO:System:
2023-11-02 19:15:17,182:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:15:17,182:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:15:17,182:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:15:17,182:INFO:PyCaret required dependencies:
2023-11-02 19:15:17,182:INFO:                 pip: 23.0.1
2023-11-02 19:15:17,182:INFO:          setuptools: 65.5.0
2023-11-02 19:15:17,182:INFO:             pycaret: 3.1.0
2023-11-02 19:15:17,182:INFO:             IPython: 8.15.0
2023-11-02 19:15:17,182:INFO:          ipywidgets: 8.1.1
2023-11-02 19:15:17,182:INFO:                tqdm: 4.66.1
2023-11-02 19:15:17,182:INFO:               numpy: 1.23.5
2023-11-02 19:15:17,182:INFO:              pandas: 1.5.3
2023-11-02 19:15:17,182:INFO:              jinja2: 3.1.2
2023-11-02 19:15:17,182:INFO:               scipy: 1.10.1
2023-11-02 19:15:17,183:INFO:              joblib: 1.3.2
2023-11-02 19:15:17,183:INFO:             sklearn: 1.2.2
2023-11-02 19:15:17,183:INFO:                pyod: 1.1.0
2023-11-02 19:15:17,183:INFO:            imblearn: 0.11.0
2023-11-02 19:15:17,183:INFO:   category_encoders: 2.6.2
2023-11-02 19:15:17,183:INFO:            lightgbm: 4.1.0
2023-11-02 19:15:17,183:INFO:               numba: 0.58.0
2023-11-02 19:15:17,183:INFO:            requests: 2.31.0
2023-11-02 19:15:17,183:INFO:          matplotlib: 3.8.0
2023-11-02 19:15:17,183:INFO:          scikitplot: 0.3.7
2023-11-02 19:15:17,183:INFO:         yellowbrick: 1.5
2023-11-02 19:15:17,183:INFO:              plotly: 5.17.0
2023-11-02 19:15:17,183:INFO:    plotly-resampler: Not installed
2023-11-02 19:15:17,183:INFO:             kaleido: 0.2.1
2023-11-02 19:15:17,183:INFO:           schemdraw: 0.15
2023-11-02 19:15:17,183:INFO:         statsmodels: 0.14.0
2023-11-02 19:15:17,183:INFO:              sktime: 0.21.1
2023-11-02 19:15:17,183:INFO:               tbats: 1.1.3
2023-11-02 19:15:17,183:INFO:            pmdarima: 2.0.3
2023-11-02 19:15:17,183:INFO:              psutil: 5.9.5
2023-11-02 19:15:17,183:INFO:          markupsafe: 2.1.3
2023-11-02 19:15:17,183:INFO:             pickle5: Not installed
2023-11-02 19:15:17,183:INFO:         cloudpickle: 2.2.1
2023-11-02 19:15:17,183:INFO:         deprecation: 2.1.0
2023-11-02 19:15:17,183:INFO:              xxhash: 3.3.0
2023-11-02 19:15:17,183:INFO:           wurlitzer: Not installed
2023-11-02 19:15:17,183:INFO:PyCaret optional dependencies:
2023-11-02 19:15:17,183:INFO:                shap: Not installed
2023-11-02 19:15:17,183:INFO:           interpret: Not installed
2023-11-02 19:15:17,183:INFO:                umap: Not installed
2023-11-02 19:15:17,183:INFO:     ydata_profiling: Not installed
2023-11-02 19:15:17,183:INFO:  explainerdashboard: Not installed
2023-11-02 19:15:17,183:INFO:             autoviz: Not installed
2023-11-02 19:15:17,183:INFO:           fairlearn: Not installed
2023-11-02 19:15:17,183:INFO:          deepchecks: Not installed
2023-11-02 19:15:17,183:INFO:             xgboost: 2.0.0
2023-11-02 19:15:17,183:INFO:            catboost: Not installed
2023-11-02 19:15:17,183:INFO:              kmodes: Not installed
2023-11-02 19:15:17,183:INFO:             mlxtend: Not installed
2023-11-02 19:15:17,183:INFO:       statsforecast: Not installed
2023-11-02 19:15:17,183:INFO:        tune_sklearn: Not installed
2023-11-02 19:15:17,184:INFO:                 ray: Not installed
2023-11-02 19:15:17,184:INFO:            hyperopt: Not installed
2023-11-02 19:15:17,184:INFO:              optuna: Not installed
2023-11-02 19:15:17,184:INFO:               skopt: Not installed
2023-11-02 19:15:17,184:INFO:              mlflow: Not installed
2023-11-02 19:15:17,184:INFO:              gradio: Not installed
2023-11-02 19:15:17,184:INFO:             fastapi: Not installed
2023-11-02 19:15:17,184:INFO:             uvicorn: Not installed
2023-11-02 19:15:17,184:INFO:              m2cgen: Not installed
2023-11-02 19:15:17,184:INFO:           evidently: Not installed
2023-11-02 19:15:17,184:INFO:               fugue: Not installed
2023-11-02 19:15:17,184:INFO:           streamlit: Not installed
2023-11-02 19:15:17,184:INFO:             prophet: Not installed
2023-11-02 19:15:17,184:INFO:None
2023-11-02 19:15:17,184:INFO:Set up data.
2023-11-02 19:15:17,189:INFO:Set up folding strategy.
2023-11-02 19:15:17,189:INFO:Set up train/test split.
2023-11-02 19:15:17,192:INFO:Set up index.
2023-11-02 19:15:17,192:INFO:Assigning column types.
2023-11-02 19:15:17,194:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:15:17,195:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,198:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,204:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,283:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,285:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,289:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,292:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,334:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,366:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,367:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,369:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:15:17,372:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,375:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,420:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,452:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,458:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,501:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,534:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,537:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:15:17,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,617:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,625:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,671:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,707:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,709:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:15:17,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,792:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,840:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,872:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,872:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:17,874:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:15:17,924:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:17,956:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:17,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,005:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:15:18,036:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:18,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,038:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:15:18,118:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:18,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,201:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:18,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,204:INFO:Preparing preprocessing pipeline...
2023-11-02 19:15:18,204:INFO:Set up simple imputation.
2023-11-02 19:15:18,207:INFO:Set up encoding of categorical features.
2023-11-02 19:15:18,240:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:15:18,243:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['national'],
                                    transformer=OneHotEncoder(cols=['national'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:15:18,243:INFO:Creating final display dataframe.
2023-11-02 19:15:18,385:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 5)
4        Transformed data shape       (12384, 16)
5   Transformed train set shape        (8668, 16)
6    Transformed test set shape        (3716, 16)
7              Numeric features                 3
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              c79d
2023-11-02 19:15:18,475:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:18,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,555:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:15:18,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:15:18,558:INFO:setup() successfully completed in 1.38s...............
2023-11-02 19:15:18,595:INFO:Initializing compare_models()
2023-11-02 19:15:18,595:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:15:18,595:INFO:Checking exceptions
2023-11-02 19:15:18,597:INFO:Preparing display monitor
2023-11-02 19:15:18,621:INFO:Initializing Linear Regression
2023-11-02 19:15:18,621:INFO:Total runtime is 0.0 minutes
2023-11-02 19:15:18,624:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:18,624:INFO:Initializing create_model()
2023-11-02 19:15:18,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:18,624:INFO:Checking exceptions
2023-11-02 19:15:18,624:INFO:Importing libraries
2023-11-02 19:15:18,624:INFO:Copying training dataset
2023-11-02 19:15:18,628:INFO:Defining folds
2023-11-02 19:15:18,628:INFO:Declaring metric variables
2023-11-02 19:15:18,631:INFO:Importing untrained model
2023-11-02 19:15:18,637:INFO:Linear Regression Imported successfully
2023-11-02 19:15:18,643:INFO:Starting cross validation
2023-11-02 19:15:18,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:18,870:INFO:Calculating mean and std
2023-11-02 19:15:18,870:INFO:Creating metrics dataframe
2023-11-02 19:15:18,873:INFO:Uploading results into container
2023-11-02 19:15:18,874:INFO:Uploading model into container now
2023-11-02 19:15:18,874:INFO:_master_model_container: 1
2023-11-02 19:15:18,874:INFO:_display_container: 2
2023-11-02 19:15:18,874:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:15:18,874:INFO:create_model() successfully completed......................................
2023-11-02 19:15:19,097:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:19,097:INFO:Creating metrics dataframe
2023-11-02 19:15:19,105:INFO:Initializing Lasso Regression
2023-11-02 19:15:19,105:INFO:Total runtime is 0.008058571815490722 minutes
2023-11-02 19:15:19,108:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:19,108:INFO:Initializing create_model()
2023-11-02 19:15:19,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:19,109:INFO:Checking exceptions
2023-11-02 19:15:19,109:INFO:Importing libraries
2023-11-02 19:15:19,109:INFO:Copying training dataset
2023-11-02 19:15:19,114:INFO:Defining folds
2023-11-02 19:15:19,115:INFO:Declaring metric variables
2023-11-02 19:15:19,120:INFO:Importing untrained model
2023-11-02 19:15:19,124:INFO:Lasso Regression Imported successfully
2023-11-02 19:15:19,129:INFO:Starting cross validation
2023-11-02 19:15:19,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:19,377:INFO:Calculating mean and std
2023-11-02 19:15:19,377:INFO:Creating metrics dataframe
2023-11-02 19:15:19,381:INFO:Uploading results into container
2023-11-02 19:15:19,381:INFO:Uploading model into container now
2023-11-02 19:15:19,382:INFO:_master_model_container: 2
2023-11-02 19:15:19,382:INFO:_display_container: 2
2023-11-02 19:15:19,384:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:15:19,384:INFO:create_model() successfully completed......................................
2023-11-02 19:15:19,682:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:19,682:INFO:Creating metrics dataframe
2023-11-02 19:15:19,692:INFO:Initializing Ridge Regression
2023-11-02 19:15:19,692:INFO:Total runtime is 0.017846306165059406 minutes
2023-11-02 19:15:19,695:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:19,696:INFO:Initializing create_model()
2023-11-02 19:15:19,696:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:19,696:INFO:Checking exceptions
2023-11-02 19:15:19,696:INFO:Importing libraries
2023-11-02 19:15:19,696:INFO:Copying training dataset
2023-11-02 19:15:19,703:INFO:Defining folds
2023-11-02 19:15:19,703:INFO:Declaring metric variables
2023-11-02 19:15:19,708:INFO:Importing untrained model
2023-11-02 19:15:19,711:INFO:Ridge Regression Imported successfully
2023-11-02 19:15:19,716:INFO:Starting cross validation
2023-11-02 19:15:19,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:19,916:INFO:Calculating mean and std
2023-11-02 19:15:19,919:INFO:Creating metrics dataframe
2023-11-02 19:15:19,922:INFO:Uploading results into container
2023-11-02 19:15:19,923:INFO:Uploading model into container now
2023-11-02 19:15:19,923:INFO:_master_model_container: 3
2023-11-02 19:15:19,923:INFO:_display_container: 2
2023-11-02 19:15:19,924:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:15:19,924:INFO:create_model() successfully completed......................................
2023-11-02 19:15:20,112:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:20,112:INFO:Creating metrics dataframe
2023-11-02 19:15:20,120:INFO:Initializing Elastic Net
2023-11-02 19:15:20,120:INFO:Total runtime is 0.024983592828114826 minutes
2023-11-02 19:15:20,122:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:20,123:INFO:Initializing create_model()
2023-11-02 19:15:20,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:20,123:INFO:Checking exceptions
2023-11-02 19:15:20,123:INFO:Importing libraries
2023-11-02 19:15:20,123:INFO:Copying training dataset
2023-11-02 19:15:20,127:INFO:Defining folds
2023-11-02 19:15:20,127:INFO:Declaring metric variables
2023-11-02 19:15:20,130:INFO:Importing untrained model
2023-11-02 19:15:20,135:INFO:Elastic Net Imported successfully
2023-11-02 19:15:20,142:INFO:Starting cross validation
2023-11-02 19:15:20,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:20,308:INFO:Calculating mean and std
2023-11-02 19:15:20,310:INFO:Creating metrics dataframe
2023-11-02 19:15:20,311:INFO:Uploading results into container
2023-11-02 19:15:20,311:INFO:Uploading model into container now
2023-11-02 19:15:20,311:INFO:_master_model_container: 4
2023-11-02 19:15:20,311:INFO:_display_container: 2
2023-11-02 19:15:20,312:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:15:20,312:INFO:create_model() successfully completed......................................
2023-11-02 19:15:20,496:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:20,497:INFO:Creating metrics dataframe
2023-11-02 19:15:20,504:INFO:Initializing Least Angle Regression
2023-11-02 19:15:20,504:INFO:Total runtime is 0.03138666152954101 minutes
2023-11-02 19:15:20,506:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:20,507:INFO:Initializing create_model()
2023-11-02 19:15:20,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:20,507:INFO:Checking exceptions
2023-11-02 19:15:20,507:INFO:Importing libraries
2023-11-02 19:15:20,507:INFO:Copying training dataset
2023-11-02 19:15:20,511:INFO:Defining folds
2023-11-02 19:15:20,511:INFO:Declaring metric variables
2023-11-02 19:15:20,514:INFO:Importing untrained model
2023-11-02 19:15:20,519:INFO:Least Angle Regression Imported successfully
2023-11-02 19:15:20,525:INFO:Starting cross validation
2023-11-02 19:15:20,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:20,702:INFO:Calculating mean and std
2023-11-02 19:15:20,704:INFO:Creating metrics dataframe
2023-11-02 19:15:20,706:INFO:Uploading results into container
2023-11-02 19:15:20,707:INFO:Uploading model into container now
2023-11-02 19:15:20,708:INFO:_master_model_container: 5
2023-11-02 19:15:20,708:INFO:_display_container: 2
2023-11-02 19:15:20,708:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:15:20,708:INFO:create_model() successfully completed......................................
2023-11-02 19:15:20,941:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:20,941:INFO:Creating metrics dataframe
2023-11-02 19:15:20,953:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:15:20,953:INFO:Total runtime is 0.038867882887522374 minutes
2023-11-02 19:15:20,959:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:20,960:INFO:Initializing create_model()
2023-11-02 19:15:20,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:20,960:INFO:Checking exceptions
2023-11-02 19:15:20,960:INFO:Importing libraries
2023-11-02 19:15:20,960:INFO:Copying training dataset
2023-11-02 19:15:20,964:INFO:Defining folds
2023-11-02 19:15:20,964:INFO:Declaring metric variables
2023-11-02 19:15:21,006:INFO:Importing untrained model
2023-11-02 19:15:21,025:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:15:21,034:INFO:Starting cross validation
2023-11-02 19:15:21,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:21,272:INFO:Calculating mean and std
2023-11-02 19:15:21,274:INFO:Creating metrics dataframe
2023-11-02 19:15:21,276:INFO:Uploading results into container
2023-11-02 19:15:21,276:INFO:Uploading model into container now
2023-11-02 19:15:21,276:INFO:_master_model_container: 6
2023-11-02 19:15:21,277:INFO:_display_container: 2
2023-11-02 19:15:21,277:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:15:21,277:INFO:create_model() successfully completed......................................
2023-11-02 19:15:21,466:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:21,466:INFO:Creating metrics dataframe
2023-11-02 19:15:21,476:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:15:21,476:INFO:Total runtime is 0.047577865918477374 minutes
2023-11-02 19:15:21,479:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:21,479:INFO:Initializing create_model()
2023-11-02 19:15:21,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:21,479:INFO:Checking exceptions
2023-11-02 19:15:21,479:INFO:Importing libraries
2023-11-02 19:15:21,479:INFO:Copying training dataset
2023-11-02 19:15:21,483:INFO:Defining folds
2023-11-02 19:15:21,483:INFO:Declaring metric variables
2023-11-02 19:15:21,488:INFO:Importing untrained model
2023-11-02 19:15:21,492:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:15:21,497:INFO:Starting cross validation
2023-11-02 19:15:21,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:21,682:INFO:Calculating mean and std
2023-11-02 19:15:21,683:INFO:Creating metrics dataframe
2023-11-02 19:15:21,688:INFO:Uploading results into container
2023-11-02 19:15:21,688:INFO:Uploading model into container now
2023-11-02 19:15:21,689:INFO:_master_model_container: 7
2023-11-02 19:15:21,689:INFO:_display_container: 2
2023-11-02 19:15:21,689:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:15:21,689:INFO:create_model() successfully completed......................................
2023-11-02 19:15:21,888:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:21,888:INFO:Creating metrics dataframe
2023-11-02 19:15:21,895:INFO:Initializing Bayesian Ridge
2023-11-02 19:15:21,895:INFO:Total runtime is 0.054561150074005124 minutes
2023-11-02 19:15:21,898:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:21,898:INFO:Initializing create_model()
2023-11-02 19:15:21,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:21,898:INFO:Checking exceptions
2023-11-02 19:15:21,898:INFO:Importing libraries
2023-11-02 19:15:21,898:INFO:Copying training dataset
2023-11-02 19:15:21,905:INFO:Defining folds
2023-11-02 19:15:21,905:INFO:Declaring metric variables
2023-11-02 19:15:21,908:INFO:Importing untrained model
2023-11-02 19:15:21,911:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:15:21,916:INFO:Starting cross validation
2023-11-02 19:15:21,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:22,084:INFO:Calculating mean and std
2023-11-02 19:15:22,085:INFO:Creating metrics dataframe
2023-11-02 19:15:22,089:INFO:Uploading results into container
2023-11-02 19:15:22,090:INFO:Uploading model into container now
2023-11-02 19:15:22,091:INFO:_master_model_container: 8
2023-11-02 19:15:22,091:INFO:_display_container: 2
2023-11-02 19:15:22,091:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:15:22,091:INFO:create_model() successfully completed......................................
2023-11-02 19:15:22,273:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:22,273:INFO:Creating metrics dataframe
2023-11-02 19:15:22,282:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:15:22,282:INFO:Total runtime is 0.06101105213165283 minutes
2023-11-02 19:15:22,284:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:22,285:INFO:Initializing create_model()
2023-11-02 19:15:22,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:22,285:INFO:Checking exceptions
2023-11-02 19:15:22,285:INFO:Importing libraries
2023-11-02 19:15:22,285:INFO:Copying training dataset
2023-11-02 19:15:22,291:INFO:Defining folds
2023-11-02 19:15:22,292:INFO:Declaring metric variables
2023-11-02 19:15:22,296:INFO:Importing untrained model
2023-11-02 19:15:22,301:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:15:22,310:INFO:Starting cross validation
2023-11-02 19:15:22,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:22,525:INFO:Calculating mean and std
2023-11-02 19:15:22,526:INFO:Creating metrics dataframe
2023-11-02 19:15:22,528:INFO:Uploading results into container
2023-11-02 19:15:22,528:INFO:Uploading model into container now
2023-11-02 19:15:22,528:INFO:_master_model_container: 9
2023-11-02 19:15:22,529:INFO:_display_container: 2
2023-11-02 19:15:22,529:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:15:22,529:INFO:create_model() successfully completed......................................
2023-11-02 19:15:22,710:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:22,710:INFO:Creating metrics dataframe
2023-11-02 19:15:22,716:INFO:Initializing Huber Regressor
2023-11-02 19:15:22,717:INFO:Total runtime is 0.06826764345169067 minutes
2023-11-02 19:15:22,722:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:22,722:INFO:Initializing create_model()
2023-11-02 19:15:22,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:22,722:INFO:Checking exceptions
2023-11-02 19:15:22,722:INFO:Importing libraries
2023-11-02 19:15:22,722:INFO:Copying training dataset
2023-11-02 19:15:22,726:INFO:Defining folds
2023-11-02 19:15:22,726:INFO:Declaring metric variables
2023-11-02 19:15:22,729:INFO:Importing untrained model
2023-11-02 19:15:22,732:INFO:Huber Regressor Imported successfully
2023-11-02 19:15:22,736:INFO:Starting cross validation
2023-11-02 19:15:22,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:23,100:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,148:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,157:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,180:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,182:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,192:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,209:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,234:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,331:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:15:23,355:INFO:Calculating mean and std
2023-11-02 19:15:23,355:INFO:Creating metrics dataframe
2023-11-02 19:15:23,358:INFO:Uploading results into container
2023-11-02 19:15:23,359:INFO:Uploading model into container now
2023-11-02 19:15:23,359:INFO:_master_model_container: 10
2023-11-02 19:15:23,359:INFO:_display_container: 2
2023-11-02 19:15:23,359:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:15:23,360:INFO:create_model() successfully completed......................................
2023-11-02 19:15:23,567:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:23,567:INFO:Creating metrics dataframe
2023-11-02 19:15:23,579:INFO:Initializing K Neighbors Regressor
2023-11-02 19:15:23,579:INFO:Total runtime is 0.0826283057530721 minutes
2023-11-02 19:15:23,582:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:23,582:INFO:Initializing create_model()
2023-11-02 19:15:23,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:23,582:INFO:Checking exceptions
2023-11-02 19:15:23,582:INFO:Importing libraries
2023-11-02 19:15:23,582:INFO:Copying training dataset
2023-11-02 19:15:23,587:INFO:Defining folds
2023-11-02 19:15:23,588:INFO:Declaring metric variables
2023-11-02 19:15:23,592:INFO:Importing untrained model
2023-11-02 19:15:23,595:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:15:23,601:INFO:Starting cross validation
2023-11-02 19:15:23,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:23,874:INFO:Calculating mean and std
2023-11-02 19:15:23,875:INFO:Creating metrics dataframe
2023-11-02 19:15:23,880:INFO:Uploading results into container
2023-11-02 19:15:23,881:INFO:Uploading model into container now
2023-11-02 19:15:23,881:INFO:_master_model_container: 11
2023-11-02 19:15:23,881:INFO:_display_container: 2
2023-11-02 19:15:23,882:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:15:23,882:INFO:create_model() successfully completed......................................
2023-11-02 19:15:24,065:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:24,066:INFO:Creating metrics dataframe
2023-11-02 19:15:24,075:INFO:Initializing Decision Tree Regressor
2023-11-02 19:15:24,076:INFO:Total runtime is 0.09091229438781738 minutes
2023-11-02 19:15:24,079:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:24,080:INFO:Initializing create_model()
2023-11-02 19:15:24,080:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:24,080:INFO:Checking exceptions
2023-11-02 19:15:24,080:INFO:Importing libraries
2023-11-02 19:15:24,080:INFO:Copying training dataset
2023-11-02 19:15:24,084:INFO:Defining folds
2023-11-02 19:15:24,084:INFO:Declaring metric variables
2023-11-02 19:15:24,087:INFO:Importing untrained model
2023-11-02 19:15:24,092:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:15:24,096:INFO:Starting cross validation
2023-11-02 19:15:24,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:24,350:INFO:Calculating mean and std
2023-11-02 19:15:24,351:INFO:Creating metrics dataframe
2023-11-02 19:15:24,353:INFO:Uploading results into container
2023-11-02 19:15:24,353:INFO:Uploading model into container now
2023-11-02 19:15:24,354:INFO:_master_model_container: 12
2023-11-02 19:15:24,354:INFO:_display_container: 2
2023-11-02 19:15:24,355:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:15:24,355:INFO:create_model() successfully completed......................................
2023-11-02 19:15:24,547:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:24,547:INFO:Creating metrics dataframe
2023-11-02 19:15:24,557:INFO:Initializing Random Forest Regressor
2023-11-02 19:15:24,557:INFO:Total runtime is 0.09892422358194987 minutes
2023-11-02 19:15:24,560:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:24,560:INFO:Initializing create_model()
2023-11-02 19:15:24,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:24,560:INFO:Checking exceptions
2023-11-02 19:15:24,560:INFO:Importing libraries
2023-11-02 19:15:24,561:INFO:Copying training dataset
2023-11-02 19:15:24,565:INFO:Defining folds
2023-11-02 19:15:24,565:INFO:Declaring metric variables
2023-11-02 19:15:24,567:INFO:Importing untrained model
2023-11-02 19:15:24,571:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:15:24,578:INFO:Starting cross validation
2023-11-02 19:15:24,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:29,951:INFO:Calculating mean and std
2023-11-02 19:15:29,953:INFO:Creating metrics dataframe
2023-11-02 19:15:29,956:INFO:Uploading results into container
2023-11-02 19:15:29,957:INFO:Uploading model into container now
2023-11-02 19:15:29,958:INFO:_master_model_container: 13
2023-11-02 19:15:29,958:INFO:_display_container: 2
2023-11-02 19:15:29,958:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:15:29,958:INFO:create_model() successfully completed......................................
2023-11-02 19:15:30,141:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:30,141:INFO:Creating metrics dataframe
2023-11-02 19:15:30,152:INFO:Initializing Extra Trees Regressor
2023-11-02 19:15:30,152:INFO:Total runtime is 0.19218111832936605 minutes
2023-11-02 19:15:30,156:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:30,156:INFO:Initializing create_model()
2023-11-02 19:15:30,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:30,156:INFO:Checking exceptions
2023-11-02 19:15:30,156:INFO:Importing libraries
2023-11-02 19:15:30,156:INFO:Copying training dataset
2023-11-02 19:15:30,162:INFO:Defining folds
2023-11-02 19:15:30,162:INFO:Declaring metric variables
2023-11-02 19:15:30,165:INFO:Importing untrained model
2023-11-02 19:15:30,169:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:15:30,173:INFO:Starting cross validation
2023-11-02 19:15:30,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:33,031:INFO:Calculating mean and std
2023-11-02 19:15:33,032:INFO:Creating metrics dataframe
2023-11-02 19:15:33,036:INFO:Uploading results into container
2023-11-02 19:15:33,036:INFO:Uploading model into container now
2023-11-02 19:15:33,037:INFO:_master_model_container: 14
2023-11-02 19:15:33,037:INFO:_display_container: 2
2023-11-02 19:15:33,037:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:15:33,037:INFO:create_model() successfully completed......................................
2023-11-02 19:15:33,223:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:33,223:INFO:Creating metrics dataframe
2023-11-02 19:15:33,232:INFO:Initializing AdaBoost Regressor
2023-11-02 19:15:33,232:INFO:Total runtime is 0.24350756804148355 minutes
2023-11-02 19:15:33,234:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:33,234:INFO:Initializing create_model()
2023-11-02 19:15:33,234:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:33,234:INFO:Checking exceptions
2023-11-02 19:15:33,234:INFO:Importing libraries
2023-11-02 19:15:33,235:INFO:Copying training dataset
2023-11-02 19:15:33,239:INFO:Defining folds
2023-11-02 19:15:33,239:INFO:Declaring metric variables
2023-11-02 19:15:33,241:INFO:Importing untrained model
2023-11-02 19:15:33,246:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:15:33,252:INFO:Starting cross validation
2023-11-02 19:15:33,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:34,093:INFO:Calculating mean and std
2023-11-02 19:15:34,094:INFO:Creating metrics dataframe
2023-11-02 19:15:34,097:INFO:Uploading results into container
2023-11-02 19:15:34,098:INFO:Uploading model into container now
2023-11-02 19:15:34,098:INFO:_master_model_container: 15
2023-11-02 19:15:34,099:INFO:_display_container: 2
2023-11-02 19:15:34,099:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:15:34,099:INFO:create_model() successfully completed......................................
2023-11-02 19:15:34,284:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:34,284:INFO:Creating metrics dataframe
2023-11-02 19:15:34,293:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:15:34,293:INFO:Total runtime is 0.2611907641092936 minutes
2023-11-02 19:15:34,297:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:34,297:INFO:Initializing create_model()
2023-11-02 19:15:34,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:34,297:INFO:Checking exceptions
2023-11-02 19:15:34,297:INFO:Importing libraries
2023-11-02 19:15:34,297:INFO:Copying training dataset
2023-11-02 19:15:34,303:INFO:Defining folds
2023-11-02 19:15:34,303:INFO:Declaring metric variables
2023-11-02 19:15:34,305:INFO:Importing untrained model
2023-11-02 19:15:34,309:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:15:34,316:INFO:Starting cross validation
2023-11-02 19:15:34,317:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:36,306:INFO:Calculating mean and std
2023-11-02 19:15:36,307:INFO:Creating metrics dataframe
2023-11-02 19:15:36,309:INFO:Uploading results into container
2023-11-02 19:15:36,309:INFO:Uploading model into container now
2023-11-02 19:15:36,309:INFO:_master_model_container: 16
2023-11-02 19:15:36,309:INFO:_display_container: 2
2023-11-02 19:15:36,309:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:15:36,309:INFO:create_model() successfully completed......................................
2023-11-02 19:15:36,487:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:36,487:INFO:Creating metrics dataframe
2023-11-02 19:15:36,494:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:15:36,494:INFO:Total runtime is 0.29788614908854166 minutes
2023-11-02 19:15:36,498:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:36,501:INFO:Initializing create_model()
2023-11-02 19:15:36,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:36,501:INFO:Checking exceptions
2023-11-02 19:15:36,501:INFO:Importing libraries
2023-11-02 19:15:36,501:INFO:Copying training dataset
2023-11-02 19:15:36,505:INFO:Defining folds
2023-11-02 19:15:36,505:INFO:Declaring metric variables
2023-11-02 19:15:36,507:INFO:Importing untrained model
2023-11-02 19:15:36,511:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:15:36,520:INFO:Starting cross validation
2023-11-02 19:15:36,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:37,144:INFO:Calculating mean and std
2023-11-02 19:15:37,145:INFO:Creating metrics dataframe
2023-11-02 19:15:37,148:INFO:Uploading results into container
2023-11-02 19:15:37,150:INFO:Uploading model into container now
2023-11-02 19:15:37,150:INFO:_master_model_container: 17
2023-11-02 19:15:37,150:INFO:_display_container: 2
2023-11-02 19:15:37,151:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:15:37,152:INFO:create_model() successfully completed......................................
2023-11-02 19:15:37,353:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:37,353:INFO:Creating metrics dataframe
2023-11-02 19:15:37,362:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:15:37,362:INFO:Total runtime is 0.3123455882072449 minutes
2023-11-02 19:15:37,365:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:37,368:INFO:Initializing create_model()
2023-11-02 19:15:37,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:37,368:INFO:Checking exceptions
2023-11-02 19:15:37,368:INFO:Importing libraries
2023-11-02 19:15:37,368:INFO:Copying training dataset
2023-11-02 19:15:37,372:INFO:Defining folds
2023-11-02 19:15:37,372:INFO:Declaring metric variables
2023-11-02 19:15:37,375:INFO:Importing untrained model
2023-11-02 19:15:37,378:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:15:37,385:INFO:Starting cross validation
2023-11-02 19:15:37,386:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:38,109:INFO:Calculating mean and std
2023-11-02 19:15:38,110:INFO:Creating metrics dataframe
2023-11-02 19:15:38,113:INFO:Uploading results into container
2023-11-02 19:15:38,114:INFO:Uploading model into container now
2023-11-02 19:15:38,115:INFO:_master_model_container: 18
2023-11-02 19:15:38,115:INFO:_display_container: 2
2023-11-02 19:15:38,116:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:15:38,116:INFO:create_model() successfully completed......................................
2023-11-02 19:15:38,315:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:38,315:INFO:Creating metrics dataframe
2023-11-02 19:15:38,325:INFO:Initializing Dummy Regressor
2023-11-02 19:15:38,325:INFO:Total runtime is 0.32838929891586305 minutes
2023-11-02 19:15:38,327:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:38,327:INFO:Initializing create_model()
2023-11-02 19:15:38,327:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99ADE560>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:38,327:INFO:Checking exceptions
2023-11-02 19:15:38,327:INFO:Importing libraries
2023-11-02 19:15:38,327:INFO:Copying training dataset
2023-11-02 19:15:38,331:INFO:Defining folds
2023-11-02 19:15:38,331:INFO:Declaring metric variables
2023-11-02 19:15:38,336:INFO:Importing untrained model
2023-11-02 19:15:38,339:INFO:Dummy Regressor Imported successfully
2023-11-02 19:15:38,344:INFO:Starting cross validation
2023-11-02 19:15:38,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:15:38,495:INFO:Calculating mean and std
2023-11-02 19:15:38,496:INFO:Creating metrics dataframe
2023-11-02 19:15:38,498:INFO:Uploading results into container
2023-11-02 19:15:38,498:INFO:Uploading model into container now
2023-11-02 19:15:38,499:INFO:_master_model_container: 19
2023-11-02 19:15:38,499:INFO:_display_container: 2
2023-11-02 19:15:38,499:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:15:38,499:INFO:create_model() successfully completed......................................
2023-11-02 19:15:38,674:INFO:SubProcess create_model() end ==================================
2023-11-02 19:15:38,674:INFO:Creating metrics dataframe
2023-11-02 19:15:38,693:INFO:Initializing create_model()
2023-11-02 19:15:38,693:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:38,693:INFO:Checking exceptions
2023-11-02 19:15:38,695:INFO:Importing libraries
2023-11-02 19:15:38,695:INFO:Copying training dataset
2023-11-02 19:15:38,699:INFO:Defining folds
2023-11-02 19:15:38,699:INFO:Declaring metric variables
2023-11-02 19:15:38,699:INFO:Importing untrained model
2023-11-02 19:15:38,699:INFO:Declaring custom model
2023-11-02 19:15:38,700:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:15:38,702:INFO:Cross validation set to False
2023-11-02 19:15:38,702:INFO:Fitting Model
2023-11-02 19:15:38,807:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:15:38,807:INFO:create_model() successfully completed......................................
2023-11-02 19:15:39,015:INFO:Initializing create_model()
2023-11-02 19:15:39,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:39,015:INFO:Checking exceptions
2023-11-02 19:15:39,017:INFO:Importing libraries
2023-11-02 19:15:39,017:INFO:Copying training dataset
2023-11-02 19:15:39,022:INFO:Defining folds
2023-11-02 19:15:39,022:INFO:Declaring metric variables
2023-11-02 19:15:39,022:INFO:Importing untrained model
2023-11-02 19:15:39,022:INFO:Declaring custom model
2023-11-02 19:15:39,023:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:15:39,023:INFO:Cross validation set to False
2023-11-02 19:15:39,023:INFO:Fitting Model
2023-11-02 19:15:39,653:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:15:39,654:INFO:create_model() successfully completed......................................
2023-11-02 19:15:39,840:INFO:Initializing create_model()
2023-11-02 19:15:39,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:39,840:INFO:Checking exceptions
2023-11-02 19:15:39,842:INFO:Importing libraries
2023-11-02 19:15:39,842:INFO:Copying training dataset
2023-11-02 19:15:39,845:INFO:Defining folds
2023-11-02 19:15:39,846:INFO:Declaring metric variables
2023-11-02 19:15:39,846:INFO:Importing untrained model
2023-11-02 19:15:39,846:INFO:Declaring custom model
2023-11-02 19:15:39,846:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:15:39,847:INFO:Cross validation set to False
2023-11-02 19:15:39,847:INFO:Fitting Model
2023-11-02 19:15:39,878:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:15:39,878:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000109 seconds.
2023-11-02 19:15:39,878:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 19:15:39,878:INFO:[LightGBM] [Info] Total Bins 688
2023-11-02 19:15:39,879:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 15
2023-11-02 19:15:39,879:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:15:39,927:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:15:39,927:INFO:create_model() successfully completed......................................
2023-11-02 19:15:40,138:INFO:Initializing create_model()
2023-11-02 19:15:40,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:40,138:INFO:Checking exceptions
2023-11-02 19:15:40,140:INFO:Importing libraries
2023-11-02 19:15:40,140:INFO:Copying training dataset
2023-11-02 19:15:40,144:INFO:Defining folds
2023-11-02 19:15:40,144:INFO:Declaring metric variables
2023-11-02 19:15:40,144:INFO:Importing untrained model
2023-11-02 19:15:40,144:INFO:Declaring custom model
2023-11-02 19:15:40,144:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:15:40,145:INFO:Cross validation set to False
2023-11-02 19:15:40,145:INFO:Fitting Model
2023-11-02 19:15:40,505:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:15:40,505:INFO:create_model() successfully completed......................................
2023-11-02 19:15:40,687:INFO:Initializing create_model()
2023-11-02 19:15:40,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:15:40,688:INFO:Checking exceptions
2023-11-02 19:15:40,690:INFO:Importing libraries
2023-11-02 19:15:40,690:INFO:Copying training dataset
2023-11-02 19:15:40,693:INFO:Defining folds
2023-11-02 19:15:40,693:INFO:Declaring metric variables
2023-11-02 19:15:40,693:INFO:Importing untrained model
2023-11-02 19:15:40,693:INFO:Declaring custom model
2023-11-02 19:15:40,693:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:15:40,694:INFO:Cross validation set to False
2023-11-02 19:15:40,694:INFO:Fitting Model
2023-11-02 19:15:40,750:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:15:40,750:INFO:create_model() successfully completed......................................
2023-11-02 19:15:40,962:INFO:_master_model_container: 19
2023-11-02 19:15:40,962:INFO:_display_container: 2
2023-11-02 19:15:40,963:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:15:40,963:INFO:compare_models() successfully completed......................................
2023-11-02 19:15:41,041:INFO:Initializing evaluate_model()
2023-11-02 19:15:41,042:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:15:41,053:INFO:Initializing plot_model()
2023-11-02 19:15:41,054:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, system=True)
2023-11-02 19:15:41,054:INFO:Checking exceptions
2023-11-02 19:15:41,059:INFO:Preloading libraries
2023-11-02 19:15:41,065:INFO:Copying training dataset
2023-11-02 19:15:41,065:INFO:Plot type: pipeline
2023-11-02 19:15:41,227:INFO:Visual Rendered Successfully
2023-11-02 19:15:41,432:INFO:plot_model() successfully completed......................................
2023-11-02 19:15:41,481:INFO:Initializing tune_model()
2023-11-02 19:15:41,481:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>)
2023-11-02 19:15:41,481:INFO:Checking exceptions
2023-11-02 19:15:41,500:INFO:Copying training dataset
2023-11-02 19:15:41,504:INFO:Checking base model
2023-11-02 19:15:41,504:INFO:Base model : Extreme Gradient Boosting
2023-11-02 19:15:41,510:INFO:Declaring metric variables
2023-11-02 19:15:41,515:INFO:Defining Hyperparameters
2023-11-02 19:15:41,870:INFO:Tuning with n_jobs=-1
2023-11-02 19:15:41,871:INFO:Initializing RandomizedSearchCV
2023-11-02 19:15:59,203:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 19:15:59,204:INFO:Hyperparameter search completed
2023-11-02 19:15:59,205:INFO:SubProcess create_model() called ==================================
2023-11-02 19:15:59,206:INFO:Initializing create_model()
2023-11-02 19:15:59,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99F616C0>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 19:15:59,206:INFO:Checking exceptions
2023-11-02 19:15:59,206:INFO:Importing libraries
2023-11-02 19:15:59,207:INFO:Copying training dataset
2023-11-02 19:15:59,215:INFO:Defining folds
2023-11-02 19:15:59,215:INFO:Declaring metric variables
2023-11-02 19:15:59,220:INFO:Importing untrained model
2023-11-02 19:15:59,221:INFO:Declaring custom model
2023-11-02 19:15:59,225:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:15:59,232:INFO:Starting cross validation
2023-11-02 19:15:59,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:16:01,614:INFO:Calculating mean and std
2023-11-02 19:16:01,615:INFO:Creating metrics dataframe
2023-11-02 19:16:01,623:INFO:Finalizing model
2023-11-02 19:16:02,123:INFO:Uploading results into container
2023-11-02 19:16:02,124:INFO:Uploading model into container now
2023-11-02 19:16:02,124:INFO:_master_model_container: 20
2023-11-02 19:16:02,125:INFO:_display_container: 3
2023-11-02 19:16:02,126:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:16:02,126:INFO:create_model() successfully completed......................................
2023-11-02 19:16:02,360:INFO:SubProcess create_model() end ==================================
2023-11-02 19:16:02,360:INFO:choose_better activated
2023-11-02 19:16:02,363:INFO:SubProcess create_model() called ==================================
2023-11-02 19:16:02,363:INFO:Initializing create_model()
2023-11-02 19:16:02,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:16:02,363:INFO:Checking exceptions
2023-11-02 19:16:02,364:INFO:Importing libraries
2023-11-02 19:16:02,364:INFO:Copying training dataset
2023-11-02 19:16:02,369:INFO:Defining folds
2023-11-02 19:16:02,369:INFO:Declaring metric variables
2023-11-02 19:16:02,370:INFO:Importing untrained model
2023-11-02 19:16:02,370:INFO:Declaring custom model
2023-11-02 19:16:02,371:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:16:02,372:INFO:Starting cross validation
2023-11-02 19:16:02,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:16:03,138:INFO:Calculating mean and std
2023-11-02 19:16:03,139:INFO:Creating metrics dataframe
2023-11-02 19:16:03,140:INFO:Finalizing model
2023-11-02 19:16:03,305:INFO:Uploading results into container
2023-11-02 19:16:03,306:INFO:Uploading model into container now
2023-11-02 19:16:03,306:INFO:_master_model_container: 21
2023-11-02 19:16:03,306:INFO:_display_container: 4
2023-11-02 19:16:03,307:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:16:03,307:INFO:create_model() successfully completed......................................
2023-11-02 19:16:03,545:INFO:SubProcess create_model() end ==================================
2023-11-02 19:16:03,548:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9881
2023-11-02 19:16:03,550:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9894
2023-11-02 19:16:03,552:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 19:16:03,552:INFO:choose_better completed
2023-11-02 19:16:03,560:INFO:_master_model_container: 21
2023-11-02 19:16:03,560:INFO:_display_container: 3
2023-11-02 19:16:03,561:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:16:03,562:INFO:tune_model() successfully completed......................................
2023-11-02 19:16:03,835:INFO:Initializing plot_model()
2023-11-02 19:16:03,835:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, system=True)
2023-11-02 19:16:03,835:INFO:Checking exceptions
2023-11-02 19:16:03,841:INFO:Preloading libraries
2023-11-02 19:16:03,846:INFO:Copying training dataset
2023-11-02 19:16:03,846:INFO:Plot type: feature
2023-11-02 19:16:03,847:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:16:04,007:INFO:Visual Rendered Successfully
2023-11-02 19:16:04,183:INFO:plot_model() successfully completed......................................
2023-11-02 19:16:04,299:INFO:Initializing plot_model()
2023-11-02 19:16:04,300:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B80408640>, system=True)
2023-11-02 19:16:04,300:INFO:Checking exceptions
2023-11-02 19:16:04,302:INFO:Preloading libraries
2023-11-02 19:16:04,311:INFO:Copying training dataset
2023-11-02 19:16:04,311:INFO:Plot type: feature_all
2023-11-02 19:16:04,362:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:16:04,531:INFO:Visual Rendered Successfully
2023-11-02 19:16:04,748:INFO:plot_model() successfully completed......................................
2023-11-02 19:21:25,544:INFO:PyCaret RegressionExperiment
2023-11-02 19:21:25,544:INFO:Logging name: reg-default-name
2023-11-02 19:21:25,544:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:21:25,544:INFO:version 3.1.0
2023-11-02 19:21:25,544:INFO:Initializing setup()
2023-11-02 19:21:25,544:INFO:self.USI: f60b
2023-11-02 19:21:25,544:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:21:25,544:INFO:Checking environment
2023-11-02 19:21:25,544:INFO:python_version: 3.10.2
2023-11-02 19:21:25,544:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:21:25,544:INFO:machine: AMD64
2023-11-02 19:21:25,544:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:21:25,549:INFO:Memory: svmem(total=16952647680, available=3991838720, percent=76.5, used=12960808960, free=3991838720)
2023-11-02 19:21:25,549:INFO:Physical Core: 4
2023-11-02 19:21:25,549:INFO:Logical Core: 8
2023-11-02 19:21:25,549:INFO:Checking libraries
2023-11-02 19:21:25,549:INFO:System:
2023-11-02 19:21:25,549:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:21:25,549:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:21:25,549:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:21:25,549:INFO:PyCaret required dependencies:
2023-11-02 19:21:25,549:INFO:                 pip: 23.0.1
2023-11-02 19:21:25,549:INFO:          setuptools: 65.5.0
2023-11-02 19:21:25,549:INFO:             pycaret: 3.1.0
2023-11-02 19:21:25,549:INFO:             IPython: 8.15.0
2023-11-02 19:21:25,549:INFO:          ipywidgets: 8.1.1
2023-11-02 19:21:25,549:INFO:                tqdm: 4.66.1
2023-11-02 19:21:25,549:INFO:               numpy: 1.23.5
2023-11-02 19:21:25,549:INFO:              pandas: 1.5.3
2023-11-02 19:21:25,549:INFO:              jinja2: 3.1.2
2023-11-02 19:21:25,549:INFO:               scipy: 1.10.1
2023-11-02 19:21:25,549:INFO:              joblib: 1.3.2
2023-11-02 19:21:25,549:INFO:             sklearn: 1.2.2
2023-11-02 19:21:25,549:INFO:                pyod: 1.1.0
2023-11-02 19:21:25,549:INFO:            imblearn: 0.11.0
2023-11-02 19:21:25,549:INFO:   category_encoders: 2.6.2
2023-11-02 19:21:25,550:INFO:            lightgbm: 4.1.0
2023-11-02 19:21:25,550:INFO:               numba: 0.58.0
2023-11-02 19:21:25,550:INFO:            requests: 2.31.0
2023-11-02 19:21:25,550:INFO:          matplotlib: 3.8.0
2023-11-02 19:21:25,550:INFO:          scikitplot: 0.3.7
2023-11-02 19:21:25,550:INFO:         yellowbrick: 1.5
2023-11-02 19:21:25,550:INFO:              plotly: 5.17.0
2023-11-02 19:21:25,550:INFO:    plotly-resampler: Not installed
2023-11-02 19:21:25,550:INFO:             kaleido: 0.2.1
2023-11-02 19:21:25,550:INFO:           schemdraw: 0.15
2023-11-02 19:21:25,550:INFO:         statsmodels: 0.14.0
2023-11-02 19:21:25,550:INFO:              sktime: 0.21.1
2023-11-02 19:21:25,550:INFO:               tbats: 1.1.3
2023-11-02 19:21:25,550:INFO:            pmdarima: 2.0.3
2023-11-02 19:21:25,550:INFO:              psutil: 5.9.5
2023-11-02 19:21:25,550:INFO:          markupsafe: 2.1.3
2023-11-02 19:21:25,550:INFO:             pickle5: Not installed
2023-11-02 19:21:25,550:INFO:         cloudpickle: 2.2.1
2023-11-02 19:21:25,550:INFO:         deprecation: 2.1.0
2023-11-02 19:21:25,550:INFO:              xxhash: 3.3.0
2023-11-02 19:21:25,550:INFO:           wurlitzer: Not installed
2023-11-02 19:21:25,550:INFO:PyCaret optional dependencies:
2023-11-02 19:21:25,550:INFO:                shap: Not installed
2023-11-02 19:21:25,550:INFO:           interpret: Not installed
2023-11-02 19:21:25,550:INFO:                umap: Not installed
2023-11-02 19:21:25,550:INFO:     ydata_profiling: Not installed
2023-11-02 19:21:25,551:INFO:  explainerdashboard: Not installed
2023-11-02 19:21:25,551:INFO:             autoviz: Not installed
2023-11-02 19:21:25,551:INFO:           fairlearn: Not installed
2023-11-02 19:21:25,551:INFO:          deepchecks: Not installed
2023-11-02 19:21:25,551:INFO:             xgboost: 2.0.0
2023-11-02 19:21:25,551:INFO:            catboost: Not installed
2023-11-02 19:21:25,551:INFO:              kmodes: Not installed
2023-11-02 19:21:25,551:INFO:             mlxtend: Not installed
2023-11-02 19:21:25,551:INFO:       statsforecast: Not installed
2023-11-02 19:21:25,551:INFO:        tune_sklearn: Not installed
2023-11-02 19:21:25,551:INFO:                 ray: Not installed
2023-11-02 19:21:25,551:INFO:            hyperopt: Not installed
2023-11-02 19:21:25,551:INFO:              optuna: Not installed
2023-11-02 19:21:25,551:INFO:               skopt: Not installed
2023-11-02 19:21:25,551:INFO:              mlflow: Not installed
2023-11-02 19:21:25,551:INFO:              gradio: Not installed
2023-11-02 19:21:25,551:INFO:             fastapi: Not installed
2023-11-02 19:21:25,551:INFO:             uvicorn: Not installed
2023-11-02 19:21:25,551:INFO:              m2cgen: Not installed
2023-11-02 19:21:25,551:INFO:           evidently: Not installed
2023-11-02 19:21:25,551:INFO:               fugue: Not installed
2023-11-02 19:21:25,551:INFO:           streamlit: Not installed
2023-11-02 19:21:25,551:INFO:             prophet: Not installed
2023-11-02 19:21:25,552:INFO:None
2023-11-02 19:21:25,552:INFO:Set up data.
2023-11-02 19:21:25,561:INFO:Set up folding strategy.
2023-11-02 19:21:25,561:INFO:Set up train/test split.
2023-11-02 19:21:25,565:INFO:Set up index.
2023-11-02 19:21:25,565:INFO:Assigning column types.
2023-11-02 19:21:25,569:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:21:25,569:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,573:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,577:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,673:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:25,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:25,675:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,678:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,682:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,760:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:25,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:25,762:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:21:25,766:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,769:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,812:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,847:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:25,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:25,853:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,856:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:25,951:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:25,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:25,958:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:21:25,970:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,057:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,186:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,191:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:21:26,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,322:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,406:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,408:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:21:26,456:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,490:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,539:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:21:26,572:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,574:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:21:26,672:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,767:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:26,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:26,771:INFO:Preparing preprocessing pipeline...
2023-11-02 19:21:26,771:INFO:Set up simple imputation.
2023-11-02 19:21:26,774:INFO:Set up encoding of categorical features.
2023-11-02 19:21:26,849:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:21:26,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imput...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:21:26,856:INFO:Creating final display dataframe.
2023-11-02 19:21:27,060:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 5)
4        Transformed data shape       (12384, 16)
5   Transformed train set shape        (8668, 16)
6    Transformed test set shape        (3716, 16)
7              Numeric features                 2
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              f60b
2023-11-02 19:21:27,161:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:27,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:27,249:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:21:27,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:21:27,252:INFO:setup() successfully completed in 1.71s...............
2023-11-02 19:21:27,296:INFO:Initializing compare_models()
2023-11-02 19:21:27,296:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:21:27,296:INFO:Checking exceptions
2023-11-02 19:21:27,300:INFO:Preparing display monitor
2023-11-02 19:21:27,328:INFO:Initializing Linear Regression
2023-11-02 19:21:27,328:INFO:Total runtime is 0.0 minutes
2023-11-02 19:21:27,331:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:27,332:INFO:Initializing create_model()
2023-11-02 19:21:27,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:27,332:INFO:Checking exceptions
2023-11-02 19:21:27,332:INFO:Importing libraries
2023-11-02 19:21:27,332:INFO:Copying training dataset
2023-11-02 19:21:27,338:INFO:Defining folds
2023-11-02 19:21:27,338:INFO:Declaring metric variables
2023-11-02 19:21:27,342:INFO:Importing untrained model
2023-11-02 19:21:27,346:INFO:Linear Regression Imported successfully
2023-11-02 19:21:27,352:INFO:Starting cross validation
2023-11-02 19:21:27,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:31,176:INFO:Calculating mean and std
2023-11-02 19:21:31,177:INFO:Creating metrics dataframe
2023-11-02 19:21:31,180:INFO:Uploading results into container
2023-11-02 19:21:31,180:INFO:Uploading model into container now
2023-11-02 19:21:31,181:INFO:_master_model_container: 1
2023-11-02 19:21:31,181:INFO:_display_container: 2
2023-11-02 19:21:31,181:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:21:31,181:INFO:create_model() successfully completed......................................
2023-11-02 19:21:31,394:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:31,394:INFO:Creating metrics dataframe
2023-11-02 19:21:31,400:INFO:Initializing Lasso Regression
2023-11-02 19:21:31,400:INFO:Total runtime is 0.06786062320073445 minutes
2023-11-02 19:21:31,404:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:31,404:INFO:Initializing create_model()
2023-11-02 19:21:31,404:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:31,404:INFO:Checking exceptions
2023-11-02 19:21:31,404:INFO:Importing libraries
2023-11-02 19:21:31,404:INFO:Copying training dataset
2023-11-02 19:21:31,410:INFO:Defining folds
2023-11-02 19:21:31,410:INFO:Declaring metric variables
2023-11-02 19:21:31,413:INFO:Importing untrained model
2023-11-02 19:21:31,416:INFO:Lasso Regression Imported successfully
2023-11-02 19:21:31,421:INFO:Starting cross validation
2023-11-02 19:21:31,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:31,718:INFO:Calculating mean and std
2023-11-02 19:21:31,719:INFO:Creating metrics dataframe
2023-11-02 19:21:31,723:INFO:Uploading results into container
2023-11-02 19:21:31,727:INFO:Uploading model into container now
2023-11-02 19:21:31,728:INFO:_master_model_container: 2
2023-11-02 19:21:31,728:INFO:_display_container: 2
2023-11-02 19:21:31,728:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:21:31,729:INFO:create_model() successfully completed......................................
2023-11-02 19:21:31,952:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:31,953:INFO:Creating metrics dataframe
2023-11-02 19:21:31,960:INFO:Initializing Ridge Regression
2023-11-02 19:21:31,960:INFO:Total runtime is 0.07720094919204712 minutes
2023-11-02 19:21:31,962:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:31,963:INFO:Initializing create_model()
2023-11-02 19:21:31,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:31,963:INFO:Checking exceptions
2023-11-02 19:21:31,963:INFO:Importing libraries
2023-11-02 19:21:31,963:INFO:Copying training dataset
2023-11-02 19:21:31,967:INFO:Defining folds
2023-11-02 19:21:31,967:INFO:Declaring metric variables
2023-11-02 19:21:31,970:INFO:Importing untrained model
2023-11-02 19:21:31,973:INFO:Ridge Regression Imported successfully
2023-11-02 19:21:31,980:INFO:Starting cross validation
2023-11-02 19:21:31,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:32,230:INFO:Calculating mean and std
2023-11-02 19:21:32,231:INFO:Creating metrics dataframe
2023-11-02 19:21:32,233:INFO:Uploading results into container
2023-11-02 19:21:32,234:INFO:Uploading model into container now
2023-11-02 19:21:32,234:INFO:_master_model_container: 3
2023-11-02 19:21:32,234:INFO:_display_container: 2
2023-11-02 19:21:32,235:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:21:32,235:INFO:create_model() successfully completed......................................
2023-11-02 19:21:32,456:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:32,456:INFO:Creating metrics dataframe
2023-11-02 19:21:32,464:INFO:Initializing Elastic Net
2023-11-02 19:21:32,464:INFO:Total runtime is 0.08560299873352051 minutes
2023-11-02 19:21:32,467:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:32,467:INFO:Initializing create_model()
2023-11-02 19:21:32,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:32,467:INFO:Checking exceptions
2023-11-02 19:21:32,467:INFO:Importing libraries
2023-11-02 19:21:32,467:INFO:Copying training dataset
2023-11-02 19:21:32,472:INFO:Defining folds
2023-11-02 19:21:32,472:INFO:Declaring metric variables
2023-11-02 19:21:32,476:INFO:Importing untrained model
2023-11-02 19:21:32,480:INFO:Elastic Net Imported successfully
2023-11-02 19:21:32,485:INFO:Starting cross validation
2023-11-02 19:21:32,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:32,803:INFO:Calculating mean and std
2023-11-02 19:21:32,804:INFO:Creating metrics dataframe
2023-11-02 19:21:32,806:INFO:Uploading results into container
2023-11-02 19:21:32,807:INFO:Uploading model into container now
2023-11-02 19:21:32,807:INFO:_master_model_container: 4
2023-11-02 19:21:32,807:INFO:_display_container: 2
2023-11-02 19:21:32,807:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:21:32,808:INFO:create_model() successfully completed......................................
2023-11-02 19:21:33,011:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:33,011:INFO:Creating metrics dataframe
2023-11-02 19:21:33,018:INFO:Initializing Least Angle Regression
2023-11-02 19:21:33,018:INFO:Total runtime is 0.094823424021403 minutes
2023-11-02 19:21:33,020:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:33,021:INFO:Initializing create_model()
2023-11-02 19:21:33,021:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:33,021:INFO:Checking exceptions
2023-11-02 19:21:33,021:INFO:Importing libraries
2023-11-02 19:21:33,021:INFO:Copying training dataset
2023-11-02 19:21:33,025:INFO:Defining folds
2023-11-02 19:21:33,026:INFO:Declaring metric variables
2023-11-02 19:21:33,030:INFO:Importing untrained model
2023-11-02 19:21:33,033:INFO:Least Angle Regression Imported successfully
2023-11-02 19:21:33,039:INFO:Starting cross validation
2023-11-02 19:21:33,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:33,300:INFO:Calculating mean and std
2023-11-02 19:21:33,301:INFO:Creating metrics dataframe
2023-11-02 19:21:33,303:INFO:Uploading results into container
2023-11-02 19:21:33,303:INFO:Uploading model into container now
2023-11-02 19:21:33,303:INFO:_master_model_container: 5
2023-11-02 19:21:33,304:INFO:_display_container: 2
2023-11-02 19:21:33,304:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:21:33,304:INFO:create_model() successfully completed......................................
2023-11-02 19:21:33,495:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:33,496:INFO:Creating metrics dataframe
2023-11-02 19:21:33,501:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:21:33,502:INFO:Total runtime is 0.10290212631225586 minutes
2023-11-02 19:21:33,504:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:33,505:INFO:Initializing create_model()
2023-11-02 19:21:33,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:33,505:INFO:Checking exceptions
2023-11-02 19:21:33,505:INFO:Importing libraries
2023-11-02 19:21:33,505:INFO:Copying training dataset
2023-11-02 19:21:33,511:INFO:Defining folds
2023-11-02 19:21:33,512:INFO:Declaring metric variables
2023-11-02 19:21:33,515:INFO:Importing untrained model
2023-11-02 19:21:33,518:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:21:33,522:INFO:Starting cross validation
2023-11-02 19:21:33,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:33,764:INFO:Calculating mean and std
2023-11-02 19:21:33,765:INFO:Creating metrics dataframe
2023-11-02 19:21:33,767:INFO:Uploading results into container
2023-11-02 19:21:33,768:INFO:Uploading model into container now
2023-11-02 19:21:33,768:INFO:_master_model_container: 6
2023-11-02 19:21:33,768:INFO:_display_container: 2
2023-11-02 19:21:33,768:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:21:33,769:INFO:create_model() successfully completed......................................
2023-11-02 19:21:34,006:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:34,007:INFO:Creating metrics dataframe
2023-11-02 19:21:34,015:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:21:34,015:INFO:Total runtime is 0.11144137382507324 minutes
2023-11-02 19:21:34,018:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:34,018:INFO:Initializing create_model()
2023-11-02 19:21:34,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:34,018:INFO:Checking exceptions
2023-11-02 19:21:34,018:INFO:Importing libraries
2023-11-02 19:21:34,018:INFO:Copying training dataset
2023-11-02 19:21:34,022:INFO:Defining folds
2023-11-02 19:21:34,022:INFO:Declaring metric variables
2023-11-02 19:21:34,025:INFO:Importing untrained model
2023-11-02 19:21:34,031:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:21:34,037:INFO:Starting cross validation
2023-11-02 19:21:34,038:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:34,308:INFO:Calculating mean and std
2023-11-02 19:21:34,309:INFO:Creating metrics dataframe
2023-11-02 19:21:34,313:INFO:Uploading results into container
2023-11-02 19:21:34,314:INFO:Uploading model into container now
2023-11-02 19:21:34,314:INFO:_master_model_container: 7
2023-11-02 19:21:34,314:INFO:_display_container: 2
2023-11-02 19:21:34,315:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:21:34,315:INFO:create_model() successfully completed......................................
2023-11-02 19:21:34,502:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:34,502:INFO:Creating metrics dataframe
2023-11-02 19:21:34,510:INFO:Initializing Bayesian Ridge
2023-11-02 19:21:34,511:INFO:Total runtime is 0.11971730391184489 minutes
2023-11-02 19:21:34,514:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:34,514:INFO:Initializing create_model()
2023-11-02 19:21:34,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:34,514:INFO:Checking exceptions
2023-11-02 19:21:34,514:INFO:Importing libraries
2023-11-02 19:21:34,514:INFO:Copying training dataset
2023-11-02 19:21:34,518:INFO:Defining folds
2023-11-02 19:21:34,518:INFO:Declaring metric variables
2023-11-02 19:21:34,522:INFO:Importing untrained model
2023-11-02 19:21:34,524:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:21:34,530:INFO:Starting cross validation
2023-11-02 19:21:34,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:34,778:INFO:Calculating mean and std
2023-11-02 19:21:34,780:INFO:Creating metrics dataframe
2023-11-02 19:21:34,782:INFO:Uploading results into container
2023-11-02 19:21:34,783:INFO:Uploading model into container now
2023-11-02 19:21:34,783:INFO:_master_model_container: 8
2023-11-02 19:21:34,783:INFO:_display_container: 2
2023-11-02 19:21:34,783:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:21:34,783:INFO:create_model() successfully completed......................................
2023-11-02 19:21:35,005:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:35,005:INFO:Creating metrics dataframe
2023-11-02 19:21:35,014:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:21:35,014:INFO:Total runtime is 0.12809360027313232 minutes
2023-11-02 19:21:35,018:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:35,018:INFO:Initializing create_model()
2023-11-02 19:21:35,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:35,018:INFO:Checking exceptions
2023-11-02 19:21:35,018:INFO:Importing libraries
2023-11-02 19:21:35,018:INFO:Copying training dataset
2023-11-02 19:21:35,022:INFO:Defining folds
2023-11-02 19:21:35,022:INFO:Declaring metric variables
2023-11-02 19:21:35,025:INFO:Importing untrained model
2023-11-02 19:21:35,030:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:21:35,035:INFO:Starting cross validation
2023-11-02 19:21:35,036:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:35,321:INFO:Calculating mean and std
2023-11-02 19:21:35,321:INFO:Creating metrics dataframe
2023-11-02 19:21:35,324:INFO:Uploading results into container
2023-11-02 19:21:35,325:INFO:Uploading model into container now
2023-11-02 19:21:35,325:INFO:_master_model_container: 9
2023-11-02 19:21:35,325:INFO:_display_container: 2
2023-11-02 19:21:35,325:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:21:35,326:INFO:create_model() successfully completed......................................
2023-11-02 19:21:35,531:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:35,531:INFO:Creating metrics dataframe
2023-11-02 19:21:35,538:INFO:Initializing Huber Regressor
2023-11-02 19:21:35,538:INFO:Total runtime is 0.13682483832041423 minutes
2023-11-02 19:21:35,541:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:35,542:INFO:Initializing create_model()
2023-11-02 19:21:35,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:35,542:INFO:Checking exceptions
2023-11-02 19:21:35,542:INFO:Importing libraries
2023-11-02 19:21:35,542:INFO:Copying training dataset
2023-11-02 19:21:35,548:INFO:Defining folds
2023-11-02 19:21:35,548:INFO:Declaring metric variables
2023-11-02 19:21:35,551:INFO:Importing untrained model
2023-11-02 19:21:35,554:INFO:Huber Regressor Imported successfully
2023-11-02 19:21:35,558:INFO:Starting cross validation
2023-11-02 19:21:35,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:35,989:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,016:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,032:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,036:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,038:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,047:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,058:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,211:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,215:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:21:36,236:INFO:Calculating mean and std
2023-11-02 19:21:36,237:INFO:Creating metrics dataframe
2023-11-02 19:21:36,240:INFO:Uploading results into container
2023-11-02 19:21:36,241:INFO:Uploading model into container now
2023-11-02 19:21:36,242:INFO:_master_model_container: 10
2023-11-02 19:21:36,242:INFO:_display_container: 2
2023-11-02 19:21:36,242:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:21:36,242:INFO:create_model() successfully completed......................................
2023-11-02 19:21:36,486:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:36,486:INFO:Creating metrics dataframe
2023-11-02 19:21:36,495:INFO:Initializing K Neighbors Regressor
2023-11-02 19:21:36,496:INFO:Total runtime is 0.1527955969174703 minutes
2023-11-02 19:21:36,498:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:36,499:INFO:Initializing create_model()
2023-11-02 19:21:36,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:36,499:INFO:Checking exceptions
2023-11-02 19:21:36,499:INFO:Importing libraries
2023-11-02 19:21:36,499:INFO:Copying training dataset
2023-11-02 19:21:36,503:INFO:Defining folds
2023-11-02 19:21:36,503:INFO:Declaring metric variables
2023-11-02 19:21:36,506:INFO:Importing untrained model
2023-11-02 19:21:36,509:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:21:36,516:INFO:Starting cross validation
2023-11-02 19:21:36,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:36,851:INFO:Calculating mean and std
2023-11-02 19:21:36,852:INFO:Creating metrics dataframe
2023-11-02 19:21:36,854:INFO:Uploading results into container
2023-11-02 19:21:36,855:INFO:Uploading model into container now
2023-11-02 19:21:36,855:INFO:_master_model_container: 11
2023-11-02 19:21:36,855:INFO:_display_container: 2
2023-11-02 19:21:36,856:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:21:36,856:INFO:create_model() successfully completed......................................
2023-11-02 19:21:37,041:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:37,041:INFO:Creating metrics dataframe
2023-11-02 19:21:37,051:INFO:Initializing Decision Tree Regressor
2023-11-02 19:21:37,051:INFO:Total runtime is 0.1620531956354777 minutes
2023-11-02 19:21:37,053:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:37,053:INFO:Initializing create_model()
2023-11-02 19:21:37,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:37,054:INFO:Checking exceptions
2023-11-02 19:21:37,054:INFO:Importing libraries
2023-11-02 19:21:37,054:INFO:Copying training dataset
2023-11-02 19:21:37,058:INFO:Defining folds
2023-11-02 19:21:37,058:INFO:Declaring metric variables
2023-11-02 19:21:37,062:INFO:Importing untrained model
2023-11-02 19:21:37,066:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:21:37,071:INFO:Starting cross validation
2023-11-02 19:21:37,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:37,361:INFO:Calculating mean and std
2023-11-02 19:21:37,364:INFO:Creating metrics dataframe
2023-11-02 19:21:37,367:INFO:Uploading results into container
2023-11-02 19:21:37,367:INFO:Uploading model into container now
2023-11-02 19:21:37,368:INFO:_master_model_container: 12
2023-11-02 19:21:37,368:INFO:_display_container: 2
2023-11-02 19:21:37,368:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:21:37,368:INFO:create_model() successfully completed......................................
2023-11-02 19:21:37,582:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:37,582:INFO:Creating metrics dataframe
2023-11-02 19:21:37,592:INFO:Initializing Random Forest Regressor
2023-11-02 19:21:37,592:INFO:Total runtime is 0.1710620085398356 minutes
2023-11-02 19:21:37,598:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:37,598:INFO:Initializing create_model()
2023-11-02 19:21:37,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:37,598:INFO:Checking exceptions
2023-11-02 19:21:37,598:INFO:Importing libraries
2023-11-02 19:21:37,598:INFO:Copying training dataset
2023-11-02 19:21:37,603:INFO:Defining folds
2023-11-02 19:21:37,603:INFO:Declaring metric variables
2023-11-02 19:21:37,607:INFO:Importing untrained model
2023-11-02 19:21:37,612:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:21:37,619:INFO:Starting cross validation
2023-11-02 19:21:37,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:42,076:INFO:Calculating mean and std
2023-11-02 19:21:42,076:INFO:Creating metrics dataframe
2023-11-02 19:21:42,079:INFO:Uploading results into container
2023-11-02 19:21:42,080:INFO:Uploading model into container now
2023-11-02 19:21:42,080:INFO:_master_model_container: 13
2023-11-02 19:21:42,080:INFO:_display_container: 2
2023-11-02 19:21:42,081:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:21:42,081:INFO:create_model() successfully completed......................................
2023-11-02 19:21:42,309:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:42,309:INFO:Creating metrics dataframe
2023-11-02 19:21:42,320:INFO:Initializing Extra Trees Regressor
2023-11-02 19:21:42,320:INFO:Total runtime is 0.24986069599787394 minutes
2023-11-02 19:21:42,324:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:42,325:INFO:Initializing create_model()
2023-11-02 19:21:42,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:42,325:INFO:Checking exceptions
2023-11-02 19:21:42,325:INFO:Importing libraries
2023-11-02 19:21:42,325:INFO:Copying training dataset
2023-11-02 19:21:42,329:INFO:Defining folds
2023-11-02 19:21:42,329:INFO:Declaring metric variables
2023-11-02 19:21:42,332:INFO:Importing untrained model
2023-11-02 19:21:42,336:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:21:42,341:INFO:Starting cross validation
2023-11-02 19:21:42,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:45,447:INFO:Calculating mean and std
2023-11-02 19:21:45,449:INFO:Creating metrics dataframe
2023-11-02 19:21:45,457:INFO:Uploading results into container
2023-11-02 19:21:45,458:INFO:Uploading model into container now
2023-11-02 19:21:45,459:INFO:_master_model_container: 14
2023-11-02 19:21:45,459:INFO:_display_container: 2
2023-11-02 19:21:45,459:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:21:45,459:INFO:create_model() successfully completed......................................
2023-11-02 19:21:45,800:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:45,801:INFO:Creating metrics dataframe
2023-11-02 19:21:45,817:INFO:Initializing AdaBoost Regressor
2023-11-02 19:21:45,817:INFO:Total runtime is 0.3081424474716187 minutes
2023-11-02 19:21:45,823:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:45,823:INFO:Initializing create_model()
2023-11-02 19:21:45,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:45,824:INFO:Checking exceptions
2023-11-02 19:21:45,824:INFO:Importing libraries
2023-11-02 19:21:45,824:INFO:Copying training dataset
2023-11-02 19:21:45,829:INFO:Defining folds
2023-11-02 19:21:45,829:INFO:Declaring metric variables
2023-11-02 19:21:45,833:INFO:Importing untrained model
2023-11-02 19:21:45,840:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:21:45,846:INFO:Starting cross validation
2023-11-02 19:21:45,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:47,023:INFO:Calculating mean and std
2023-11-02 19:21:47,024:INFO:Creating metrics dataframe
2023-11-02 19:21:47,026:INFO:Uploading results into container
2023-11-02 19:21:47,026:INFO:Uploading model into container now
2023-11-02 19:21:47,026:INFO:_master_model_container: 15
2023-11-02 19:21:47,026:INFO:_display_container: 2
2023-11-02 19:21:47,027:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:21:47,027:INFO:create_model() successfully completed......................................
2023-11-02 19:21:47,226:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:47,226:INFO:Creating metrics dataframe
2023-11-02 19:21:47,235:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:21:47,235:INFO:Total runtime is 0.33177081346511844 minutes
2023-11-02 19:21:47,240:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:47,240:INFO:Initializing create_model()
2023-11-02 19:21:47,240:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:47,241:INFO:Checking exceptions
2023-11-02 19:21:47,241:INFO:Importing libraries
2023-11-02 19:21:47,241:INFO:Copying training dataset
2023-11-02 19:21:47,244:INFO:Defining folds
2023-11-02 19:21:47,244:INFO:Declaring metric variables
2023-11-02 19:21:47,247:INFO:Importing untrained model
2023-11-02 19:21:47,250:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:21:47,258:INFO:Starting cross validation
2023-11-02 19:21:47,260:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:48,994:INFO:Calculating mean and std
2023-11-02 19:21:48,995:INFO:Creating metrics dataframe
2023-11-02 19:21:48,997:INFO:Uploading results into container
2023-11-02 19:21:48,998:INFO:Uploading model into container now
2023-11-02 19:21:48,998:INFO:_master_model_container: 16
2023-11-02 19:21:48,998:INFO:_display_container: 2
2023-11-02 19:21:48,999:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:21:48,999:INFO:create_model() successfully completed......................................
2023-11-02 19:21:49,187:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:49,188:INFO:Creating metrics dataframe
2023-11-02 19:21:49,199:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:21:49,199:INFO:Total runtime is 0.3645114541053772 minutes
2023-11-02 19:21:49,202:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:49,202:INFO:Initializing create_model()
2023-11-02 19:21:49,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:49,202:INFO:Checking exceptions
2023-11-02 19:21:49,203:INFO:Importing libraries
2023-11-02 19:21:49,203:INFO:Copying training dataset
2023-11-02 19:21:49,207:INFO:Defining folds
2023-11-02 19:21:49,207:INFO:Declaring metric variables
2023-11-02 19:21:49,210:INFO:Importing untrained model
2023-11-02 19:21:49,213:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:21:49,218:INFO:Starting cross validation
2023-11-02 19:21:49,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:49,824:INFO:Calculating mean and std
2023-11-02 19:21:49,826:INFO:Creating metrics dataframe
2023-11-02 19:21:49,829:INFO:Uploading results into container
2023-11-02 19:21:49,829:INFO:Uploading model into container now
2023-11-02 19:21:49,829:INFO:_master_model_container: 17
2023-11-02 19:21:49,830:INFO:_display_container: 2
2023-11-02 19:21:49,830:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:21:49,830:INFO:create_model() successfully completed......................................
2023-11-02 19:21:50,025:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:50,026:INFO:Creating metrics dataframe
2023-11-02 19:21:50,040:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:21:50,040:INFO:Total runtime is 0.3785304625829061 minutes
2023-11-02 19:21:50,044:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:50,044:INFO:Initializing create_model()
2023-11-02 19:21:50,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:50,044:INFO:Checking exceptions
2023-11-02 19:21:50,044:INFO:Importing libraries
2023-11-02 19:21:50,044:INFO:Copying training dataset
2023-11-02 19:21:50,048:INFO:Defining folds
2023-11-02 19:21:50,049:INFO:Declaring metric variables
2023-11-02 19:21:50,052:INFO:Importing untrained model
2023-11-02 19:21:50,060:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:21:50,066:INFO:Starting cross validation
2023-11-02 19:21:50,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:50,907:INFO:Calculating mean and std
2023-11-02 19:21:50,908:INFO:Creating metrics dataframe
2023-11-02 19:21:50,912:INFO:Uploading results into container
2023-11-02 19:21:50,912:INFO:Uploading model into container now
2023-11-02 19:21:50,913:INFO:_master_model_container: 18
2023-11-02 19:21:50,913:INFO:_display_container: 2
2023-11-02 19:21:50,913:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:21:50,914:INFO:create_model() successfully completed......................................
2023-11-02 19:21:51,139:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:51,140:INFO:Creating metrics dataframe
2023-11-02 19:21:51,151:INFO:Initializing Dummy Regressor
2023-11-02 19:21:51,151:INFO:Total runtime is 0.3970380981763204 minutes
2023-11-02 19:21:51,152:INFO:SubProcess create_model() called ==================================
2023-11-02 19:21:51,153:INFO:Initializing create_model()
2023-11-02 19:21:51,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99AA8820>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:51,153:INFO:Checking exceptions
2023-11-02 19:21:51,153:INFO:Importing libraries
2023-11-02 19:21:51,153:INFO:Copying training dataset
2023-11-02 19:21:51,160:INFO:Defining folds
2023-11-02 19:21:51,160:INFO:Declaring metric variables
2023-11-02 19:21:51,164:INFO:Importing untrained model
2023-11-02 19:21:51,168:INFO:Dummy Regressor Imported successfully
2023-11-02 19:21:51,174:INFO:Starting cross validation
2023-11-02 19:21:51,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:21:51,411:INFO:Calculating mean and std
2023-11-02 19:21:51,412:INFO:Creating metrics dataframe
2023-11-02 19:21:51,414:INFO:Uploading results into container
2023-11-02 19:21:51,415:INFO:Uploading model into container now
2023-11-02 19:21:51,416:INFO:_master_model_container: 19
2023-11-02 19:21:51,416:INFO:_display_container: 2
2023-11-02 19:21:51,417:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:21:51,417:INFO:create_model() successfully completed......................................
2023-11-02 19:21:51,604:INFO:SubProcess create_model() end ==================================
2023-11-02 19:21:51,604:INFO:Creating metrics dataframe
2023-11-02 19:21:51,622:INFO:Initializing create_model()
2023-11-02 19:21:51,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:51,622:INFO:Checking exceptions
2023-11-02 19:21:51,624:INFO:Importing libraries
2023-11-02 19:21:51,625:INFO:Copying training dataset
2023-11-02 19:21:51,628:INFO:Defining folds
2023-11-02 19:21:51,628:INFO:Declaring metric variables
2023-11-02 19:21:51,628:INFO:Importing untrained model
2023-11-02 19:21:51,628:INFO:Declaring custom model
2023-11-02 19:21:51,629:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:21:51,630:INFO:Cross validation set to False
2023-11-02 19:21:51,630:INFO:Fitting Model
2023-11-02 19:21:52,186:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:21:52,187:INFO:create_model() successfully completed......................................
2023-11-02 19:21:52,386:INFO:Initializing create_model()
2023-11-02 19:21:52,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:52,386:INFO:Checking exceptions
2023-11-02 19:21:52,388:INFO:Importing libraries
2023-11-02 19:21:52,388:INFO:Copying training dataset
2023-11-02 19:21:52,394:INFO:Defining folds
2023-11-02 19:21:52,394:INFO:Declaring metric variables
2023-11-02 19:21:52,394:INFO:Importing untrained model
2023-11-02 19:21:52,394:INFO:Declaring custom model
2023-11-02 19:21:52,395:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:21:52,396:INFO:Cross validation set to False
2023-11-02 19:21:52,396:INFO:Fitting Model
2023-11-02 19:21:52,554:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:21:52,554:INFO:create_model() successfully completed......................................
2023-11-02 19:21:52,841:INFO:Initializing create_model()
2023-11-02 19:21:52,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:52,841:INFO:Checking exceptions
2023-11-02 19:21:52,845:INFO:Importing libraries
2023-11-02 19:21:52,845:INFO:Copying training dataset
2023-11-02 19:21:52,849:INFO:Defining folds
2023-11-02 19:21:52,849:INFO:Declaring metric variables
2023-11-02 19:21:52,850:INFO:Importing untrained model
2023-11-02 19:21:52,850:INFO:Declaring custom model
2023-11-02 19:21:52,850:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:21:52,851:INFO:Cross validation set to False
2023-11-02 19:21:52,851:INFO:Fitting Model
2023-11-02 19:21:53,238:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:21:53,238:INFO:create_model() successfully completed......................................
2023-11-02 19:21:53,434:INFO:Initializing create_model()
2023-11-02 19:21:53,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:53,435:INFO:Checking exceptions
2023-11-02 19:21:53,436:INFO:Importing libraries
2023-11-02 19:21:53,436:INFO:Copying training dataset
2023-11-02 19:21:53,439:INFO:Defining folds
2023-11-02 19:21:53,439:INFO:Declaring metric variables
2023-11-02 19:21:53,439:INFO:Importing untrained model
2023-11-02 19:21:53,439:INFO:Declaring custom model
2023-11-02 19:21:53,440:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:21:53,441:INFO:Cross validation set to False
2023-11-02 19:21:53,441:INFO:Fitting Model
2023-11-02 19:21:53,501:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:21:53,501:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000141 seconds.
2023-11-02 19:21:53,501:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 19:21:53,501:INFO:[LightGBM] [Info] Total Bins 541
2023-11-02 19:21:53,501:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 15
2023-11-02 19:21:53,501:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:21:53,569:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:21:53,569:INFO:create_model() successfully completed......................................
2023-11-02 19:21:53,779:INFO:Initializing create_model()
2023-11-02 19:21:53,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:21:53,779:INFO:Checking exceptions
2023-11-02 19:21:53,781:INFO:Importing libraries
2023-11-02 19:21:53,781:INFO:Copying training dataset
2023-11-02 19:21:53,784:INFO:Defining folds
2023-11-02 19:21:53,784:INFO:Declaring metric variables
2023-11-02 19:21:53,784:INFO:Importing untrained model
2023-11-02 19:21:53,784:INFO:Declaring custom model
2023-11-02 19:21:53,784:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:21:53,785:INFO:Cross validation set to False
2023-11-02 19:21:53,785:INFO:Fitting Model
2023-11-02 19:21:53,853:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:21:53,853:INFO:create_model() successfully completed......................................
2023-11-02 19:21:54,064:INFO:_master_model_container: 19
2023-11-02 19:21:54,065:INFO:_display_container: 2
2023-11-02 19:21:54,066:INFO:[RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:21:54,066:INFO:compare_models() successfully completed......................................
2023-11-02 19:21:54,112:INFO:Initializing evaluate_model()
2023-11-02 19:21:54,112:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:21:54,120:INFO:Initializing plot_model()
2023-11-02 19:21:54,120:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, system=True)
2023-11-02 19:21:54,120:INFO:Checking exceptions
2023-11-02 19:21:54,150:INFO:Preloading libraries
2023-11-02 19:21:54,252:INFO:Copying training dataset
2023-11-02 19:21:54,252:INFO:Plot type: pipeline
2023-11-02 19:21:54,335:INFO:Visual Rendered Successfully
2023-11-02 19:21:54,551:INFO:plot_model() successfully completed......................................
2023-11-02 19:21:54,650:INFO:Initializing tune_model()
2023-11-02 19:21:54,650:INFO:tune_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>)
2023-11-02 19:21:54,650:INFO:Checking exceptions
2023-11-02 19:21:54,669:INFO:Copying training dataset
2023-11-02 19:21:54,672:INFO:Checking base model
2023-11-02 19:21:54,672:INFO:Base model : Random Forest Regressor
2023-11-02 19:21:54,675:INFO:Declaring metric variables
2023-11-02 19:21:54,680:INFO:Defining Hyperparameters
2023-11-02 19:21:54,888:INFO:Tuning with n_jobs=-1
2023-11-02 19:21:54,888:INFO:Initializing RandomizedSearchCV
2023-11-02 19:25:08,880:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-11-02 19:25:08,881:INFO:Hyperparameter search completed
2023-11-02 19:25:08,881:INFO:SubProcess create_model() called ==================================
2023-11-02 19:25:08,882:INFO:Initializing create_model()
2023-11-02 19:25:08,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B985A49A0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2023-11-02 19:25:08,882:INFO:Checking exceptions
2023-11-02 19:25:08,882:INFO:Importing libraries
2023-11-02 19:25:08,882:INFO:Copying training dataset
2023-11-02 19:25:08,893:INFO:Defining folds
2023-11-02 19:25:08,893:INFO:Declaring metric variables
2023-11-02 19:25:08,897:INFO:Importing untrained model
2023-11-02 19:25:08,897:INFO:Declaring custom model
2023-11-02 19:25:08,901:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:25:08,910:INFO:Starting cross validation
2023-11-02 19:25:08,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:25:11,373:INFO:Calculating mean and std
2023-11-02 19:25:11,375:INFO:Creating metrics dataframe
2023-11-02 19:25:11,383:INFO:Finalizing model
2023-11-02 19:25:11,837:INFO:Uploading results into container
2023-11-02 19:25:11,838:INFO:Uploading model into container now
2023-11-02 19:25:11,838:INFO:_master_model_container: 20
2023-11-02 19:25:11,839:INFO:_display_container: 3
2023-11-02 19:25:11,840:INFO:RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=8, max_features='sqrt', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0001,
                      min_samples_leaf=2, min_samples_split=5,
                      min_weight_fraction_leaf=0.0, n_estimators=240, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:25:11,840:INFO:create_model() successfully completed......................................
2023-11-02 19:25:12,261:INFO:SubProcess create_model() end ==================================
2023-11-02 19:25:12,261:INFO:choose_better activated
2023-11-02 19:25:12,266:INFO:SubProcess create_model() called ==================================
2023-11-02 19:25:12,267:INFO:Initializing create_model()
2023-11-02 19:25:12,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:25:12,267:INFO:Checking exceptions
2023-11-02 19:25:12,269:INFO:Importing libraries
2023-11-02 19:25:12,270:INFO:Copying training dataset
2023-11-02 19:25:12,277:INFO:Defining folds
2023-11-02 19:25:12,277:INFO:Declaring metric variables
2023-11-02 19:25:12,277:INFO:Importing untrained model
2023-11-02 19:25:12,277:INFO:Declaring custom model
2023-11-02 19:25:12,278:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:25:12,278:INFO:Starting cross validation
2023-11-02 19:25:12,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:25:18,526:INFO:Calculating mean and std
2023-11-02 19:25:18,527:INFO:Creating metrics dataframe
2023-11-02 19:25:18,530:INFO:Finalizing model
2023-11-02 19:25:19,342:INFO:Uploading results into container
2023-11-02 19:25:19,343:INFO:Uploading model into container now
2023-11-02 19:25:19,344:INFO:_master_model_container: 21
2023-11-02 19:25:19,344:INFO:_display_container: 4
2023-11-02 19:25:19,346:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:25:19,346:INFO:create_model() successfully completed......................................
2023-11-02 19:25:19,727:INFO:SubProcess create_model() end ==================================
2023-11-02 19:25:19,729:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False) result for R2 is 0.9562
2023-11-02 19:25:19,730:INFO:RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=8, max_features='sqrt', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0001,
                      min_samples_leaf=2, min_samples_split=5,
                      min_weight_fraction_leaf=0.0, n_estimators=240, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False) result for R2 is 0.8326
2023-11-02 19:25:19,732:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False) is best model
2023-11-02 19:25:19,732:INFO:choose_better completed
2023-11-02 19:25:19,733:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-02 19:25:19,763:INFO:_master_model_container: 21
2023-11-02 19:25:19,763:INFO:_display_container: 3
2023-11-02 19:25:19,763:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:25:19,763:INFO:tune_model() successfully completed......................................
2023-11-02 19:25:20,196:INFO:Initializing plot_model()
2023-11-02 19:25:20,196:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A66E170>, system=True)
2023-11-02 19:25:20,196:INFO:Checking exceptions
2023-11-02 19:25:20,229:INFO:Preloading libraries
2023-11-02 19:25:20,319:INFO:Copying training dataset
2023-11-02 19:25:20,319:INFO:Plot type: feature_all
2023-11-02 19:25:20,418:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:25:20,713:INFO:Visual Rendered Successfully
2023-11-02 19:25:20,957:INFO:plot_model() successfully completed......................................
2023-11-02 19:35:37,806:INFO:PyCaret RegressionExperiment
2023-11-02 19:35:37,807:INFO:Logging name: reg-default-name
2023-11-02 19:35:37,807:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:35:37,807:INFO:version 3.1.0
2023-11-02 19:35:37,807:INFO:Initializing setup()
2023-11-02 19:35:37,807:INFO:self.USI: d214
2023-11-02 19:35:37,807:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:35:37,807:INFO:Checking environment
2023-11-02 19:35:37,807:INFO:python_version: 3.10.2
2023-11-02 19:35:37,807:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:35:37,807:INFO:machine: AMD64
2023-11-02 19:35:37,807:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:35:37,811:INFO:Memory: svmem(total=16952647680, available=4181004288, percent=75.3, used=12771643392, free=4181004288)
2023-11-02 19:35:37,811:INFO:Physical Core: 4
2023-11-02 19:35:37,811:INFO:Logical Core: 8
2023-11-02 19:35:37,812:INFO:Checking libraries
2023-11-02 19:35:37,812:INFO:System:
2023-11-02 19:35:37,812:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:35:37,812:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:35:37,812:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:35:37,812:INFO:PyCaret required dependencies:
2023-11-02 19:35:37,812:INFO:                 pip: 23.0.1
2023-11-02 19:35:37,812:INFO:          setuptools: 65.5.0
2023-11-02 19:35:37,812:INFO:             pycaret: 3.1.0
2023-11-02 19:35:37,812:INFO:             IPython: 8.15.0
2023-11-02 19:35:37,812:INFO:          ipywidgets: 8.1.1
2023-11-02 19:35:37,812:INFO:                tqdm: 4.66.1
2023-11-02 19:35:37,812:INFO:               numpy: 1.23.5
2023-11-02 19:35:37,812:INFO:              pandas: 1.5.3
2023-11-02 19:35:37,812:INFO:              jinja2: 3.1.2
2023-11-02 19:35:37,812:INFO:               scipy: 1.10.1
2023-11-02 19:35:37,812:INFO:              joblib: 1.3.2
2023-11-02 19:35:37,812:INFO:             sklearn: 1.2.2
2023-11-02 19:35:37,812:INFO:                pyod: 1.1.0
2023-11-02 19:35:37,812:INFO:            imblearn: 0.11.0
2023-11-02 19:35:37,812:INFO:   category_encoders: 2.6.2
2023-11-02 19:35:37,812:INFO:            lightgbm: 4.1.0
2023-11-02 19:35:37,812:INFO:               numba: 0.58.0
2023-11-02 19:35:37,812:INFO:            requests: 2.31.0
2023-11-02 19:35:37,812:INFO:          matplotlib: 3.8.0
2023-11-02 19:35:37,812:INFO:          scikitplot: 0.3.7
2023-11-02 19:35:37,812:INFO:         yellowbrick: 1.5
2023-11-02 19:35:37,812:INFO:              plotly: 5.17.0
2023-11-02 19:35:37,812:INFO:    plotly-resampler: Not installed
2023-11-02 19:35:37,812:INFO:             kaleido: 0.2.1
2023-11-02 19:35:37,812:INFO:           schemdraw: 0.15
2023-11-02 19:35:37,812:INFO:         statsmodels: 0.14.0
2023-11-02 19:35:37,812:INFO:              sktime: 0.21.1
2023-11-02 19:35:37,812:INFO:               tbats: 1.1.3
2023-11-02 19:35:37,812:INFO:            pmdarima: 2.0.3
2023-11-02 19:35:37,812:INFO:              psutil: 5.9.5
2023-11-02 19:35:37,813:INFO:          markupsafe: 2.1.3
2023-11-02 19:35:37,813:INFO:             pickle5: Not installed
2023-11-02 19:35:37,813:INFO:         cloudpickle: 2.2.1
2023-11-02 19:35:37,813:INFO:         deprecation: 2.1.0
2023-11-02 19:35:37,813:INFO:              xxhash: 3.3.0
2023-11-02 19:35:37,813:INFO:           wurlitzer: Not installed
2023-11-02 19:35:37,813:INFO:PyCaret optional dependencies:
2023-11-02 19:35:37,813:INFO:                shap: Not installed
2023-11-02 19:35:37,813:INFO:           interpret: Not installed
2023-11-02 19:35:37,813:INFO:                umap: Not installed
2023-11-02 19:35:37,813:INFO:     ydata_profiling: Not installed
2023-11-02 19:35:37,813:INFO:  explainerdashboard: Not installed
2023-11-02 19:35:37,813:INFO:             autoviz: Not installed
2023-11-02 19:35:37,813:INFO:           fairlearn: Not installed
2023-11-02 19:35:37,813:INFO:          deepchecks: Not installed
2023-11-02 19:35:37,813:INFO:             xgboost: 2.0.0
2023-11-02 19:35:37,813:INFO:            catboost: Not installed
2023-11-02 19:35:37,813:INFO:              kmodes: Not installed
2023-11-02 19:35:37,813:INFO:             mlxtend: Not installed
2023-11-02 19:35:37,813:INFO:       statsforecast: Not installed
2023-11-02 19:35:37,813:INFO:        tune_sklearn: Not installed
2023-11-02 19:35:37,813:INFO:                 ray: Not installed
2023-11-02 19:35:37,813:INFO:            hyperopt: Not installed
2023-11-02 19:35:37,813:INFO:              optuna: Not installed
2023-11-02 19:35:37,813:INFO:               skopt: Not installed
2023-11-02 19:35:37,813:INFO:              mlflow: Not installed
2023-11-02 19:35:37,813:INFO:              gradio: Not installed
2023-11-02 19:35:37,813:INFO:             fastapi: Not installed
2023-11-02 19:35:37,813:INFO:             uvicorn: Not installed
2023-11-02 19:35:37,813:INFO:              m2cgen: Not installed
2023-11-02 19:35:37,813:INFO:           evidently: Not installed
2023-11-02 19:35:37,813:INFO:               fugue: Not installed
2023-11-02 19:35:37,813:INFO:           streamlit: Not installed
2023-11-02 19:35:37,813:INFO:             prophet: Not installed
2023-11-02 19:35:37,813:INFO:None
2023-11-02 19:35:37,813:INFO:Set up data.
2023-11-02 19:35:37,825:INFO:Set up folding strategy.
2023-11-02 19:35:37,825:INFO:Set up train/test split.
2023-11-02 19:35:37,828:INFO:Set up index.
2023-11-02 19:35:37,828:INFO:Assigning column types.
2023-11-02 19:35:37,830:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:35:37,831:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,834:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,927:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:37,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:37,930:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,933:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,936:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:37,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,009:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,011:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:35:38,015:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,018:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,091:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,096:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,099:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,143:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,174:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,175:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,177:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:35:38,183:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,224:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,257:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,267:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,308:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,344:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,346:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:35:38,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,442:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,495:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,529:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,529:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,531:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:35:38,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,615:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,664:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:35:38,697:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,699:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:35:38,777:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,861:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:38,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:38,864:INFO:Preparing preprocessing pipeline...
2023-11-02 19:35:38,864:INFO:Set up simple imputation.
2023-11-02 19:35:38,866:INFO:Set up encoding of categorical features.
2023-11-02 19:35:38,927:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:35:38,932:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['year'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:35:38,932:INFO:Creating final display dataframe.
2023-11-02 19:35:39,127:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 4)
4        Transformed data shape       (12384, 15)
5   Transformed train set shape        (8668, 15)
6    Transformed test set shape        (3716, 15)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              d214
2023-11-02 19:35:39,219:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:39,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:39,304:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:35:39,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:35:39,308:INFO:setup() successfully completed in 1.5s...............
2023-11-02 19:35:39,336:INFO:Initializing compare_models()
2023-11-02 19:35:39,338:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:35:39,338:INFO:Checking exceptions
2023-11-02 19:35:39,340:INFO:Preparing display monitor
2023-11-02 19:35:39,361:INFO:Initializing Linear Regression
2023-11-02 19:35:39,361:INFO:Total runtime is 0.0 minutes
2023-11-02 19:35:39,364:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:39,365:INFO:Initializing create_model()
2023-11-02 19:35:39,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:39,365:INFO:Checking exceptions
2023-11-02 19:35:39,365:INFO:Importing libraries
2023-11-02 19:35:39,365:INFO:Copying training dataset
2023-11-02 19:35:39,369:INFO:Defining folds
2023-11-02 19:35:39,369:INFO:Declaring metric variables
2023-11-02 19:35:39,376:INFO:Importing untrained model
2023-11-02 19:35:39,378:INFO:Linear Regression Imported successfully
2023-11-02 19:35:39,385:INFO:Starting cross validation
2023-11-02 19:35:39,386:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:43,118:INFO:Calculating mean and std
2023-11-02 19:35:43,119:INFO:Creating metrics dataframe
2023-11-02 19:35:43,124:INFO:Uploading results into container
2023-11-02 19:35:43,125:INFO:Uploading model into container now
2023-11-02 19:35:43,127:INFO:_master_model_container: 1
2023-11-02 19:35:43,127:INFO:_display_container: 2
2023-11-02 19:35:43,128:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:35:43,128:INFO:create_model() successfully completed......................................
2023-11-02 19:35:43,341:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:43,341:INFO:Creating metrics dataframe
2023-11-02 19:35:43,349:INFO:Initializing Lasso Regression
2023-11-02 19:35:43,349:INFO:Total runtime is 0.06647873719533284 minutes
2023-11-02 19:35:43,351:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:43,352:INFO:Initializing create_model()
2023-11-02 19:35:43,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:43,352:INFO:Checking exceptions
2023-11-02 19:35:43,352:INFO:Importing libraries
2023-11-02 19:35:43,352:INFO:Copying training dataset
2023-11-02 19:35:43,356:INFO:Defining folds
2023-11-02 19:35:43,357:INFO:Declaring metric variables
2023-11-02 19:35:43,361:INFO:Importing untrained model
2023-11-02 19:35:43,364:INFO:Lasso Regression Imported successfully
2023-11-02 19:35:43,369:INFO:Starting cross validation
2023-11-02 19:35:43,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:43,604:INFO:Calculating mean and std
2023-11-02 19:35:43,605:INFO:Creating metrics dataframe
2023-11-02 19:35:43,607:INFO:Uploading results into container
2023-11-02 19:35:43,607:INFO:Uploading model into container now
2023-11-02 19:35:43,608:INFO:_master_model_container: 2
2023-11-02 19:35:43,608:INFO:_display_container: 2
2023-11-02 19:35:43,608:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:35:43,608:INFO:create_model() successfully completed......................................
2023-11-02 19:35:43,800:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:43,800:INFO:Creating metrics dataframe
2023-11-02 19:35:43,811:INFO:Initializing Ridge Regression
2023-11-02 19:35:43,811:INFO:Total runtime is 0.07417498032251994 minutes
2023-11-02 19:35:43,815:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:43,815:INFO:Initializing create_model()
2023-11-02 19:35:43,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:43,815:INFO:Checking exceptions
2023-11-02 19:35:43,815:INFO:Importing libraries
2023-11-02 19:35:43,815:INFO:Copying training dataset
2023-11-02 19:35:43,821:INFO:Defining folds
2023-11-02 19:35:43,821:INFO:Declaring metric variables
2023-11-02 19:35:43,828:INFO:Importing untrained model
2023-11-02 19:35:43,832:INFO:Ridge Regression Imported successfully
2023-11-02 19:35:43,838:INFO:Starting cross validation
2023-11-02 19:35:43,839:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:44,126:INFO:Calculating mean and std
2023-11-02 19:35:44,128:INFO:Creating metrics dataframe
2023-11-02 19:35:44,131:INFO:Uploading results into container
2023-11-02 19:35:44,132:INFO:Uploading model into container now
2023-11-02 19:35:44,132:INFO:_master_model_container: 3
2023-11-02 19:35:44,132:INFO:_display_container: 2
2023-11-02 19:35:44,133:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:35:44,133:INFO:create_model() successfully completed......................................
2023-11-02 19:35:44,347:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:44,347:INFO:Creating metrics dataframe
2023-11-02 19:35:44,353:INFO:Initializing Elastic Net
2023-11-02 19:35:44,353:INFO:Total runtime is 0.08321188688278199 minutes
2023-11-02 19:35:44,356:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:44,356:INFO:Initializing create_model()
2023-11-02 19:35:44,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:44,356:INFO:Checking exceptions
2023-11-02 19:35:44,356:INFO:Importing libraries
2023-11-02 19:35:44,356:INFO:Copying training dataset
2023-11-02 19:35:44,363:INFO:Defining folds
2023-11-02 19:35:44,363:INFO:Declaring metric variables
2023-11-02 19:35:44,367:INFO:Importing untrained model
2023-11-02 19:35:44,369:INFO:Elastic Net Imported successfully
2023-11-02 19:35:44,374:INFO:Starting cross validation
2023-11-02 19:35:44,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:44,610:INFO:Calculating mean and std
2023-11-02 19:35:44,612:INFO:Creating metrics dataframe
2023-11-02 19:35:44,615:INFO:Uploading results into container
2023-11-02 19:35:44,616:INFO:Uploading model into container now
2023-11-02 19:35:44,616:INFO:_master_model_container: 4
2023-11-02 19:35:44,616:INFO:_display_container: 2
2023-11-02 19:35:44,616:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:35:44,616:INFO:create_model() successfully completed......................................
2023-11-02 19:35:44,807:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:44,807:INFO:Creating metrics dataframe
2023-11-02 19:35:44,815:INFO:Initializing Least Angle Regression
2023-11-02 19:35:44,815:INFO:Total runtime is 0.09089847008387247 minutes
2023-11-02 19:35:44,818:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:44,818:INFO:Initializing create_model()
2023-11-02 19:35:44,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:44,818:INFO:Checking exceptions
2023-11-02 19:35:44,818:INFO:Importing libraries
2023-11-02 19:35:44,818:INFO:Copying training dataset
2023-11-02 19:35:44,822:INFO:Defining folds
2023-11-02 19:35:44,822:INFO:Declaring metric variables
2023-11-02 19:35:44,825:INFO:Importing untrained model
2023-11-02 19:35:44,831:INFO:Least Angle Regression Imported successfully
2023-11-02 19:35:44,835:INFO:Starting cross validation
2023-11-02 19:35:44,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:45,083:INFO:Calculating mean and std
2023-11-02 19:35:45,084:INFO:Creating metrics dataframe
2023-11-02 19:35:45,086:INFO:Uploading results into container
2023-11-02 19:35:45,087:INFO:Uploading model into container now
2023-11-02 19:35:45,087:INFO:_master_model_container: 5
2023-11-02 19:35:45,087:INFO:_display_container: 2
2023-11-02 19:35:45,087:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:35:45,087:INFO:create_model() successfully completed......................................
2023-11-02 19:35:45,303:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:45,303:INFO:Creating metrics dataframe
2023-11-02 19:35:45,314:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:35:45,314:INFO:Total runtime is 0.09922725359598795 minutes
2023-11-02 19:35:45,318:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:45,318:INFO:Initializing create_model()
2023-11-02 19:35:45,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:45,318:INFO:Checking exceptions
2023-11-02 19:35:45,318:INFO:Importing libraries
2023-11-02 19:35:45,318:INFO:Copying training dataset
2023-11-02 19:35:45,324:INFO:Defining folds
2023-11-02 19:35:45,324:INFO:Declaring metric variables
2023-11-02 19:35:45,330:INFO:Importing untrained model
2023-11-02 19:35:45,334:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:35:45,341:INFO:Starting cross validation
2023-11-02 19:35:45,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:45,580:INFO:Calculating mean and std
2023-11-02 19:35:45,580:INFO:Creating metrics dataframe
2023-11-02 19:35:45,582:INFO:Uploading results into container
2023-11-02 19:35:45,583:INFO:Uploading model into container now
2023-11-02 19:35:45,583:INFO:_master_model_container: 6
2023-11-02 19:35:45,583:INFO:_display_container: 2
2023-11-02 19:35:45,583:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:35:45,583:INFO:create_model() successfully completed......................................
2023-11-02 19:35:45,777:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:45,778:INFO:Creating metrics dataframe
2023-11-02 19:35:45,786:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:35:45,787:INFO:Total runtime is 0.10709888537724813 minutes
2023-11-02 19:35:45,790:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:45,791:INFO:Initializing create_model()
2023-11-02 19:35:45,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:45,791:INFO:Checking exceptions
2023-11-02 19:35:45,791:INFO:Importing libraries
2023-11-02 19:35:45,791:INFO:Copying training dataset
2023-11-02 19:35:45,796:INFO:Defining folds
2023-11-02 19:35:45,797:INFO:Declaring metric variables
2023-11-02 19:35:45,799:INFO:Importing untrained model
2023-11-02 19:35:45,803:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:35:45,807:INFO:Starting cross validation
2023-11-02 19:35:45,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:46,026:INFO:Calculating mean and std
2023-11-02 19:35:46,027:INFO:Creating metrics dataframe
2023-11-02 19:35:46,031:INFO:Uploading results into container
2023-11-02 19:35:46,032:INFO:Uploading model into container now
2023-11-02 19:35:46,033:INFO:_master_model_container: 7
2023-11-02 19:35:46,033:INFO:_display_container: 2
2023-11-02 19:35:46,033:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:35:46,033:INFO:create_model() successfully completed......................................
2023-11-02 19:35:46,218:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:46,218:INFO:Creating metrics dataframe
2023-11-02 19:35:46,225:INFO:Initializing Bayesian Ridge
2023-11-02 19:35:46,225:INFO:Total runtime is 0.11440293788909912 minutes
2023-11-02 19:35:46,228:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:46,228:INFO:Initializing create_model()
2023-11-02 19:35:46,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:46,229:INFO:Checking exceptions
2023-11-02 19:35:46,229:INFO:Importing libraries
2023-11-02 19:35:46,229:INFO:Copying training dataset
2023-11-02 19:35:46,234:INFO:Defining folds
2023-11-02 19:35:46,234:INFO:Declaring metric variables
2023-11-02 19:35:46,237:INFO:Importing untrained model
2023-11-02 19:35:46,241:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:35:46,247:INFO:Starting cross validation
2023-11-02 19:35:46,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:46,504:INFO:Calculating mean and std
2023-11-02 19:35:46,505:INFO:Creating metrics dataframe
2023-11-02 19:35:46,506:INFO:Uploading results into container
2023-11-02 19:35:46,506:INFO:Uploading model into container now
2023-11-02 19:35:46,507:INFO:_master_model_container: 8
2023-11-02 19:35:46,507:INFO:_display_container: 2
2023-11-02 19:35:46,507:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:35:46,507:INFO:create_model() successfully completed......................................
2023-11-02 19:35:46,721:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:46,721:INFO:Creating metrics dataframe
2023-11-02 19:35:46,730:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:35:46,730:INFO:Total runtime is 0.12281713088353476 minutes
2023-11-02 19:35:46,733:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:46,733:INFO:Initializing create_model()
2023-11-02 19:35:46,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:46,734:INFO:Checking exceptions
2023-11-02 19:35:46,734:INFO:Importing libraries
2023-11-02 19:35:46,734:INFO:Copying training dataset
2023-11-02 19:35:46,738:INFO:Defining folds
2023-11-02 19:35:46,738:INFO:Declaring metric variables
2023-11-02 19:35:46,740:INFO:Importing untrained model
2023-11-02 19:35:46,744:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:35:46,751:INFO:Starting cross validation
2023-11-02 19:35:46,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:46,994:INFO:Calculating mean and std
2023-11-02 19:35:46,997:INFO:Creating metrics dataframe
2023-11-02 19:35:46,999:INFO:Uploading results into container
2023-11-02 19:35:46,999:INFO:Uploading model into container now
2023-11-02 19:35:47,000:INFO:_master_model_container: 9
2023-11-02 19:35:47,000:INFO:_display_container: 2
2023-11-02 19:35:47,000:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:35:47,000:INFO:create_model() successfully completed......................................
2023-11-02 19:35:47,186:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:47,186:INFO:Creating metrics dataframe
2023-11-02 19:35:47,194:INFO:Initializing Huber Regressor
2023-11-02 19:35:47,194:INFO:Total runtime is 0.13055657545725505 minutes
2023-11-02 19:35:47,199:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:47,199:INFO:Initializing create_model()
2023-11-02 19:35:47,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:47,199:INFO:Checking exceptions
2023-11-02 19:35:47,199:INFO:Importing libraries
2023-11-02 19:35:47,199:INFO:Copying training dataset
2023-11-02 19:35:47,204:INFO:Defining folds
2023-11-02 19:35:47,204:INFO:Declaring metric variables
2023-11-02 19:35:47,207:INFO:Importing untrained model
2023-11-02 19:35:47,211:INFO:Huber Regressor Imported successfully
2023-11-02 19:35:47,218:INFO:Starting cross validation
2023-11-02 19:35:47,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:47,611:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,618:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,628:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,632:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,635:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,656:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,798:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:35:47,823:INFO:Calculating mean and std
2023-11-02 19:35:47,824:INFO:Creating metrics dataframe
2023-11-02 19:35:47,827:INFO:Uploading results into container
2023-11-02 19:35:47,827:INFO:Uploading model into container now
2023-11-02 19:35:47,827:INFO:_master_model_container: 10
2023-11-02 19:35:47,827:INFO:_display_container: 2
2023-11-02 19:35:47,827:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:35:47,828:INFO:create_model() successfully completed......................................
2023-11-02 19:35:48,011:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:48,011:INFO:Creating metrics dataframe
2023-11-02 19:35:48,020:INFO:Initializing K Neighbors Regressor
2023-11-02 19:35:48,020:INFO:Total runtime is 0.14432422717412313 minutes
2023-11-02 19:35:48,024:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:48,024:INFO:Initializing create_model()
2023-11-02 19:35:48,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:48,024:INFO:Checking exceptions
2023-11-02 19:35:48,024:INFO:Importing libraries
2023-11-02 19:35:48,024:INFO:Copying training dataset
2023-11-02 19:35:48,029:INFO:Defining folds
2023-11-02 19:35:48,031:INFO:Declaring metric variables
2023-11-02 19:35:48,035:INFO:Importing untrained model
2023-11-02 19:35:48,037:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:35:48,043:INFO:Starting cross validation
2023-11-02 19:35:48,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:48,368:INFO:Calculating mean and std
2023-11-02 19:35:48,369:INFO:Creating metrics dataframe
2023-11-02 19:35:48,371:INFO:Uploading results into container
2023-11-02 19:35:48,372:INFO:Uploading model into container now
2023-11-02 19:35:48,372:INFO:_master_model_container: 11
2023-11-02 19:35:48,372:INFO:_display_container: 2
2023-11-02 19:35:48,372:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:35:48,372:INFO:create_model() successfully completed......................................
2023-11-02 19:35:48,560:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:48,560:INFO:Creating metrics dataframe
2023-11-02 19:35:48,569:INFO:Initializing Decision Tree Regressor
2023-11-02 19:35:48,569:INFO:Total runtime is 0.15347063938776653 minutes
2023-11-02 19:35:48,572:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:48,572:INFO:Initializing create_model()
2023-11-02 19:35:48,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:48,572:INFO:Checking exceptions
2023-11-02 19:35:48,572:INFO:Importing libraries
2023-11-02 19:35:48,572:INFO:Copying training dataset
2023-11-02 19:35:48,576:INFO:Defining folds
2023-11-02 19:35:48,576:INFO:Declaring metric variables
2023-11-02 19:35:48,579:INFO:Importing untrained model
2023-11-02 19:35:48,585:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:35:48,590:INFO:Starting cross validation
2023-11-02 19:35:48,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:48,862:INFO:Calculating mean and std
2023-11-02 19:35:48,865:INFO:Creating metrics dataframe
2023-11-02 19:35:48,867:INFO:Uploading results into container
2023-11-02 19:35:48,868:INFO:Uploading model into container now
2023-11-02 19:35:48,868:INFO:_master_model_container: 12
2023-11-02 19:35:48,868:INFO:_display_container: 2
2023-11-02 19:35:48,869:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:35:48,869:INFO:create_model() successfully completed......................................
2023-11-02 19:35:49,055:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:49,055:INFO:Creating metrics dataframe
2023-11-02 19:35:49,063:INFO:Initializing Random Forest Regressor
2023-11-02 19:35:49,063:INFO:Total runtime is 0.1616976340611776 minutes
2023-11-02 19:35:49,067:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:49,068:INFO:Initializing create_model()
2023-11-02 19:35:49,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:49,068:INFO:Checking exceptions
2023-11-02 19:35:49,068:INFO:Importing libraries
2023-11-02 19:35:49,068:INFO:Copying training dataset
2023-11-02 19:35:49,072:INFO:Defining folds
2023-11-02 19:35:49,072:INFO:Declaring metric variables
2023-11-02 19:35:49,075:INFO:Importing untrained model
2023-11-02 19:35:49,078:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:35:49,086:INFO:Starting cross validation
2023-11-02 19:35:49,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:52,057:INFO:Calculating mean and std
2023-11-02 19:35:52,058:INFO:Creating metrics dataframe
2023-11-02 19:35:52,059:INFO:Uploading results into container
2023-11-02 19:35:52,060:INFO:Uploading model into container now
2023-11-02 19:35:52,060:INFO:_master_model_container: 13
2023-11-02 19:35:52,060:INFO:_display_container: 2
2023-11-02 19:35:52,060:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:35:52,060:INFO:create_model() successfully completed......................................
2023-11-02 19:35:52,241:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:52,241:INFO:Creating metrics dataframe
2023-11-02 19:35:52,249:INFO:Initializing Extra Trees Regressor
2023-11-02 19:35:52,249:INFO:Total runtime is 0.21481001377105716 minutes
2023-11-02 19:35:52,253:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:52,253:INFO:Initializing create_model()
2023-11-02 19:35:52,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:52,253:INFO:Checking exceptions
2023-11-02 19:35:52,253:INFO:Importing libraries
2023-11-02 19:35:52,253:INFO:Copying training dataset
2023-11-02 19:35:52,257:INFO:Defining folds
2023-11-02 19:35:52,258:INFO:Declaring metric variables
2023-11-02 19:35:52,260:INFO:Importing untrained model
2023-11-02 19:35:52,263:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:35:52,271:INFO:Starting cross validation
2023-11-02 19:35:52,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:54,728:INFO:Calculating mean and std
2023-11-02 19:35:54,730:INFO:Creating metrics dataframe
2023-11-02 19:35:54,733:INFO:Uploading results into container
2023-11-02 19:35:54,734:INFO:Uploading model into container now
2023-11-02 19:35:54,734:INFO:_master_model_container: 14
2023-11-02 19:35:54,734:INFO:_display_container: 2
2023-11-02 19:35:54,735:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:35:54,735:INFO:create_model() successfully completed......................................
2023-11-02 19:35:54,925:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:54,925:INFO:Creating metrics dataframe
2023-11-02 19:35:54,933:INFO:Initializing AdaBoost Regressor
2023-11-02 19:35:54,933:INFO:Total runtime is 0.2595329999923706 minutes
2023-11-02 19:35:54,936:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:54,936:INFO:Initializing create_model()
2023-11-02 19:35:54,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:54,936:INFO:Checking exceptions
2023-11-02 19:35:54,936:INFO:Importing libraries
2023-11-02 19:35:54,937:INFO:Copying training dataset
2023-11-02 19:35:54,941:INFO:Defining folds
2023-11-02 19:35:54,942:INFO:Declaring metric variables
2023-11-02 19:35:54,944:INFO:Importing untrained model
2023-11-02 19:35:54,947:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:35:54,952:INFO:Starting cross validation
2023-11-02 19:35:54,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:55,785:INFO:Calculating mean and std
2023-11-02 19:35:55,786:INFO:Creating metrics dataframe
2023-11-02 19:35:55,789:INFO:Uploading results into container
2023-11-02 19:35:55,790:INFO:Uploading model into container now
2023-11-02 19:35:55,790:INFO:_master_model_container: 15
2023-11-02 19:35:55,790:INFO:_display_container: 2
2023-11-02 19:35:55,790:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:35:55,791:INFO:create_model() successfully completed......................................
2023-11-02 19:35:55,977:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:55,977:INFO:Creating metrics dataframe
2023-11-02 19:35:55,986:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:35:55,987:INFO:Total runtime is 0.2771004637082418 minutes
2023-11-02 19:35:55,991:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:55,991:INFO:Initializing create_model()
2023-11-02 19:35:55,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:55,991:INFO:Checking exceptions
2023-11-02 19:35:55,991:INFO:Importing libraries
2023-11-02 19:35:55,991:INFO:Copying training dataset
2023-11-02 19:35:55,995:INFO:Defining folds
2023-11-02 19:35:55,995:INFO:Declaring metric variables
2023-11-02 19:35:55,998:INFO:Importing untrained model
2023-11-02 19:35:56,000:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:35:56,007:INFO:Starting cross validation
2023-11-02 19:35:56,009:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:56,987:INFO:Calculating mean and std
2023-11-02 19:35:56,989:INFO:Creating metrics dataframe
2023-11-02 19:35:56,992:INFO:Uploading results into container
2023-11-02 19:35:56,992:INFO:Uploading model into container now
2023-11-02 19:35:56,993:INFO:_master_model_container: 16
2023-11-02 19:35:56,993:INFO:_display_container: 2
2023-11-02 19:35:56,993:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:35:56,993:INFO:create_model() successfully completed......................................
2023-11-02 19:35:57,185:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:57,185:INFO:Creating metrics dataframe
2023-11-02 19:35:57,197:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:35:57,197:INFO:Total runtime is 0.29726389646530155 minutes
2023-11-02 19:35:57,199:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:57,199:INFO:Initializing create_model()
2023-11-02 19:35:57,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:57,199:INFO:Checking exceptions
2023-11-02 19:35:57,199:INFO:Importing libraries
2023-11-02 19:35:57,199:INFO:Copying training dataset
2023-11-02 19:35:57,206:INFO:Defining folds
2023-11-02 19:35:57,206:INFO:Declaring metric variables
2023-11-02 19:35:57,209:INFO:Importing untrained model
2023-11-02 19:35:57,212:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:35:57,217:INFO:Starting cross validation
2023-11-02 19:35:57,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:57,698:INFO:Calculating mean and std
2023-11-02 19:35:57,698:INFO:Creating metrics dataframe
2023-11-02 19:35:57,701:INFO:Uploading results into container
2023-11-02 19:35:57,701:INFO:Uploading model into container now
2023-11-02 19:35:57,701:INFO:_master_model_container: 17
2023-11-02 19:35:57,702:INFO:_display_container: 2
2023-11-02 19:35:57,702:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:35:57,703:INFO:create_model() successfully completed......................................
2023-11-02 19:35:57,890:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:57,890:INFO:Creating metrics dataframe
2023-11-02 19:35:57,898:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:35:57,898:INFO:Total runtime is 0.3089526494344076 minutes
2023-11-02 19:35:57,900:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:57,901:INFO:Initializing create_model()
2023-11-02 19:35:57,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:57,901:INFO:Checking exceptions
2023-11-02 19:35:57,901:INFO:Importing libraries
2023-11-02 19:35:57,901:INFO:Copying training dataset
2023-11-02 19:35:57,907:INFO:Defining folds
2023-11-02 19:35:57,907:INFO:Declaring metric variables
2023-11-02 19:35:57,910:INFO:Importing untrained model
2023-11-02 19:35:57,913:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:35:57,917:INFO:Starting cross validation
2023-11-02 19:35:57,918:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:58,597:INFO:Calculating mean and std
2023-11-02 19:35:58,598:INFO:Creating metrics dataframe
2023-11-02 19:35:58,602:INFO:Uploading results into container
2023-11-02 19:35:58,602:INFO:Uploading model into container now
2023-11-02 19:35:58,603:INFO:_master_model_container: 18
2023-11-02 19:35:58,603:INFO:_display_container: 2
2023-11-02 19:35:58,604:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:35:58,604:INFO:create_model() successfully completed......................................
2023-11-02 19:35:58,818:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:58,819:INFO:Creating metrics dataframe
2023-11-02 19:35:58,828:INFO:Initializing Dummy Regressor
2023-11-02 19:35:58,828:INFO:Total runtime is 0.3244513789812724 minutes
2023-11-02 19:35:58,830:INFO:SubProcess create_model() called ==================================
2023-11-02 19:35:58,830:INFO:Initializing create_model()
2023-11-02 19:35:58,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022BC7091810>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:58,830:INFO:Checking exceptions
2023-11-02 19:35:58,831:INFO:Importing libraries
2023-11-02 19:35:58,831:INFO:Copying training dataset
2023-11-02 19:35:58,835:INFO:Defining folds
2023-11-02 19:35:58,835:INFO:Declaring metric variables
2023-11-02 19:35:58,838:INFO:Importing untrained model
2023-11-02 19:35:58,843:INFO:Dummy Regressor Imported successfully
2023-11-02 19:35:58,849:INFO:Starting cross validation
2023-11-02 19:35:58,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:35:59,059:INFO:Calculating mean and std
2023-11-02 19:35:59,060:INFO:Creating metrics dataframe
2023-11-02 19:35:59,063:INFO:Uploading results into container
2023-11-02 19:35:59,064:INFO:Uploading model into container now
2023-11-02 19:35:59,064:INFO:_master_model_container: 19
2023-11-02 19:35:59,064:INFO:_display_container: 2
2023-11-02 19:35:59,064:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:35:59,064:INFO:create_model() successfully completed......................................
2023-11-02 19:35:59,246:INFO:SubProcess create_model() end ==================================
2023-11-02 19:35:59,246:INFO:Creating metrics dataframe
2023-11-02 19:35:59,264:INFO:Initializing create_model()
2023-11-02 19:35:59,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:59,265:INFO:Checking exceptions
2023-11-02 19:35:59,266:INFO:Importing libraries
2023-11-02 19:35:59,266:INFO:Copying training dataset
2023-11-02 19:35:59,269:INFO:Defining folds
2023-11-02 19:35:59,269:INFO:Declaring metric variables
2023-11-02 19:35:59,270:INFO:Importing untrained model
2023-11-02 19:35:59,270:INFO:Declaring custom model
2023-11-02 19:35:59,271:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:35:59,273:INFO:Cross validation set to False
2023-11-02 19:35:59,273:INFO:Fitting Model
2023-11-02 19:35:59,379:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:35:59,379:INFO:create_model() successfully completed......................................
2023-11-02 19:35:59,590:INFO:Initializing create_model()
2023-11-02 19:35:59,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:35:59,591:INFO:Checking exceptions
2023-11-02 19:35:59,593:INFO:Importing libraries
2023-11-02 19:35:59,593:INFO:Copying training dataset
2023-11-02 19:35:59,596:INFO:Defining folds
2023-11-02 19:35:59,596:INFO:Declaring metric variables
2023-11-02 19:35:59,596:INFO:Importing untrained model
2023-11-02 19:35:59,596:INFO:Declaring custom model
2023-11-02 19:35:59,596:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:35:59,596:INFO:Cross validation set to False
2023-11-02 19:35:59,596:INFO:Fitting Model
2023-11-02 19:35:59,986:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:35:59,986:INFO:create_model() successfully completed......................................
2023-11-02 19:36:00,177:INFO:Initializing create_model()
2023-11-02 19:36:00,177:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:36:00,177:INFO:Checking exceptions
2023-11-02 19:36:00,179:INFO:Importing libraries
2023-11-02 19:36:00,179:INFO:Copying training dataset
2023-11-02 19:36:00,182:INFO:Defining folds
2023-11-02 19:36:00,182:INFO:Declaring metric variables
2023-11-02 19:36:00,182:INFO:Importing untrained model
2023-11-02 19:36:00,182:INFO:Declaring custom model
2023-11-02 19:36:00,182:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:36:00,183:INFO:Cross validation set to False
2023-11-02 19:36:00,183:INFO:Fitting Model
2023-11-02 19:36:00,230:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:36:00,230:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000039 seconds.
2023-11-02 19:36:00,230:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-02 19:36:00,230:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-02 19:36:00,230:INFO:[LightGBM] [Info] Total Bins 286
2023-11-02 19:36:00,231:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 14
2023-11-02 19:36:00,231:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:36:00,277:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:36:00,277:INFO:create_model() successfully completed......................................
2023-11-02 19:36:00,484:INFO:Initializing create_model()
2023-11-02 19:36:00,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:36:00,485:INFO:Checking exceptions
2023-11-02 19:36:00,487:INFO:Importing libraries
2023-11-02 19:36:00,487:INFO:Copying training dataset
2023-11-02 19:36:00,491:INFO:Defining folds
2023-11-02 19:36:00,491:INFO:Declaring metric variables
2023-11-02 19:36:00,491:INFO:Importing untrained model
2023-11-02 19:36:00,491:INFO:Declaring custom model
2023-11-02 19:36:00,492:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:36:00,493:INFO:Cross validation set to False
2023-11-02 19:36:00,493:INFO:Fitting Model
2023-11-02 19:36:00,809:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:36:00,809:INFO:create_model() successfully completed......................................
2023-11-02 19:36:00,997:INFO:Initializing create_model()
2023-11-02 19:36:00,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:36:00,997:INFO:Checking exceptions
2023-11-02 19:36:00,999:INFO:Importing libraries
2023-11-02 19:36:00,999:INFO:Copying training dataset
2023-11-02 19:36:01,002:INFO:Defining folds
2023-11-02 19:36:01,003:INFO:Declaring metric variables
2023-11-02 19:36:01,003:INFO:Importing untrained model
2023-11-02 19:36:01,003:INFO:Declaring custom model
2023-11-02 19:36:01,003:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:36:01,004:INFO:Cross validation set to False
2023-11-02 19:36:01,004:INFO:Fitting Model
2023-11-02 19:36:01,062:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:36:01,062:INFO:create_model() successfully completed......................................
2023-11-02 19:36:01,265:INFO:_master_model_container: 19
2023-11-02 19:36:01,265:INFO:_display_container: 2
2023-11-02 19:36:01,266:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:36:01,266:INFO:compare_models() successfully completed......................................
2023-11-02 19:36:01,338:INFO:Initializing evaluate_model()
2023-11-02 19:36:01,338:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:36:01,350:INFO:Initializing plot_model()
2023-11-02 19:36:01,350:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, system=True)
2023-11-02 19:36:01,350:INFO:Checking exceptions
2023-11-02 19:36:01,352:INFO:Preloading libraries
2023-11-02 19:36:01,359:INFO:Copying training dataset
2023-11-02 19:36:01,359:INFO:Plot type: pipeline
2023-11-02 19:36:01,514:INFO:Visual Rendered Successfully
2023-11-02 19:36:01,747:INFO:plot_model() successfully completed......................................
2023-11-02 19:36:01,806:INFO:Initializing tune_model()
2023-11-02 19:36:01,807:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>)
2023-11-02 19:36:01,807:INFO:Checking exceptions
2023-11-02 19:36:01,825:INFO:Copying training dataset
2023-11-02 19:36:01,831:INFO:Checking base model
2023-11-02 19:36:01,833:INFO:Base model : Extreme Gradient Boosting
2023-11-02 19:36:01,836:INFO:Declaring metric variables
2023-11-02 19:36:01,840:INFO:Defining Hyperparameters
2023-11-02 19:36:02,170:INFO:Tuning with n_jobs=-1
2023-11-02 19:36:02,170:INFO:Initializing RandomizedSearchCV
2023-11-02 19:36:14,454:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 19:36:14,455:INFO:Hyperparameter search completed
2023-11-02 19:36:14,455:INFO:SubProcess create_model() called ==================================
2023-11-02 19:36:14,457:INFO:Initializing create_model()
2023-11-02 19:36:14,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B99F29D50>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 19:36:14,457:INFO:Checking exceptions
2023-11-02 19:36:14,457:INFO:Importing libraries
2023-11-02 19:36:14,457:INFO:Copying training dataset
2023-11-02 19:36:14,465:INFO:Defining folds
2023-11-02 19:36:14,465:INFO:Declaring metric variables
2023-11-02 19:36:14,470:INFO:Importing untrained model
2023-11-02 19:36:14,470:INFO:Declaring custom model
2023-11-02 19:36:14,475:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:36:14,483:INFO:Starting cross validation
2023-11-02 19:36:14,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:36:16,665:INFO:Calculating mean and std
2023-11-02 19:36:16,667:INFO:Creating metrics dataframe
2023-11-02 19:36:16,674:INFO:Finalizing model
2023-11-02 19:36:17,068:INFO:Uploading results into container
2023-11-02 19:36:17,069:INFO:Uploading model into container now
2023-11-02 19:36:17,070:INFO:_master_model_container: 20
2023-11-02 19:36:17,070:INFO:_display_container: 3
2023-11-02 19:36:17,071:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:36:17,072:INFO:create_model() successfully completed......................................
2023-11-02 19:36:17,313:INFO:SubProcess create_model() end ==================================
2023-11-02 19:36:17,313:INFO:choose_better activated
2023-11-02 19:36:17,315:INFO:SubProcess create_model() called ==================================
2023-11-02 19:36:17,316:INFO:Initializing create_model()
2023-11-02 19:36:17,316:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:36:17,316:INFO:Checking exceptions
2023-11-02 19:36:17,317:INFO:Importing libraries
2023-11-02 19:36:17,317:INFO:Copying training dataset
2023-11-02 19:36:17,323:INFO:Defining folds
2023-11-02 19:36:17,323:INFO:Declaring metric variables
2023-11-02 19:36:17,323:INFO:Importing untrained model
2023-11-02 19:36:17,323:INFO:Declaring custom model
2023-11-02 19:36:17,324:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:36:17,324:INFO:Starting cross validation
2023-11-02 19:36:17,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:36:18,097:INFO:Calculating mean and std
2023-11-02 19:36:18,097:INFO:Creating metrics dataframe
2023-11-02 19:36:18,099:INFO:Finalizing model
2023-11-02 19:36:18,259:INFO:Uploading results into container
2023-11-02 19:36:18,259:INFO:Uploading model into container now
2023-11-02 19:36:18,260:INFO:_master_model_container: 21
2023-11-02 19:36:18,260:INFO:_display_container: 4
2023-11-02 19:36:18,261:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:36:18,261:INFO:create_model() successfully completed......................................
2023-11-02 19:36:18,495:INFO:SubProcess create_model() end ==================================
2023-11-02 19:36:18,496:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9588
2023-11-02 19:36:18,497:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9578
2023-11-02 19:36:18,497:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 19:36:18,497:INFO:choose_better completed
2023-11-02 19:36:18,498:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-02 19:36:18,506:INFO:_master_model_container: 21
2023-11-02 19:36:18,506:INFO:_display_container: 3
2023-11-02 19:36:18,507:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:36:18,507:INFO:tune_model() successfully completed......................................
2023-11-02 19:36:53,394:INFO:Initializing plot_model()
2023-11-02 19:36:53,394:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99ADFF70>, system=True)
2023-11-02 19:36:53,394:INFO:Checking exceptions
2023-11-02 19:36:53,395:INFO:Preloading libraries
2023-11-02 19:36:53,404:INFO:Copying training dataset
2023-11-02 19:36:53,404:INFO:Plot type: feature_all
2023-11-02 19:36:53,471:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:36:53,745:INFO:Visual Rendered Successfully
2023-11-02 19:36:53,919:INFO:plot_model() successfully completed......................................
2023-11-02 19:37:20,893:INFO:PyCaret RegressionExperiment
2023-11-02 19:37:20,893:INFO:Logging name: reg-default-name
2023-11-02 19:37:20,893:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:37:20,893:INFO:version 3.1.0
2023-11-02 19:37:20,893:INFO:Initializing setup()
2023-11-02 19:37:20,893:INFO:self.USI: 14de
2023-11-02 19:37:20,893:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:37:20,893:INFO:Checking environment
2023-11-02 19:37:20,893:INFO:python_version: 3.10.2
2023-11-02 19:37:20,893:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:37:20,893:INFO:machine: AMD64
2023-11-02 19:37:20,893:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:37:20,898:INFO:Memory: svmem(total=16952647680, available=2969292800, percent=82.5, used=13983354880, free=2969292800)
2023-11-02 19:37:20,898:INFO:Physical Core: 4
2023-11-02 19:37:20,898:INFO:Logical Core: 8
2023-11-02 19:37:20,898:INFO:Checking libraries
2023-11-02 19:37:20,898:INFO:System:
2023-11-02 19:37:20,898:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:37:20,898:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:37:20,898:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:37:20,899:INFO:PyCaret required dependencies:
2023-11-02 19:37:20,899:INFO:                 pip: 23.0.1
2023-11-02 19:37:20,899:INFO:          setuptools: 65.5.0
2023-11-02 19:37:20,899:INFO:             pycaret: 3.1.0
2023-11-02 19:37:20,899:INFO:             IPython: 8.15.0
2023-11-02 19:37:20,899:INFO:          ipywidgets: 8.1.1
2023-11-02 19:37:20,899:INFO:                tqdm: 4.66.1
2023-11-02 19:37:20,899:INFO:               numpy: 1.23.5
2023-11-02 19:37:20,899:INFO:              pandas: 1.5.3
2023-11-02 19:37:20,899:INFO:              jinja2: 3.1.2
2023-11-02 19:37:20,899:INFO:               scipy: 1.10.1
2023-11-02 19:37:20,899:INFO:              joblib: 1.3.2
2023-11-02 19:37:20,899:INFO:             sklearn: 1.2.2
2023-11-02 19:37:20,899:INFO:                pyod: 1.1.0
2023-11-02 19:37:20,899:INFO:            imblearn: 0.11.0
2023-11-02 19:37:20,899:INFO:   category_encoders: 2.6.2
2023-11-02 19:37:20,899:INFO:            lightgbm: 4.1.0
2023-11-02 19:37:20,899:INFO:               numba: 0.58.0
2023-11-02 19:37:20,899:INFO:            requests: 2.31.0
2023-11-02 19:37:20,899:INFO:          matplotlib: 3.8.0
2023-11-02 19:37:20,899:INFO:          scikitplot: 0.3.7
2023-11-02 19:37:20,899:INFO:         yellowbrick: 1.5
2023-11-02 19:37:20,899:INFO:              plotly: 5.17.0
2023-11-02 19:37:20,899:INFO:    plotly-resampler: Not installed
2023-11-02 19:37:20,899:INFO:             kaleido: 0.2.1
2023-11-02 19:37:20,899:INFO:           schemdraw: 0.15
2023-11-02 19:37:20,899:INFO:         statsmodels: 0.14.0
2023-11-02 19:37:20,899:INFO:              sktime: 0.21.1
2023-11-02 19:37:20,899:INFO:               tbats: 1.1.3
2023-11-02 19:37:20,899:INFO:            pmdarima: 2.0.3
2023-11-02 19:37:20,899:INFO:              psutil: 5.9.5
2023-11-02 19:37:20,899:INFO:          markupsafe: 2.1.3
2023-11-02 19:37:20,899:INFO:             pickle5: Not installed
2023-11-02 19:37:20,899:INFO:         cloudpickle: 2.2.1
2023-11-02 19:37:20,899:INFO:         deprecation: 2.1.0
2023-11-02 19:37:20,899:INFO:              xxhash: 3.3.0
2023-11-02 19:37:20,899:INFO:           wurlitzer: Not installed
2023-11-02 19:37:20,899:INFO:PyCaret optional dependencies:
2023-11-02 19:37:20,899:INFO:                shap: Not installed
2023-11-02 19:37:20,900:INFO:           interpret: Not installed
2023-11-02 19:37:20,900:INFO:                umap: Not installed
2023-11-02 19:37:20,900:INFO:     ydata_profiling: Not installed
2023-11-02 19:37:20,900:INFO:  explainerdashboard: Not installed
2023-11-02 19:37:20,900:INFO:             autoviz: Not installed
2023-11-02 19:37:20,900:INFO:           fairlearn: Not installed
2023-11-02 19:37:20,900:INFO:          deepchecks: Not installed
2023-11-02 19:37:20,900:INFO:             xgboost: 2.0.0
2023-11-02 19:37:20,900:INFO:            catboost: Not installed
2023-11-02 19:37:20,900:INFO:              kmodes: Not installed
2023-11-02 19:37:20,900:INFO:             mlxtend: Not installed
2023-11-02 19:37:20,900:INFO:       statsforecast: Not installed
2023-11-02 19:37:20,900:INFO:        tune_sklearn: Not installed
2023-11-02 19:37:20,900:INFO:                 ray: Not installed
2023-11-02 19:37:20,900:INFO:            hyperopt: Not installed
2023-11-02 19:37:20,900:INFO:              optuna: Not installed
2023-11-02 19:37:20,900:INFO:               skopt: Not installed
2023-11-02 19:37:20,900:INFO:              mlflow: Not installed
2023-11-02 19:37:20,900:INFO:              gradio: Not installed
2023-11-02 19:37:20,900:INFO:             fastapi: Not installed
2023-11-02 19:37:20,900:INFO:             uvicorn: Not installed
2023-11-02 19:37:20,900:INFO:              m2cgen: Not installed
2023-11-02 19:37:20,900:INFO:           evidently: Not installed
2023-11-02 19:37:20,900:INFO:               fugue: Not installed
2023-11-02 19:37:20,900:INFO:           streamlit: Not installed
2023-11-02 19:37:20,900:INFO:             prophet: Not installed
2023-11-02 19:37:20,900:INFO:None
2023-11-02 19:37:20,900:INFO:Set up data.
2023-11-02 19:37:20,911:INFO:Set up folding strategy.
2023-11-02 19:37:20,912:INFO:Set up train/test split.
2023-11-02 19:37:20,915:INFO:Set up index.
2023-11-02 19:37:20,915:INFO:Assigning column types.
2023-11-02 19:37:20,917:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:37:20,917:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:37:20,921:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:37:20,926:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:20,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,012:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,014:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,017:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,095:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,097:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:37:21,100:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,103:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,146:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,181:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,188:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,192:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,267:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,269:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:37:21,280:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,321:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,353:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,354:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,362:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,439:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,439:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,442:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:37:21,493:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,525:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,610:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,612:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:37:21,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,697:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,747:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:37:21,779:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,782:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:37:21,862:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,945:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:21,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:21,948:INFO:Preparing preprocessing pipeline...
2023-11-02 19:37:21,948:INFO:Set up simple imputation.
2023-11-02 19:37:21,950:INFO:Set up encoding of categorical features.
2023-11-02 19:37:22,036:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:37:22,042:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:37:22,043:INFO:Creating final display dataframe.
2023-11-02 19:37:22,218:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 5)
4        Transformed data shape       (12384, 16)
5   Transformed train set shape        (8668, 16)
6    Transformed test set shape        (3716, 16)
7              Numeric features                 2
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              14de
2023-11-02 19:37:22,315:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:22,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:22,394:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:37:22,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:37:22,397:INFO:setup() successfully completed in 1.51s...............
2023-11-02 19:37:22,437:INFO:Initializing compare_models()
2023-11-02 19:37:22,438:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:37:22,438:INFO:Checking exceptions
2023-11-02 19:37:22,441:INFO:Preparing display monitor
2023-11-02 19:37:22,462:INFO:Initializing Linear Regression
2023-11-02 19:37:22,462:INFO:Total runtime is 0.0 minutes
2023-11-02 19:37:22,466:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:22,466:INFO:Initializing create_model()
2023-11-02 19:37:22,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:22,466:INFO:Checking exceptions
2023-11-02 19:37:22,466:INFO:Importing libraries
2023-11-02 19:37:22,467:INFO:Copying training dataset
2023-11-02 19:37:22,470:INFO:Defining folds
2023-11-02 19:37:22,470:INFO:Declaring metric variables
2023-11-02 19:37:22,473:INFO:Importing untrained model
2023-11-02 19:37:22,480:INFO:Linear Regression Imported successfully
2023-11-02 19:37:22,487:INFO:Starting cross validation
2023-11-02 19:37:22,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:22,788:INFO:Calculating mean and std
2023-11-02 19:37:22,788:INFO:Creating metrics dataframe
2023-11-02 19:37:22,792:INFO:Uploading results into container
2023-11-02 19:37:22,794:INFO:Uploading model into container now
2023-11-02 19:37:22,794:INFO:_master_model_container: 1
2023-11-02 19:37:22,794:INFO:_display_container: 2
2023-11-02 19:37:22,795:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:37:22,795:INFO:create_model() successfully completed......................................
2023-11-02 19:37:23,005:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:23,005:INFO:Creating metrics dataframe
2023-11-02 19:37:23,014:INFO:Initializing Lasso Regression
2023-11-02 19:37:23,016:INFO:Total runtime is 0.009220492839813233 minutes
2023-11-02 19:37:23,018:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:23,018:INFO:Initializing create_model()
2023-11-02 19:37:23,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:23,018:INFO:Checking exceptions
2023-11-02 19:37:23,018:INFO:Importing libraries
2023-11-02 19:37:23,019:INFO:Copying training dataset
2023-11-02 19:37:23,022:INFO:Defining folds
2023-11-02 19:37:23,022:INFO:Declaring metric variables
2023-11-02 19:37:23,026:INFO:Importing untrained model
2023-11-02 19:37:23,029:INFO:Lasso Regression Imported successfully
2023-11-02 19:37:23,034:INFO:Starting cross validation
2023-11-02 19:37:23,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:23,280:INFO:Calculating mean and std
2023-11-02 19:37:23,280:INFO:Creating metrics dataframe
2023-11-02 19:37:23,282:INFO:Uploading results into container
2023-11-02 19:37:23,283:INFO:Uploading model into container now
2023-11-02 19:37:23,283:INFO:_master_model_container: 2
2023-11-02 19:37:23,283:INFO:_display_container: 2
2023-11-02 19:37:23,283:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:37:23,283:INFO:create_model() successfully completed......................................
2023-11-02 19:37:23,482:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:23,482:INFO:Creating metrics dataframe
2023-11-02 19:37:23,487:INFO:Initializing Ridge Regression
2023-11-02 19:37:23,488:INFO:Total runtime is 0.01710041364034017 minutes
2023-11-02 19:37:23,490:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:23,490:INFO:Initializing create_model()
2023-11-02 19:37:23,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:23,491:INFO:Checking exceptions
2023-11-02 19:37:23,491:INFO:Importing libraries
2023-11-02 19:37:23,491:INFO:Copying training dataset
2023-11-02 19:37:23,497:INFO:Defining folds
2023-11-02 19:37:23,498:INFO:Declaring metric variables
2023-11-02 19:37:23,500:INFO:Importing untrained model
2023-11-02 19:37:23,504:INFO:Ridge Regression Imported successfully
2023-11-02 19:37:23,512:INFO:Starting cross validation
2023-11-02 19:37:23,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:23,761:INFO:Calculating mean and std
2023-11-02 19:37:23,762:INFO:Creating metrics dataframe
2023-11-02 19:37:23,765:INFO:Uploading results into container
2023-11-02 19:37:23,765:INFO:Uploading model into container now
2023-11-02 19:37:23,766:INFO:_master_model_container: 3
2023-11-02 19:37:23,766:INFO:_display_container: 2
2023-11-02 19:37:23,766:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:37:23,766:INFO:create_model() successfully completed......................................
2023-11-02 19:37:23,963:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:23,963:INFO:Creating metrics dataframe
2023-11-02 19:37:23,970:INFO:Initializing Elastic Net
2023-11-02 19:37:23,970:INFO:Total runtime is 0.02513069311777751 minutes
2023-11-02 19:37:23,972:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:23,972:INFO:Initializing create_model()
2023-11-02 19:37:23,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:23,973:INFO:Checking exceptions
2023-11-02 19:37:23,973:INFO:Importing libraries
2023-11-02 19:37:23,973:INFO:Copying training dataset
2023-11-02 19:37:23,979:INFO:Defining folds
2023-11-02 19:37:23,979:INFO:Declaring metric variables
2023-11-02 19:37:23,982:INFO:Importing untrained model
2023-11-02 19:37:23,986:INFO:Elastic Net Imported successfully
2023-11-02 19:37:24,028:INFO:Starting cross validation
2023-11-02 19:37:24,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:24,327:INFO:Calculating mean and std
2023-11-02 19:37:24,329:INFO:Creating metrics dataframe
2023-11-02 19:37:24,332:INFO:Uploading results into container
2023-11-02 19:37:24,332:INFO:Uploading model into container now
2023-11-02 19:37:24,332:INFO:_master_model_container: 4
2023-11-02 19:37:24,332:INFO:_display_container: 2
2023-11-02 19:37:24,333:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:37:24,333:INFO:create_model() successfully completed......................................
2023-11-02 19:37:24,527:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:24,528:INFO:Creating metrics dataframe
2023-11-02 19:37:24,534:INFO:Initializing Least Angle Regression
2023-11-02 19:37:24,535:INFO:Total runtime is 0.03454082012176514 minutes
2023-11-02 19:37:24,538:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:24,538:INFO:Initializing create_model()
2023-11-02 19:37:24,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:24,539:INFO:Checking exceptions
2023-11-02 19:37:24,539:INFO:Importing libraries
2023-11-02 19:37:24,539:INFO:Copying training dataset
2023-11-02 19:37:24,545:INFO:Defining folds
2023-11-02 19:37:24,545:INFO:Declaring metric variables
2023-11-02 19:37:24,547:INFO:Importing untrained model
2023-11-02 19:37:24,550:INFO:Least Angle Regression Imported successfully
2023-11-02 19:37:24,556:INFO:Starting cross validation
2023-11-02 19:37:24,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:24,811:INFO:Calculating mean and std
2023-11-02 19:37:24,812:INFO:Creating metrics dataframe
2023-11-02 19:37:24,815:INFO:Uploading results into container
2023-11-02 19:37:24,815:INFO:Uploading model into container now
2023-11-02 19:37:24,815:INFO:_master_model_container: 5
2023-11-02 19:37:24,815:INFO:_display_container: 2
2023-11-02 19:37:24,815:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:37:24,815:INFO:create_model() successfully completed......................................
2023-11-02 19:37:25,014:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:25,014:INFO:Creating metrics dataframe
2023-11-02 19:37:25,020:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:37:25,021:INFO:Total runtime is 0.04264219601949056 minutes
2023-11-02 19:37:25,023:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:25,023:INFO:Initializing create_model()
2023-11-02 19:37:25,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:25,024:INFO:Checking exceptions
2023-11-02 19:37:25,024:INFO:Importing libraries
2023-11-02 19:37:25,024:INFO:Copying training dataset
2023-11-02 19:37:25,031:INFO:Defining folds
2023-11-02 19:37:25,031:INFO:Declaring metric variables
2023-11-02 19:37:25,033:INFO:Importing untrained model
2023-11-02 19:37:25,038:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:37:25,043:INFO:Starting cross validation
2023-11-02 19:37:25,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:25,305:INFO:Calculating mean and std
2023-11-02 19:37:25,306:INFO:Creating metrics dataframe
2023-11-02 19:37:25,308:INFO:Uploading results into container
2023-11-02 19:37:25,308:INFO:Uploading model into container now
2023-11-02 19:37:25,308:INFO:_master_model_container: 6
2023-11-02 19:37:25,309:INFO:_display_container: 2
2023-11-02 19:37:25,309:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:37:25,309:INFO:create_model() successfully completed......................................
2023-11-02 19:37:25,512:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:25,513:INFO:Creating metrics dataframe
2023-11-02 19:37:25,519:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:37:25,519:INFO:Total runtime is 0.050949597358703615 minutes
2023-11-02 19:37:25,522:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:25,522:INFO:Initializing create_model()
2023-11-02 19:37:25,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:25,522:INFO:Checking exceptions
2023-11-02 19:37:25,522:INFO:Importing libraries
2023-11-02 19:37:25,523:INFO:Copying training dataset
2023-11-02 19:37:25,531:INFO:Defining folds
2023-11-02 19:37:25,531:INFO:Declaring metric variables
2023-11-02 19:37:25,533:INFO:Importing untrained model
2023-11-02 19:37:25,536:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:37:25,541:INFO:Starting cross validation
2023-11-02 19:37:25,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:25,791:INFO:Calculating mean and std
2023-11-02 19:37:25,793:INFO:Creating metrics dataframe
2023-11-02 19:37:25,797:INFO:Uploading results into container
2023-11-02 19:37:25,798:INFO:Uploading model into container now
2023-11-02 19:37:25,798:INFO:_master_model_container: 7
2023-11-02 19:37:25,798:INFO:_display_container: 2
2023-11-02 19:37:25,798:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:37:25,799:INFO:create_model() successfully completed......................................
2023-11-02 19:37:25,990:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:25,990:INFO:Creating metrics dataframe
2023-11-02 19:37:26,000:INFO:Initializing Bayesian Ridge
2023-11-02 19:37:26,000:INFO:Total runtime is 0.058956007162729904 minutes
2023-11-02 19:37:26,002:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:26,003:INFO:Initializing create_model()
2023-11-02 19:37:26,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:26,003:INFO:Checking exceptions
2023-11-02 19:37:26,003:INFO:Importing libraries
2023-11-02 19:37:26,003:INFO:Copying training dataset
2023-11-02 19:37:26,007:INFO:Defining folds
2023-11-02 19:37:26,007:INFO:Declaring metric variables
2023-11-02 19:37:26,009:INFO:Importing untrained model
2023-11-02 19:37:26,016:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:37:26,020:INFO:Starting cross validation
2023-11-02 19:37:26,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:26,272:INFO:Calculating mean and std
2023-11-02 19:37:26,273:INFO:Creating metrics dataframe
2023-11-02 19:37:26,276:INFO:Uploading results into container
2023-11-02 19:37:26,277:INFO:Uploading model into container now
2023-11-02 19:37:26,277:INFO:_master_model_container: 8
2023-11-02 19:37:26,277:INFO:_display_container: 2
2023-11-02 19:37:26,278:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:37:26,278:INFO:create_model() successfully completed......................................
2023-11-02 19:37:26,481:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:26,481:INFO:Creating metrics dataframe
2023-11-02 19:37:26,489:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:37:26,490:INFO:Total runtime is 0.0671212116877238 minutes
2023-11-02 19:37:26,492:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:26,492:INFO:Initializing create_model()
2023-11-02 19:37:26,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:26,493:INFO:Checking exceptions
2023-11-02 19:37:26,493:INFO:Importing libraries
2023-11-02 19:37:26,493:INFO:Copying training dataset
2023-11-02 19:37:26,499:INFO:Defining folds
2023-11-02 19:37:26,499:INFO:Declaring metric variables
2023-11-02 19:37:26,502:INFO:Importing untrained model
2023-11-02 19:37:26,504:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:37:26,509:INFO:Starting cross validation
2023-11-02 19:37:26,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:26,772:INFO:Calculating mean and std
2023-11-02 19:37:26,773:INFO:Creating metrics dataframe
2023-11-02 19:37:26,777:INFO:Uploading results into container
2023-11-02 19:37:26,780:INFO:Uploading model into container now
2023-11-02 19:37:26,780:INFO:_master_model_container: 9
2023-11-02 19:37:26,780:INFO:_display_container: 2
2023-11-02 19:37:26,780:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:37:26,780:INFO:create_model() successfully completed......................................
2023-11-02 19:37:26,971:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:26,971:INFO:Creating metrics dataframe
2023-11-02 19:37:26,980:INFO:Initializing Huber Regressor
2023-11-02 19:37:26,980:INFO:Total runtime is 0.07528804540634156 minutes
2023-11-02 19:37:26,982:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:26,983:INFO:Initializing create_model()
2023-11-02 19:37:26,983:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:26,983:INFO:Checking exceptions
2023-11-02 19:37:26,983:INFO:Importing libraries
2023-11-02 19:37:26,983:INFO:Copying training dataset
2023-11-02 19:37:26,987:INFO:Defining folds
2023-11-02 19:37:26,987:INFO:Declaring metric variables
2023-11-02 19:37:26,990:INFO:Importing untrained model
2023-11-02 19:37:26,995:INFO:Huber Regressor Imported successfully
2023-11-02 19:37:27,002:INFO:Starting cross validation
2023-11-02 19:37:27,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:27,440:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,475:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,498:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,523:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,533:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,542:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,546:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,702:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,705:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:37:27,725:INFO:Calculating mean and std
2023-11-02 19:37:27,726:INFO:Creating metrics dataframe
2023-11-02 19:37:27,730:INFO:Uploading results into container
2023-11-02 19:37:27,731:INFO:Uploading model into container now
2023-11-02 19:37:27,731:INFO:_master_model_container: 10
2023-11-02 19:37:27,731:INFO:_display_container: 2
2023-11-02 19:37:27,732:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:37:27,732:INFO:create_model() successfully completed......................................
2023-11-02 19:37:27,935:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:27,936:INFO:Creating metrics dataframe
2023-11-02 19:37:27,943:INFO:Initializing K Neighbors Regressor
2023-11-02 19:37:27,944:INFO:Total runtime is 0.09135437806447347 minutes
2023-11-02 19:37:27,948:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:27,948:INFO:Initializing create_model()
2023-11-02 19:37:27,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:27,948:INFO:Checking exceptions
2023-11-02 19:37:27,948:INFO:Importing libraries
2023-11-02 19:37:27,948:INFO:Copying training dataset
2023-11-02 19:37:27,952:INFO:Defining folds
2023-11-02 19:37:27,953:INFO:Declaring metric variables
2023-11-02 19:37:27,956:INFO:Importing untrained model
2023-11-02 19:37:27,959:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:37:27,966:INFO:Starting cross validation
2023-11-02 19:37:27,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:28,315:INFO:Calculating mean and std
2023-11-02 19:37:28,316:INFO:Creating metrics dataframe
2023-11-02 19:37:28,318:INFO:Uploading results into container
2023-11-02 19:37:28,319:INFO:Uploading model into container now
2023-11-02 19:37:28,319:INFO:_master_model_container: 11
2023-11-02 19:37:28,319:INFO:_display_container: 2
2023-11-02 19:37:28,319:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:37:28,319:INFO:create_model() successfully completed......................................
2023-11-02 19:37:28,517:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:28,517:INFO:Creating metrics dataframe
2023-11-02 19:37:28,526:INFO:Initializing Decision Tree Regressor
2023-11-02 19:37:28,526:INFO:Total runtime is 0.10105619430541993 minutes
2023-11-02 19:37:28,530:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:28,531:INFO:Initializing create_model()
2023-11-02 19:37:28,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:28,531:INFO:Checking exceptions
2023-11-02 19:37:28,531:INFO:Importing libraries
2023-11-02 19:37:28,531:INFO:Copying training dataset
2023-11-02 19:37:28,536:INFO:Defining folds
2023-11-02 19:37:28,536:INFO:Declaring metric variables
2023-11-02 19:37:28,540:INFO:Importing untrained model
2023-11-02 19:37:28,543:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:37:28,549:INFO:Starting cross validation
2023-11-02 19:37:28,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:28,859:INFO:Calculating mean and std
2023-11-02 19:37:28,860:INFO:Creating metrics dataframe
2023-11-02 19:37:28,864:INFO:Uploading results into container
2023-11-02 19:37:28,864:INFO:Uploading model into container now
2023-11-02 19:37:28,865:INFO:_master_model_container: 12
2023-11-02 19:37:28,865:INFO:_display_container: 2
2023-11-02 19:37:28,865:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:37:28,865:INFO:create_model() successfully completed......................................
2023-11-02 19:37:29,062:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:29,063:INFO:Creating metrics dataframe
2023-11-02 19:37:29,074:INFO:Initializing Random Forest Regressor
2023-11-02 19:37:29,074:INFO:Total runtime is 0.11020105679829915 minutes
2023-11-02 19:37:29,076:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:29,077:INFO:Initializing create_model()
2023-11-02 19:37:29,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:29,077:INFO:Checking exceptions
2023-11-02 19:37:29,077:INFO:Importing libraries
2023-11-02 19:37:29,077:INFO:Copying training dataset
2023-11-02 19:37:29,084:INFO:Defining folds
2023-11-02 19:37:29,084:INFO:Declaring metric variables
2023-11-02 19:37:29,087:INFO:Importing untrained model
2023-11-02 19:37:29,090:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:37:29,095:INFO:Starting cross validation
2023-11-02 19:37:29,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:34,180:INFO:Calculating mean and std
2023-11-02 19:37:34,181:INFO:Creating metrics dataframe
2023-11-02 19:37:34,186:INFO:Uploading results into container
2023-11-02 19:37:34,186:INFO:Uploading model into container now
2023-11-02 19:37:34,188:INFO:_master_model_container: 13
2023-11-02 19:37:34,188:INFO:_display_container: 2
2023-11-02 19:37:34,189:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:37:34,189:INFO:create_model() successfully completed......................................
2023-11-02 19:37:34,556:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:34,557:INFO:Creating metrics dataframe
2023-11-02 19:37:34,570:INFO:Initializing Extra Trees Regressor
2023-11-02 19:37:34,570:INFO:Total runtime is 0.20179702043533326 minutes
2023-11-02 19:37:34,575:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:34,575:INFO:Initializing create_model()
2023-11-02 19:37:34,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:34,575:INFO:Checking exceptions
2023-11-02 19:37:34,575:INFO:Importing libraries
2023-11-02 19:37:34,575:INFO:Copying training dataset
2023-11-02 19:37:34,580:INFO:Defining folds
2023-11-02 19:37:34,580:INFO:Declaring metric variables
2023-11-02 19:37:34,587:INFO:Importing untrained model
2023-11-02 19:37:34,594:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:37:34,601:INFO:Starting cross validation
2023-11-02 19:37:34,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:37,928:INFO:Calculating mean and std
2023-11-02 19:37:37,929:INFO:Creating metrics dataframe
2023-11-02 19:37:37,933:INFO:Uploading results into container
2023-11-02 19:37:37,934:INFO:Uploading model into container now
2023-11-02 19:37:37,934:INFO:_master_model_container: 14
2023-11-02 19:37:37,934:INFO:_display_container: 2
2023-11-02 19:37:37,935:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:37:37,935:INFO:create_model() successfully completed......................................
2023-11-02 19:37:38,266:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:38,266:INFO:Creating metrics dataframe
2023-11-02 19:37:38,277:INFO:Initializing AdaBoost Regressor
2023-11-02 19:37:38,277:INFO:Total runtime is 0.2635840733846029 minutes
2023-11-02 19:37:38,280:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:38,280:INFO:Initializing create_model()
2023-11-02 19:37:38,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:38,280:INFO:Checking exceptions
2023-11-02 19:37:38,280:INFO:Importing libraries
2023-11-02 19:37:38,280:INFO:Copying training dataset
2023-11-02 19:37:38,284:INFO:Defining folds
2023-11-02 19:37:38,284:INFO:Declaring metric variables
2023-11-02 19:37:38,289:INFO:Importing untrained model
2023-11-02 19:37:38,294:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:37:38,299:INFO:Starting cross validation
2023-11-02 19:37:38,300:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:39,596:INFO:Calculating mean and std
2023-11-02 19:37:39,597:INFO:Creating metrics dataframe
2023-11-02 19:37:39,600:INFO:Uploading results into container
2023-11-02 19:37:39,600:INFO:Uploading model into container now
2023-11-02 19:37:39,600:INFO:_master_model_container: 15
2023-11-02 19:37:39,600:INFO:_display_container: 2
2023-11-02 19:37:39,601:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:37:39,601:INFO:create_model() successfully completed......................................
2023-11-02 19:37:39,852:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:39,853:INFO:Creating metrics dataframe
2023-11-02 19:37:39,875:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:37:39,875:INFO:Total runtime is 0.29021728436152144 minutes
2023-11-02 19:37:39,878:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:39,879:INFO:Initializing create_model()
2023-11-02 19:37:39,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:39,879:INFO:Checking exceptions
2023-11-02 19:37:39,879:INFO:Importing libraries
2023-11-02 19:37:39,879:INFO:Copying training dataset
2023-11-02 19:37:39,884:INFO:Defining folds
2023-11-02 19:37:39,884:INFO:Declaring metric variables
2023-11-02 19:37:39,888:INFO:Importing untrained model
2023-11-02 19:37:39,893:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:37:39,899:INFO:Starting cross validation
2023-11-02 19:37:39,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:41,833:INFO:Calculating mean and std
2023-11-02 19:37:41,836:INFO:Creating metrics dataframe
2023-11-02 19:37:41,842:INFO:Uploading results into container
2023-11-02 19:37:41,843:INFO:Uploading model into container now
2023-11-02 19:37:41,843:INFO:_master_model_container: 16
2023-11-02 19:37:41,844:INFO:_display_container: 2
2023-11-02 19:37:41,844:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:37:41,844:INFO:create_model() successfully completed......................................
2023-11-02 19:37:42,082:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:42,082:INFO:Creating metrics dataframe
2023-11-02 19:37:42,093:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:37:42,093:INFO:Total runtime is 0.3271839300791423 minutes
2023-11-02 19:37:42,095:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:42,096:INFO:Initializing create_model()
2023-11-02 19:37:42,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:42,096:INFO:Checking exceptions
2023-11-02 19:37:42,096:INFO:Importing libraries
2023-11-02 19:37:42,096:INFO:Copying training dataset
2023-11-02 19:37:42,100:INFO:Defining folds
2023-11-02 19:37:42,100:INFO:Declaring metric variables
2023-11-02 19:37:42,103:INFO:Importing untrained model
2023-11-02 19:37:42,108:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:37:42,113:INFO:Starting cross validation
2023-11-02 19:37:42,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:42,817:INFO:Calculating mean and std
2023-11-02 19:37:42,818:INFO:Creating metrics dataframe
2023-11-02 19:37:42,822:INFO:Uploading results into container
2023-11-02 19:37:42,822:INFO:Uploading model into container now
2023-11-02 19:37:42,823:INFO:_master_model_container: 17
2023-11-02 19:37:42,823:INFO:_display_container: 2
2023-11-02 19:37:42,824:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:37:42,824:INFO:create_model() successfully completed......................................
2023-11-02 19:37:43,105:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:43,105:INFO:Creating metrics dataframe
2023-11-02 19:37:43,114:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:37:43,114:INFO:Total runtime is 0.3442019104957581 minutes
2023-11-02 19:37:43,117:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:43,117:INFO:Initializing create_model()
2023-11-02 19:37:43,118:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:43,118:INFO:Checking exceptions
2023-11-02 19:37:43,118:INFO:Importing libraries
2023-11-02 19:37:43,118:INFO:Copying training dataset
2023-11-02 19:37:43,123:INFO:Defining folds
2023-11-02 19:37:43,123:INFO:Declaring metric variables
2023-11-02 19:37:43,128:INFO:Importing untrained model
2023-11-02 19:37:43,132:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:37:43,138:INFO:Starting cross validation
2023-11-02 19:37:43,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:43,886:INFO:Calculating mean and std
2023-11-02 19:37:43,887:INFO:Creating metrics dataframe
2023-11-02 19:37:43,891:INFO:Uploading results into container
2023-11-02 19:37:43,891:INFO:Uploading model into container now
2023-11-02 19:37:43,892:INFO:_master_model_container: 18
2023-11-02 19:37:43,892:INFO:_display_container: 2
2023-11-02 19:37:43,892:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:37:43,893:INFO:create_model() successfully completed......................................
2023-11-02 19:37:44,139:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:44,139:INFO:Creating metrics dataframe
2023-11-02 19:37:44,153:INFO:Initializing Dummy Regressor
2023-11-02 19:37:44,153:INFO:Total runtime is 0.36151375373204553 minutes
2023-11-02 19:37:44,157:INFO:SubProcess create_model() called ==================================
2023-11-02 19:37:44,157:INFO:Initializing create_model()
2023-11-02 19:37:44,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9BE98130>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:44,157:INFO:Checking exceptions
2023-11-02 19:37:44,157:INFO:Importing libraries
2023-11-02 19:37:44,157:INFO:Copying training dataset
2023-11-02 19:37:44,164:INFO:Defining folds
2023-11-02 19:37:44,164:INFO:Declaring metric variables
2023-11-02 19:37:44,167:INFO:Importing untrained model
2023-11-02 19:37:44,171:INFO:Dummy Regressor Imported successfully
2023-11-02 19:37:44,179:INFO:Starting cross validation
2023-11-02 19:37:44,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:37:44,421:INFO:Calculating mean and std
2023-11-02 19:37:44,422:INFO:Creating metrics dataframe
2023-11-02 19:37:44,428:INFO:Uploading results into container
2023-11-02 19:37:44,430:INFO:Uploading model into container now
2023-11-02 19:37:44,431:INFO:_master_model_container: 19
2023-11-02 19:37:44,431:INFO:_display_container: 2
2023-11-02 19:37:44,431:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:37:44,432:INFO:create_model() successfully completed......................................
2023-11-02 19:37:44,701:INFO:SubProcess create_model() end ==================================
2023-11-02 19:37:44,701:INFO:Creating metrics dataframe
2023-11-02 19:37:44,721:INFO:Initializing create_model()
2023-11-02 19:37:44,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:44,721:INFO:Checking exceptions
2023-11-02 19:37:44,723:INFO:Importing libraries
2023-11-02 19:37:44,723:INFO:Copying training dataset
2023-11-02 19:37:44,727:INFO:Defining folds
2023-11-02 19:37:44,728:INFO:Declaring metric variables
2023-11-02 19:37:44,729:INFO:Importing untrained model
2023-11-02 19:37:44,729:INFO:Declaring custom model
2023-11-02 19:37:44,729:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:37:44,731:INFO:Cross validation set to False
2023-11-02 19:37:44,731:INFO:Fitting Model
2023-11-02 19:37:45,128:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:37:45,128:INFO:create_model() successfully completed......................................
2023-11-02 19:37:45,413:INFO:Initializing create_model()
2023-11-02 19:37:45,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:45,414:INFO:Checking exceptions
2023-11-02 19:37:45,417:INFO:Importing libraries
2023-11-02 19:37:45,417:INFO:Copying training dataset
2023-11-02 19:37:45,420:INFO:Defining folds
2023-11-02 19:37:45,420:INFO:Declaring metric variables
2023-11-02 19:37:45,420:INFO:Importing untrained model
2023-11-02 19:37:45,420:INFO:Declaring custom model
2023-11-02 19:37:45,421:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:37:45,422:INFO:Cross validation set to False
2023-11-02 19:37:45,422:INFO:Fitting Model
2023-11-02 19:37:46,028:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:37:46,029:INFO:create_model() successfully completed......................................
2023-11-02 19:37:46,333:INFO:Initializing create_model()
2023-11-02 19:37:46,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:46,334:INFO:Checking exceptions
2023-11-02 19:37:46,336:INFO:Importing libraries
2023-11-02 19:37:46,336:INFO:Copying training dataset
2023-11-02 19:37:46,340:INFO:Defining folds
2023-11-02 19:37:46,340:INFO:Declaring metric variables
2023-11-02 19:37:46,340:INFO:Importing untrained model
2023-11-02 19:37:46,340:INFO:Declaring custom model
2023-11-02 19:37:46,341:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:37:46,342:INFO:Cross validation set to False
2023-11-02 19:37:46,342:INFO:Fitting Model
2023-11-02 19:37:46,476:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:37:46,476:INFO:create_model() successfully completed......................................
2023-11-02 19:37:46,736:INFO:Initializing create_model()
2023-11-02 19:37:46,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:46,737:INFO:Checking exceptions
2023-11-02 19:37:46,739:INFO:Importing libraries
2023-11-02 19:37:46,739:INFO:Copying training dataset
2023-11-02 19:37:46,743:INFO:Defining folds
2023-11-02 19:37:46,743:INFO:Declaring metric variables
2023-11-02 19:37:46,743:INFO:Importing untrained model
2023-11-02 19:37:46,743:INFO:Declaring custom model
2023-11-02 19:37:46,744:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:37:46,745:INFO:Cross validation set to False
2023-11-02 19:37:46,746:INFO:Fitting Model
2023-11-02 19:37:46,821:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:37:46,822:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000108 seconds.
2023-11-02 19:37:46,822:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-02 19:37:46,822:INFO:[LightGBM] [Info] Total Bins 541
2023-11-02 19:37:46,822:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 15
2023-11-02 19:37:46,822:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:37:46,873:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:37:46,873:INFO:create_model() successfully completed......................................
2023-11-02 19:37:47,130:INFO:Initializing create_model()
2023-11-02 19:37:47,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:37:47,131:INFO:Checking exceptions
2023-11-02 19:37:47,132:INFO:Importing libraries
2023-11-02 19:37:47,133:INFO:Copying training dataset
2023-11-02 19:37:47,138:INFO:Defining folds
2023-11-02 19:37:47,138:INFO:Declaring metric variables
2023-11-02 19:37:47,138:INFO:Importing untrained model
2023-11-02 19:37:47,138:INFO:Declaring custom model
2023-11-02 19:37:47,138:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:37:47,140:INFO:Cross validation set to False
2023-11-02 19:37:47,140:INFO:Fitting Model
2023-11-02 19:37:47,252:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:37:47,252:INFO:create_model() successfully completed......................................
2023-11-02 19:37:47,522:INFO:_master_model_container: 19
2023-11-02 19:37:47,522:INFO:_display_container: 2
2023-11-02 19:37:47,524:INFO:[ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:37:47,524:INFO:compare_models() successfully completed......................................
2023-11-02 19:37:47,599:INFO:Initializing evaluate_model()
2023-11-02 19:37:47,599:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:37:47,608:INFO:Initializing plot_model()
2023-11-02 19:37:47,609:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, system=True)
2023-11-02 19:37:47,609:INFO:Checking exceptions
2023-11-02 19:37:47,643:INFO:Preloading libraries
2023-11-02 19:37:47,851:INFO:Copying training dataset
2023-11-02 19:37:47,851:INFO:Plot type: pipeline
2023-11-02 19:37:48,014:INFO:Visual Rendered Successfully
2023-11-02 19:37:48,268:INFO:plot_model() successfully completed......................................
2023-11-02 19:37:48,342:INFO:Initializing tune_model()
2023-11-02 19:37:48,342:INFO:tune_model(estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>)
2023-11-02 19:37:48,342:INFO:Checking exceptions
2023-11-02 19:37:48,367:INFO:Copying training dataset
2023-11-02 19:37:48,371:INFO:Checking base model
2023-11-02 19:37:48,371:INFO:Base model : Extra Trees Regressor
2023-11-02 19:37:48,375:INFO:Declaring metric variables
2023-11-02 19:37:48,383:INFO:Defining Hyperparameters
2023-11-02 19:37:48,767:INFO:Tuning with n_jobs=-1
2023-11-02 19:37:48,767:INFO:Initializing RandomizedSearchCV
2023-11-02 19:40:45,898:INFO:best_params: {'actual_estimator__n_estimators': 240, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': False}
2023-11-02 19:40:45,899:INFO:Hyperparameter search completed
2023-11-02 19:40:45,899:INFO:SubProcess create_model() called ==================================
2023-11-02 19:40:45,900:INFO:Initializing create_model()
2023-11-02 19:40:45,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B990549A0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 240, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 'sqrt', 'max_depth': 8, 'criterion': 'squared_error', 'bootstrap': False})
2023-11-02 19:40:45,900:INFO:Checking exceptions
2023-11-02 19:40:45,900:INFO:Importing libraries
2023-11-02 19:40:45,900:INFO:Copying training dataset
2023-11-02 19:40:45,908:INFO:Defining folds
2023-11-02 19:40:45,908:INFO:Declaring metric variables
2023-11-02 19:40:45,915:INFO:Importing untrained model
2023-11-02 19:40:45,915:INFO:Declaring custom model
2023-11-02 19:40:45,919:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:40:45,929:INFO:Starting cross validation
2023-11-02 19:40:45,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:40:47,206:INFO:Calculating mean and std
2023-11-02 19:40:47,207:INFO:Creating metrics dataframe
2023-11-02 19:40:47,212:INFO:Finalizing model
2023-11-02 19:40:47,448:INFO:Uploading results into container
2023-11-02 19:40:47,449:INFO:Uploading model into container now
2023-11-02 19:40:47,449:INFO:_master_model_container: 20
2023-11-02 19:40:47,450:INFO:_display_container: 3
2023-11-02 19:40:47,450:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=8, max_features='sqrt', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0001,
                    min_samples_leaf=2, min_samples_split=5,
                    min_weight_fraction_leaf=0.0, n_estimators=240, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:40:47,451:INFO:create_model() successfully completed......................................
2023-11-02 19:40:47,667:INFO:SubProcess create_model() end ==================================
2023-11-02 19:40:47,667:INFO:choose_better activated
2023-11-02 19:40:47,670:INFO:SubProcess create_model() called ==================================
2023-11-02 19:40:47,671:INFO:Initializing create_model()
2023-11-02 19:40:47,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B9A4011B0>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:40:47,671:INFO:Checking exceptions
2023-11-02 19:40:47,672:INFO:Importing libraries
2023-11-02 19:40:47,672:INFO:Copying training dataset
2023-11-02 19:40:47,675:INFO:Defining folds
2023-11-02 19:40:47,675:INFO:Declaring metric variables
2023-11-02 19:40:47,677:INFO:Importing untrained model
2023-11-02 19:40:47,677:INFO:Declaring custom model
2023-11-02 19:40:47,679:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:40:47,679:INFO:Starting cross validation
2023-11-02 19:40:47,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:40:50,970:INFO:Calculating mean and std
2023-11-02 19:40:50,970:INFO:Creating metrics dataframe
2023-11-02 19:40:50,972:INFO:Finalizing model
2023-11-02 19:40:51,402:INFO:Uploading results into container
2023-11-02 19:40:51,402:INFO:Uploading model into container now
2023-11-02 19:40:51,402:INFO:_master_model_container: 21
2023-11-02 19:40:51,402:INFO:_display_container: 4
2023-11-02 19:40:51,403:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:40:51,403:INFO:create_model() successfully completed......................................
2023-11-02 19:40:51,594:INFO:SubProcess create_model() end ==================================
2023-11-02 19:40:51,594:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False) result for R2 is 0.9713
2023-11-02 19:40:51,595:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=8, max_features='sqrt', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0001,
                    min_samples_leaf=2, min_samples_split=5,
                    min_weight_fraction_leaf=0.0, n_estimators=240, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False) result for R2 is 0.697
2023-11-02 19:40:51,595:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False) is best model
2023-11-02 19:40:51,596:INFO:choose_better completed
2023-11-02 19:40:51,596:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-11-02 19:40:51,605:INFO:_master_model_container: 21
2023-11-02 19:40:51,605:INFO:_display_container: 3
2023-11-02 19:40:51,606:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:40:51,606:INFO:tune_model() successfully completed......................................
2023-11-02 19:47:08,863:INFO:PyCaret RegressionExperiment
2023-11-02 19:47:08,864:INFO:Logging name: reg-default-name
2023-11-02 19:47:08,865:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-02 19:47:08,865:INFO:version 3.1.0
2023-11-02 19:47:08,865:INFO:Initializing setup()
2023-11-02 19:47:08,865:INFO:self.USI: 39e1
2023-11-02 19:47:08,865:INFO:self._variable_keys: {'X_test', 'logging_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'y', 'y_test', 'idx', 'transform_target_param', 'seed', 'log_plots_param', 'X_train', 'X', 'USI', 'pipeline', 'exp_name_log', 'fold_groups_param', 'exp_id', 'y_train', 'gpu_param', 'memory', '_available_plots', 'html_param', 'data'}
2023-11-02 19:47:08,865:INFO:Checking environment
2023-11-02 19:47:08,865:INFO:python_version: 3.10.2
2023-11-02 19:47:08,865:INFO:python_build: ('tags/v3.10.2:a58ebcc', 'Jan 17 2022 14:12:15')
2023-11-02 19:47:08,865:INFO:machine: AMD64
2023-11-02 19:47:08,865:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-02 19:47:08,870:INFO:Memory: svmem(total=16952647680, available=3698548736, percent=78.2, used=13254098944, free=3698548736)
2023-11-02 19:47:08,870:INFO:Physical Core: 4
2023-11-02 19:47:08,870:INFO:Logical Core: 8
2023-11-02 19:47:08,870:INFO:Checking libraries
2023-11-02 19:47:08,870:INFO:System:
2023-11-02 19:47:08,870:INFO:    python: 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)]
2023-11-02 19:47:08,870:INFO:executable: c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\Scripts\python.exe
2023-11-02 19:47:08,870:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-02 19:47:08,870:INFO:PyCaret required dependencies:
2023-11-02 19:47:08,870:INFO:                 pip: 23.0.1
2023-11-02 19:47:08,870:INFO:          setuptools: 65.5.0
2023-11-02 19:47:08,870:INFO:             pycaret: 3.1.0
2023-11-02 19:47:08,870:INFO:             IPython: 8.15.0
2023-11-02 19:47:08,870:INFO:          ipywidgets: 8.1.1
2023-11-02 19:47:08,871:INFO:                tqdm: 4.66.1
2023-11-02 19:47:08,871:INFO:               numpy: 1.23.5
2023-11-02 19:47:08,871:INFO:              pandas: 1.5.3
2023-11-02 19:47:08,871:INFO:              jinja2: 3.1.2
2023-11-02 19:47:08,871:INFO:               scipy: 1.10.1
2023-11-02 19:47:08,871:INFO:              joblib: 1.3.2
2023-11-02 19:47:08,871:INFO:             sklearn: 1.2.2
2023-11-02 19:47:08,871:INFO:                pyod: 1.1.0
2023-11-02 19:47:08,871:INFO:            imblearn: 0.11.0
2023-11-02 19:47:08,871:INFO:   category_encoders: 2.6.2
2023-11-02 19:47:08,871:INFO:            lightgbm: 4.1.0
2023-11-02 19:47:08,871:INFO:               numba: 0.58.0
2023-11-02 19:47:08,871:INFO:            requests: 2.31.0
2023-11-02 19:47:08,871:INFO:          matplotlib: 3.8.0
2023-11-02 19:47:08,871:INFO:          scikitplot: 0.3.7
2023-11-02 19:47:08,871:INFO:         yellowbrick: 1.5
2023-11-02 19:47:08,871:INFO:              plotly: 5.17.0
2023-11-02 19:47:08,871:INFO:    plotly-resampler: Not installed
2023-11-02 19:47:08,871:INFO:             kaleido: 0.2.1
2023-11-02 19:47:08,871:INFO:           schemdraw: 0.15
2023-11-02 19:47:08,871:INFO:         statsmodels: 0.14.0
2023-11-02 19:47:08,871:INFO:              sktime: 0.21.1
2023-11-02 19:47:08,871:INFO:               tbats: 1.1.3
2023-11-02 19:47:08,871:INFO:            pmdarima: 2.0.3
2023-11-02 19:47:08,871:INFO:              psutil: 5.9.5
2023-11-02 19:47:08,871:INFO:          markupsafe: 2.1.3
2023-11-02 19:47:08,871:INFO:             pickle5: Not installed
2023-11-02 19:47:08,871:INFO:         cloudpickle: 2.2.1
2023-11-02 19:47:08,871:INFO:         deprecation: 2.1.0
2023-11-02 19:47:08,871:INFO:              xxhash: 3.3.0
2023-11-02 19:47:08,872:INFO:           wurlitzer: Not installed
2023-11-02 19:47:08,872:INFO:PyCaret optional dependencies:
2023-11-02 19:47:08,872:INFO:                shap: Not installed
2023-11-02 19:47:08,872:INFO:           interpret: Not installed
2023-11-02 19:47:08,872:INFO:                umap: Not installed
2023-11-02 19:47:08,872:INFO:     ydata_profiling: Not installed
2023-11-02 19:47:08,872:INFO:  explainerdashboard: Not installed
2023-11-02 19:47:08,872:INFO:             autoviz: Not installed
2023-11-02 19:47:08,872:INFO:           fairlearn: Not installed
2023-11-02 19:47:08,872:INFO:          deepchecks: Not installed
2023-11-02 19:47:08,872:INFO:             xgboost: 2.0.0
2023-11-02 19:47:08,872:INFO:            catboost: Not installed
2023-11-02 19:47:08,872:INFO:              kmodes: Not installed
2023-11-02 19:47:08,872:INFO:             mlxtend: Not installed
2023-11-02 19:47:08,872:INFO:       statsforecast: Not installed
2023-11-02 19:47:08,872:INFO:        tune_sklearn: Not installed
2023-11-02 19:47:08,872:INFO:                 ray: Not installed
2023-11-02 19:47:08,872:INFO:            hyperopt: Not installed
2023-11-02 19:47:08,872:INFO:              optuna: Not installed
2023-11-02 19:47:08,872:INFO:               skopt: Not installed
2023-11-02 19:47:08,872:INFO:              mlflow: Not installed
2023-11-02 19:47:08,872:INFO:              gradio: Not installed
2023-11-02 19:47:08,872:INFO:             fastapi: Not installed
2023-11-02 19:47:08,872:INFO:             uvicorn: Not installed
2023-11-02 19:47:08,873:INFO:              m2cgen: Not installed
2023-11-02 19:47:08,873:INFO:           evidently: Not installed
2023-11-02 19:47:08,873:INFO:               fugue: Not installed
2023-11-02 19:47:08,873:INFO:           streamlit: Not installed
2023-11-02 19:47:08,873:INFO:             prophet: Not installed
2023-11-02 19:47:08,873:INFO:None
2023-11-02 19:47:08,873:INFO:Set up data.
2023-11-02 19:47:08,885:INFO:Set up folding strategy.
2023-11-02 19:47:08,885:INFO:Set up train/test split.
2023-11-02 19:47:08,892:INFO:Set up index.
2023-11-02 19:47:08,893:INFO:Assigning column types.
2023-11-02 19:47:08,896:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-02 19:47:08,896:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,899:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,950:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,982:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:08,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:08,987:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,991:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:47:08,995:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,070:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,072:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-02 19:47:09,076:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,080:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,124:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,164:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,164:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,170:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,173:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,254:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,254:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,261:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-02 19:47:09,269:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,318:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,358:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,374:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,474:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,479:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-02 19:47:09,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,567:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,653:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,655:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-02 19:47:09,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,738:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-02 19:47:09,828:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:09,833:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-02 19:47:09,922:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:09,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:10,294:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:10,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:10,297:INFO:Preparing preprocessing pipeline...
2023-11-02 19:47:10,297:INFO:Set up simple imputation.
2023-11-02 19:47:10,299:INFO:Set up encoding of categorical features.
2023-11-02 19:47:10,398:INFO:Finished creating preprocessing pipeline.
2023-11-02 19:47:10,402:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-02 19:47:10,402:INFO:Creating final display dataframe.
2023-11-02 19:47:10,650:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target         log_yield
2                   Target type        Regression
3           Original data shape        (12384, 6)
4        Transformed data shape       (12384, 17)
5   Transformed train set shape        (8668, 17)
6    Transformed test set shape        (3716, 17)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              39e1
2023-11-02 19:47:10,781:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:10,785:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:10,906:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-02 19:47:10,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-02 19:47:10,911:INFO:setup() successfully completed in 2.05s...............
2023-11-02 19:47:10,946:INFO:Initializing compare_models()
2023-11-02 19:47:10,946:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-11-02 19:47:10,946:INFO:Checking exceptions
2023-11-02 19:47:10,949:INFO:Preparing display monitor
2023-11-02 19:47:10,973:INFO:Initializing Linear Regression
2023-11-02 19:47:10,973:INFO:Total runtime is 0.0 minutes
2023-11-02 19:47:10,981:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:10,981:INFO:Initializing create_model()
2023-11-02 19:47:10,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:10,981:INFO:Checking exceptions
2023-11-02 19:47:10,981:INFO:Importing libraries
2023-11-02 19:47:10,981:INFO:Copying training dataset
2023-11-02 19:47:10,987:INFO:Defining folds
2023-11-02 19:47:10,987:INFO:Declaring metric variables
2023-11-02 19:47:10,993:INFO:Importing untrained model
2023-11-02 19:47:11,001:INFO:Linear Regression Imported successfully
2023-11-02 19:47:11,011:INFO:Starting cross validation
2023-11-02 19:47:11,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:15,548:INFO:Calculating mean and std
2023-11-02 19:47:15,550:INFO:Creating metrics dataframe
2023-11-02 19:47:15,554:INFO:Uploading results into container
2023-11-02 19:47:15,555:INFO:Uploading model into container now
2023-11-02 19:47:15,555:INFO:_master_model_container: 1
2023-11-02 19:47:15,555:INFO:_display_container: 2
2023-11-02 19:47:15,555:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-11-02 19:47:15,556:INFO:create_model() successfully completed......................................
2023-11-02 19:47:15,857:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:15,858:INFO:Creating metrics dataframe
2023-11-02 19:47:15,867:INFO:Initializing Lasso Regression
2023-11-02 19:47:15,867:INFO:Total runtime is 0.08157212336858113 minutes
2023-11-02 19:47:15,872:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:15,872:INFO:Initializing create_model()
2023-11-02 19:47:15,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:15,872:INFO:Checking exceptions
2023-11-02 19:47:15,873:INFO:Importing libraries
2023-11-02 19:47:15,873:INFO:Copying training dataset
2023-11-02 19:47:15,877:INFO:Defining folds
2023-11-02 19:47:15,877:INFO:Declaring metric variables
2023-11-02 19:47:15,882:INFO:Importing untrained model
2023-11-02 19:47:15,886:INFO:Lasso Regression Imported successfully
2023-11-02 19:47:15,894:INFO:Starting cross validation
2023-11-02 19:47:15,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:16,265:INFO:Calculating mean and std
2023-11-02 19:47:16,267:INFO:Creating metrics dataframe
2023-11-02 19:47:16,271:INFO:Uploading results into container
2023-11-02 19:47:16,272:INFO:Uploading model into container now
2023-11-02 19:47:16,272:INFO:_master_model_container: 2
2023-11-02 19:47:16,273:INFO:_display_container: 2
2023-11-02 19:47:16,273:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=123, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-11-02 19:47:16,273:INFO:create_model() successfully completed......................................
2023-11-02 19:47:16,573:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:16,574:INFO:Creating metrics dataframe
2023-11-02 19:47:16,582:INFO:Initializing Ridge Regression
2023-11-02 19:47:16,582:INFO:Total runtime is 0.09348872502644856 minutes
2023-11-02 19:47:16,586:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:16,586:INFO:Initializing create_model()
2023-11-02 19:47:16,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:16,586:INFO:Checking exceptions
2023-11-02 19:47:16,586:INFO:Importing libraries
2023-11-02 19:47:16,586:INFO:Copying training dataset
2023-11-02 19:47:16,591:INFO:Defining folds
2023-11-02 19:47:16,591:INFO:Declaring metric variables
2023-11-02 19:47:16,594:INFO:Importing untrained model
2023-11-02 19:47:16,600:INFO:Ridge Regression Imported successfully
2023-11-02 19:47:16,605:INFO:Starting cross validation
2023-11-02 19:47:16,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:16,948:INFO:Calculating mean and std
2023-11-02 19:47:16,950:INFO:Creating metrics dataframe
2023-11-02 19:47:16,955:INFO:Uploading results into container
2023-11-02 19:47:16,956:INFO:Uploading model into container now
2023-11-02 19:47:16,956:INFO:_master_model_container: 3
2023-11-02 19:47:16,956:INFO:_display_container: 2
2023-11-02 19:47:16,957:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=123, solver='auto', tol=0.0001)
2023-11-02 19:47:16,957:INFO:create_model() successfully completed......................................
2023-11-02 19:47:17,263:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:17,264:INFO:Creating metrics dataframe
2023-11-02 19:47:17,274:INFO:Initializing Elastic Net
2023-11-02 19:47:17,274:INFO:Total runtime is 0.10501919587453205 minutes
2023-11-02 19:47:17,277:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:17,278:INFO:Initializing create_model()
2023-11-02 19:47:17,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:17,278:INFO:Checking exceptions
2023-11-02 19:47:17,278:INFO:Importing libraries
2023-11-02 19:47:17,278:INFO:Copying training dataset
2023-11-02 19:47:17,288:INFO:Defining folds
2023-11-02 19:47:17,289:INFO:Declaring metric variables
2023-11-02 19:47:17,292:INFO:Importing untrained model
2023-11-02 19:47:17,295:INFO:Elastic Net Imported successfully
2023-11-02 19:47:17,306:INFO:Starting cross validation
2023-11-02 19:47:17,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:17,606:INFO:Calculating mean and std
2023-11-02 19:47:17,607:INFO:Creating metrics dataframe
2023-11-02 19:47:17,611:INFO:Uploading results into container
2023-11-02 19:47:17,611:INFO:Uploading model into container now
2023-11-02 19:47:17,612:INFO:_master_model_container: 4
2023-11-02 19:47:17,612:INFO:_display_container: 2
2023-11-02 19:47:17,612:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=123,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-11-02 19:47:17,612:INFO:create_model() successfully completed......................................
2023-11-02 19:47:17,940:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:17,940:INFO:Creating metrics dataframe
2023-11-02 19:47:17,954:INFO:Initializing Least Angle Regression
2023-11-02 19:47:17,954:INFO:Total runtime is 0.11635039250055948 minutes
2023-11-02 19:47:17,959:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:17,959:INFO:Initializing create_model()
2023-11-02 19:47:17,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:17,959:INFO:Checking exceptions
2023-11-02 19:47:17,959:INFO:Importing libraries
2023-11-02 19:47:17,959:INFO:Copying training dataset
2023-11-02 19:47:17,969:INFO:Defining folds
2023-11-02 19:47:17,970:INFO:Declaring metric variables
2023-11-02 19:47:17,974:INFO:Importing untrained model
2023-11-02 19:47:17,976:INFO:Least Angle Regression Imported successfully
2023-11-02 19:47:17,980:INFO:Starting cross validation
2023-11-02 19:47:17,984:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:18,299:INFO:Calculating mean and std
2023-11-02 19:47:18,302:INFO:Creating metrics dataframe
2023-11-02 19:47:18,309:INFO:Uploading results into container
2023-11-02 19:47:18,310:INFO:Uploading model into container now
2023-11-02 19:47:18,310:INFO:_master_model_container: 5
2023-11-02 19:47:18,311:INFO:_display_container: 2
2023-11-02 19:47:18,311:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2023-11-02 19:47:18,312:INFO:create_model() successfully completed......................................
2023-11-02 19:47:18,635:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:18,635:INFO:Creating metrics dataframe
2023-11-02 19:47:18,648:INFO:Initializing Lasso Least Angle Regression
2023-11-02 19:47:18,649:INFO:Total runtime is 0.12793009678522746 minutes
2023-11-02 19:47:18,653:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:18,654:INFO:Initializing create_model()
2023-11-02 19:47:18,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:18,654:INFO:Checking exceptions
2023-11-02 19:47:18,654:INFO:Importing libraries
2023-11-02 19:47:18,654:INFO:Copying training dataset
2023-11-02 19:47:18,659:INFO:Defining folds
2023-11-02 19:47:18,659:INFO:Declaring metric variables
2023-11-02 19:47:18,661:INFO:Importing untrained model
2023-11-02 19:47:18,667:INFO:Lasso Least Angle Regression Imported successfully
2023-11-02 19:47:18,671:INFO:Starting cross validation
2023-11-02 19:47:18,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:18,995:INFO:Calculating mean and std
2023-11-02 19:47:18,998:INFO:Creating metrics dataframe
2023-11-02 19:47:19,004:INFO:Uploading results into container
2023-11-02 19:47:19,005:INFO:Uploading model into container now
2023-11-02 19:47:19,006:INFO:_master_model_container: 6
2023-11-02 19:47:19,006:INFO:_display_container: 2
2023-11-02 19:47:19,008:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2023-11-02 19:47:19,008:INFO:create_model() successfully completed......................................
2023-11-02 19:47:19,301:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:19,301:INFO:Creating metrics dataframe
2023-11-02 19:47:19,311:INFO:Initializing Orthogonal Matching Pursuit
2023-11-02 19:47:19,311:INFO:Total runtime is 0.13896138270696004 minutes
2023-11-02 19:47:19,315:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:19,315:INFO:Initializing create_model()
2023-11-02 19:47:19,316:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:19,316:INFO:Checking exceptions
2023-11-02 19:47:19,316:INFO:Importing libraries
2023-11-02 19:47:19,316:INFO:Copying training dataset
2023-11-02 19:47:19,322:INFO:Defining folds
2023-11-02 19:47:19,322:INFO:Declaring metric variables
2023-11-02 19:47:19,325:INFO:Importing untrained model
2023-11-02 19:47:19,327:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-02 19:47:19,333:INFO:Starting cross validation
2023-11-02 19:47:19,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:19,602:INFO:Calculating mean and std
2023-11-02 19:47:19,603:INFO:Creating metrics dataframe
2023-11-02 19:47:19,608:INFO:Uploading results into container
2023-11-02 19:47:19,610:INFO:Uploading model into container now
2023-11-02 19:47:19,610:INFO:_master_model_container: 7
2023-11-02 19:47:19,610:INFO:_display_container: 2
2023-11-02 19:47:19,611:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-11-02 19:47:19,611:INFO:create_model() successfully completed......................................
2023-11-02 19:47:19,871:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:19,871:INFO:Creating metrics dataframe
2023-11-02 19:47:19,880:INFO:Initializing Bayesian Ridge
2023-11-02 19:47:19,880:INFO:Total runtime is 0.14844604730606079 minutes
2023-11-02 19:47:19,884:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:19,884:INFO:Initializing create_model()
2023-11-02 19:47:19,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:19,884:INFO:Checking exceptions
2023-11-02 19:47:19,885:INFO:Importing libraries
2023-11-02 19:47:19,885:INFO:Copying training dataset
2023-11-02 19:47:19,890:INFO:Defining folds
2023-11-02 19:47:19,890:INFO:Declaring metric variables
2023-11-02 19:47:19,895:INFO:Importing untrained model
2023-11-02 19:47:19,900:INFO:Bayesian Ridge Imported successfully
2023-11-02 19:47:19,909:INFO:Starting cross validation
2023-11-02 19:47:19,910:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:20,260:INFO:Calculating mean and std
2023-11-02 19:47:20,262:INFO:Creating metrics dataframe
2023-11-02 19:47:20,269:INFO:Uploading results into container
2023-11-02 19:47:20,269:INFO:Uploading model into container now
2023-11-02 19:47:20,269:INFO:_master_model_container: 8
2023-11-02 19:47:20,270:INFO:_display_container: 2
2023-11-02 19:47:20,270:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-11-02 19:47:20,270:INFO:create_model() successfully completed......................................
2023-11-02 19:47:20,544:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:20,544:INFO:Creating metrics dataframe
2023-11-02 19:47:20,553:INFO:Initializing Passive Aggressive Regressor
2023-11-02 19:47:20,553:INFO:Total runtime is 0.15966907342274983 minutes
2023-11-02 19:47:20,556:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:20,556:INFO:Initializing create_model()
2023-11-02 19:47:20,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:20,556:INFO:Checking exceptions
2023-11-02 19:47:20,557:INFO:Importing libraries
2023-11-02 19:47:20,557:INFO:Copying training dataset
2023-11-02 19:47:20,562:INFO:Defining folds
2023-11-02 19:47:20,562:INFO:Declaring metric variables
2023-11-02 19:47:20,565:INFO:Importing untrained model
2023-11-02 19:47:20,572:INFO:Passive Aggressive Regressor Imported successfully
2023-11-02 19:47:20,577:INFO:Starting cross validation
2023-11-02 19:47:20,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:20,854:INFO:Calculating mean and std
2023-11-02 19:47:20,855:INFO:Creating metrics dataframe
2023-11-02 19:47:20,858:INFO:Uploading results into container
2023-11-02 19:47:20,858:INFO:Uploading model into container now
2023-11-02 19:47:20,859:INFO:_master_model_container: 9
2023-11-02 19:47:20,859:INFO:_display_container: 2
2023-11-02 19:47:20,860:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-02 19:47:20,860:INFO:create_model() successfully completed......................................
2023-11-02 19:47:21,125:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:21,125:INFO:Creating metrics dataframe
2023-11-02 19:47:21,135:INFO:Initializing Huber Regressor
2023-11-02 19:47:21,135:INFO:Total runtime is 0.16935961246490477 minutes
2023-11-02 19:47:21,138:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:21,138:INFO:Initializing create_model()
2023-11-02 19:47:21,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:21,138:INFO:Checking exceptions
2023-11-02 19:47:21,138:INFO:Importing libraries
2023-11-02 19:47:21,138:INFO:Copying training dataset
2023-11-02 19:47:21,144:INFO:Defining folds
2023-11-02 19:47:21,144:INFO:Declaring metric variables
2023-11-02 19:47:21,147:INFO:Importing untrained model
2023-11-02 19:47:21,154:INFO:Huber Regressor Imported successfully
2023-11-02 19:47:21,160:INFO:Starting cross validation
2023-11-02 19:47:21,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:21,602:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,623:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,642:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,658:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,660:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,661:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,662:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,679:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,888:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,892:WARNING:c:\Users\Emalisa\Documents\hogeschool\3ITF\Cloud AI\TrioData_Masters_private\venv\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-02 19:47:21,921:INFO:Calculating mean and std
2023-11-02 19:47:21,924:INFO:Creating metrics dataframe
2023-11-02 19:47:21,931:INFO:Uploading results into container
2023-11-02 19:47:21,933:INFO:Uploading model into container now
2023-11-02 19:47:21,933:INFO:_master_model_container: 10
2023-11-02 19:47:21,934:INFO:_display_container: 2
2023-11-02 19:47:21,935:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-11-02 19:47:21,935:INFO:create_model() successfully completed......................................
2023-11-02 19:47:22,184:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:22,184:INFO:Creating metrics dataframe
2023-11-02 19:47:22,196:INFO:Initializing K Neighbors Regressor
2023-11-02 19:47:22,196:INFO:Total runtime is 0.1870564897855123 minutes
2023-11-02 19:47:22,200:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:22,201:INFO:Initializing create_model()
2023-11-02 19:47:22,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:22,202:INFO:Checking exceptions
2023-11-02 19:47:22,202:INFO:Importing libraries
2023-11-02 19:47:22,202:INFO:Copying training dataset
2023-11-02 19:47:22,208:INFO:Defining folds
2023-11-02 19:47:22,209:INFO:Declaring metric variables
2023-11-02 19:47:22,212:INFO:Importing untrained model
2023-11-02 19:47:22,215:INFO:K Neighbors Regressor Imported successfully
2023-11-02 19:47:22,224:INFO:Starting cross validation
2023-11-02 19:47:22,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:22,601:INFO:Calculating mean and std
2023-11-02 19:47:22,605:INFO:Creating metrics dataframe
2023-11-02 19:47:22,609:INFO:Uploading results into container
2023-11-02 19:47:22,609:INFO:Uploading model into container now
2023-11-02 19:47:22,609:INFO:_master_model_container: 11
2023-11-02 19:47:22,610:INFO:_display_container: 2
2023-11-02 19:47:22,610:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-11-02 19:47:22,610:INFO:create_model() successfully completed......................................
2023-11-02 19:47:22,862:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:22,862:INFO:Creating metrics dataframe
2023-11-02 19:47:22,876:INFO:Initializing Decision Tree Regressor
2023-11-02 19:47:22,877:INFO:Total runtime is 0.19840699434280396 minutes
2023-11-02 19:47:22,886:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:22,888:INFO:Initializing create_model()
2023-11-02 19:47:22,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:22,888:INFO:Checking exceptions
2023-11-02 19:47:22,889:INFO:Importing libraries
2023-11-02 19:47:22,889:INFO:Copying training dataset
2023-11-02 19:47:22,923:INFO:Defining folds
2023-11-02 19:47:22,923:INFO:Declaring metric variables
2023-11-02 19:47:22,927:INFO:Importing untrained model
2023-11-02 19:47:22,962:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:47:22,969:INFO:Starting cross validation
2023-11-02 19:47:22,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:23,342:INFO:Calculating mean and std
2023-11-02 19:47:23,343:INFO:Creating metrics dataframe
2023-11-02 19:47:23,350:INFO:Uploading results into container
2023-11-02 19:47:23,351:INFO:Uploading model into container now
2023-11-02 19:47:23,353:INFO:_master_model_container: 12
2023-11-02 19:47:23,353:INFO:_display_container: 2
2023-11-02 19:47:23,354:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:47:23,355:INFO:create_model() successfully completed......................................
2023-11-02 19:47:23,607:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:23,607:INFO:Creating metrics dataframe
2023-11-02 19:47:23,624:INFO:Initializing Random Forest Regressor
2023-11-02 19:47:23,624:INFO:Total runtime is 0.21085082292556762 minutes
2023-11-02 19:47:23,627:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:23,627:INFO:Initializing create_model()
2023-11-02 19:47:23,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:23,628:INFO:Checking exceptions
2023-11-02 19:47:23,628:INFO:Importing libraries
2023-11-02 19:47:23,628:INFO:Copying training dataset
2023-11-02 19:47:23,633:INFO:Defining folds
2023-11-02 19:47:23,633:INFO:Declaring metric variables
2023-11-02 19:47:23,640:INFO:Importing untrained model
2023-11-02 19:47:23,645:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:47:23,650:INFO:Starting cross validation
2023-11-02 19:47:23,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:29,409:INFO:Calculating mean and std
2023-11-02 19:47:29,410:INFO:Creating metrics dataframe
2023-11-02 19:47:29,413:INFO:Uploading results into container
2023-11-02 19:47:29,414:INFO:Uploading model into container now
2023-11-02 19:47:29,414:INFO:_master_model_container: 13
2023-11-02 19:47:29,414:INFO:_display_container: 2
2023-11-02 19:47:29,415:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:47:29,415:INFO:create_model() successfully completed......................................
2023-11-02 19:47:29,717:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:29,717:INFO:Creating metrics dataframe
2023-11-02 19:47:29,745:INFO:Initializing Extra Trees Regressor
2023-11-02 19:47:29,745:INFO:Total runtime is 0.3128665049870809 minutes
2023-11-02 19:47:29,750:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:29,750:INFO:Initializing create_model()
2023-11-02 19:47:29,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:29,750:INFO:Checking exceptions
2023-11-02 19:47:29,750:INFO:Importing libraries
2023-11-02 19:47:29,750:INFO:Copying training dataset
2023-11-02 19:47:29,754:INFO:Defining folds
2023-11-02 19:47:29,755:INFO:Declaring metric variables
2023-11-02 19:47:29,761:INFO:Importing untrained model
2023-11-02 19:47:29,766:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:47:29,774:INFO:Starting cross validation
2023-11-02 19:47:29,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:32,925:INFO:Calculating mean and std
2023-11-02 19:47:32,927:INFO:Creating metrics dataframe
2023-11-02 19:47:32,932:INFO:Uploading results into container
2023-11-02 19:47:32,932:INFO:Uploading model into container now
2023-11-02 19:47:32,933:INFO:_master_model_container: 14
2023-11-02 19:47:32,933:INFO:_display_container: 2
2023-11-02 19:47:32,934:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:47:32,934:INFO:create_model() successfully completed......................................
2023-11-02 19:47:33,211:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:33,211:INFO:Creating metrics dataframe
2023-11-02 19:47:33,227:INFO:Initializing AdaBoost Regressor
2023-11-02 19:47:33,227:INFO:Total runtime is 0.3709006110827128 minutes
2023-11-02 19:47:33,231:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:33,231:INFO:Initializing create_model()
2023-11-02 19:47:33,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:33,232:INFO:Checking exceptions
2023-11-02 19:47:33,232:INFO:Importing libraries
2023-11-02 19:47:33,232:INFO:Copying training dataset
2023-11-02 19:47:33,236:INFO:Defining folds
2023-11-02 19:47:33,236:INFO:Declaring metric variables
2023-11-02 19:47:33,239:INFO:Importing untrained model
2023-11-02 19:47:33,242:INFO:AdaBoost Regressor Imported successfully
2023-11-02 19:47:33,249:INFO:Starting cross validation
2023-11-02 19:47:33,251:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:34,629:INFO:Calculating mean and std
2023-11-02 19:47:34,630:INFO:Creating metrics dataframe
2023-11-02 19:47:34,632:INFO:Uploading results into container
2023-11-02 19:47:34,632:INFO:Uploading model into container now
2023-11-02 19:47:34,633:INFO:_master_model_container: 15
2023-11-02 19:47:34,633:INFO:_display_container: 2
2023-11-02 19:47:34,634:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=123)
2023-11-02 19:47:34,634:INFO:create_model() successfully completed......................................
2023-11-02 19:47:34,875:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:34,875:INFO:Creating metrics dataframe
2023-11-02 19:47:34,888:INFO:Initializing Gradient Boosting Regressor
2023-11-02 19:47:34,888:INFO:Total runtime is 0.3985859473546346 minutes
2023-11-02 19:47:34,890:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:34,891:INFO:Initializing create_model()
2023-11-02 19:47:34,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:34,891:INFO:Checking exceptions
2023-11-02 19:47:34,891:INFO:Importing libraries
2023-11-02 19:47:34,891:INFO:Copying training dataset
2023-11-02 19:47:34,900:INFO:Defining folds
2023-11-02 19:47:34,901:INFO:Declaring metric variables
2023-11-02 19:47:34,903:INFO:Importing untrained model
2023-11-02 19:47:34,906:INFO:Gradient Boosting Regressor Imported successfully
2023-11-02 19:47:34,913:INFO:Starting cross validation
2023-11-02 19:47:34,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:37,583:INFO:Calculating mean and std
2023-11-02 19:47:37,585:INFO:Creating metrics dataframe
2023-11-02 19:47:37,591:INFO:Uploading results into container
2023-11-02 19:47:37,591:INFO:Uploading model into container now
2023-11-02 19:47:37,592:INFO:_master_model_container: 16
2023-11-02 19:47:37,593:INFO:_display_container: 2
2023-11-02 19:47:37,593:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-02 19:47:37,593:INFO:create_model() successfully completed......................................
2023-11-02 19:47:37,852:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:37,853:INFO:Creating metrics dataframe
2023-11-02 19:47:37,863:INFO:Initializing Extreme Gradient Boosting
2023-11-02 19:47:37,863:INFO:Total runtime is 0.44817495743433633 minutes
2023-11-02 19:47:37,870:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:37,871:INFO:Initializing create_model()
2023-11-02 19:47:37,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:37,871:INFO:Checking exceptions
2023-11-02 19:47:37,872:INFO:Importing libraries
2023-11-02 19:47:37,872:INFO:Copying training dataset
2023-11-02 19:47:37,879:INFO:Defining folds
2023-11-02 19:47:37,880:INFO:Declaring metric variables
2023-11-02 19:47:37,883:INFO:Importing untrained model
2023-11-02 19:47:37,887:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:47:37,892:INFO:Starting cross validation
2023-11-02 19:47:37,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:38,625:INFO:Calculating mean and std
2023-11-02 19:47:38,626:INFO:Creating metrics dataframe
2023-11-02 19:47:38,631:INFO:Uploading results into container
2023-11-02 19:47:38,634:INFO:Uploading model into container now
2023-11-02 19:47:38,634:INFO:_master_model_container: 17
2023-11-02 19:47:38,634:INFO:_display_container: 2
2023-11-02 19:47:38,635:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:47:38,635:INFO:create_model() successfully completed......................................
2023-11-02 19:47:38,896:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:38,896:INFO:Creating metrics dataframe
2023-11-02 19:47:38,911:INFO:Initializing Light Gradient Boosting Machine
2023-11-02 19:47:38,911:INFO:Total runtime is 0.46562624772389727 minutes
2023-11-02 19:47:38,941:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:38,942:INFO:Initializing create_model()
2023-11-02 19:47:38,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:38,942:INFO:Checking exceptions
2023-11-02 19:47:38,942:INFO:Importing libraries
2023-11-02 19:47:38,942:INFO:Copying training dataset
2023-11-02 19:47:38,958:INFO:Defining folds
2023-11-02 19:47:38,958:INFO:Declaring metric variables
2023-11-02 19:47:38,962:INFO:Importing untrained model
2023-11-02 19:47:38,969:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:47:38,977:INFO:Starting cross validation
2023-11-02 19:47:38,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:39,900:INFO:Calculating mean and std
2023-11-02 19:47:39,902:INFO:Creating metrics dataframe
2023-11-02 19:47:39,905:INFO:Uploading results into container
2023-11-02 19:47:39,906:INFO:Uploading model into container now
2023-11-02 19:47:39,906:INFO:_master_model_container: 18
2023-11-02 19:47:39,906:INFO:_display_container: 2
2023-11-02 19:47:39,907:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:47:39,907:INFO:create_model() successfully completed......................................
2023-11-02 19:47:40,205:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:40,205:INFO:Creating metrics dataframe
2023-11-02 19:47:40,228:INFO:Initializing Dummy Regressor
2023-11-02 19:47:40,228:INFO:Total runtime is 0.4875848650932312 minutes
2023-11-02 19:47:40,231:INFO:SubProcess create_model() called ==================================
2023-11-02 19:47:40,231:INFO:Initializing create_model()
2023-11-02 19:47:40,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B974609A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:40,231:INFO:Checking exceptions
2023-11-02 19:47:40,231:INFO:Importing libraries
2023-11-02 19:47:40,231:INFO:Copying training dataset
2023-11-02 19:47:40,239:INFO:Defining folds
2023-11-02 19:47:40,239:INFO:Declaring metric variables
2023-11-02 19:47:40,244:INFO:Importing untrained model
2023-11-02 19:47:40,246:INFO:Dummy Regressor Imported successfully
2023-11-02 19:47:40,254:INFO:Starting cross validation
2023-11-02 19:47:40,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:47:40,562:INFO:Calculating mean and std
2023-11-02 19:47:40,563:INFO:Creating metrics dataframe
2023-11-02 19:47:40,570:INFO:Uploading results into container
2023-11-02 19:47:40,572:INFO:Uploading model into container now
2023-11-02 19:47:40,573:INFO:_master_model_container: 19
2023-11-02 19:47:40,573:INFO:_display_container: 2
2023-11-02 19:47:40,573:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-11-02 19:47:40,574:INFO:create_model() successfully completed......................................
2023-11-02 19:47:40,829:INFO:SubProcess create_model() end ==================================
2023-11-02 19:47:40,829:INFO:Creating metrics dataframe
2023-11-02 19:47:40,847:INFO:Initializing create_model()
2023-11-02 19:47:40,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:40,848:INFO:Checking exceptions
2023-11-02 19:47:40,852:INFO:Importing libraries
2023-11-02 19:47:40,852:INFO:Copying training dataset
2023-11-02 19:47:40,856:INFO:Defining folds
2023-11-02 19:47:40,856:INFO:Declaring metric variables
2023-11-02 19:47:40,856:INFO:Importing untrained model
2023-11-02 19:47:40,856:INFO:Declaring custom model
2023-11-02 19:47:40,857:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:47:40,859:INFO:Cross validation set to False
2023-11-02 19:47:40,859:INFO:Fitting Model
2023-11-02 19:47:41,015:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:47:41,015:INFO:create_model() successfully completed......................................
2023-11-02 19:47:41,274:INFO:Initializing create_model()
2023-11-02 19:47:41,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:41,275:INFO:Checking exceptions
2023-11-02 19:47:41,276:INFO:Importing libraries
2023-11-02 19:47:41,276:INFO:Copying training dataset
2023-11-02 19:47:41,281:INFO:Defining folds
2023-11-02 19:47:41,281:INFO:Declaring metric variables
2023-11-02 19:47:41,281:INFO:Importing untrained model
2023-11-02 19:47:41,281:INFO:Declaring custom model
2023-11-02 19:47:41,282:INFO:Extra Trees Regressor Imported successfully
2023-11-02 19:47:41,283:INFO:Cross validation set to False
2023-11-02 19:47:41,283:INFO:Fitting Model
2023-11-02 19:47:41,711:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2023-11-02 19:47:41,711:INFO:create_model() successfully completed......................................
2023-11-02 19:47:41,971:INFO:Initializing create_model()
2023-11-02 19:47:41,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:41,971:INFO:Checking exceptions
2023-11-02 19:47:41,973:INFO:Importing libraries
2023-11-02 19:47:41,973:INFO:Copying training dataset
2023-11-02 19:47:41,977:INFO:Defining folds
2023-11-02 19:47:41,978:INFO:Declaring metric variables
2023-11-02 19:47:41,978:INFO:Importing untrained model
2023-11-02 19:47:41,978:INFO:Declaring custom model
2023-11-02 19:47:41,978:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-02 19:47:41,979:INFO:Cross validation set to False
2023-11-02 19:47:41,979:INFO:Fitting Model
2023-11-02 19:47:42,048:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-02 19:47:42,049:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000124 seconds.
2023-11-02 19:47:42,049:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-02 19:47:42,049:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-02 19:47:42,050:INFO:[LightGBM] [Info] Total Bins 796
2023-11-02 19:47:42,050:INFO:[LightGBM] [Info] Number of data points in the train set: 8668, number of used features: 16
2023-11-02 19:47:42,050:INFO:[LightGBM] [Info] Start training from score 1.053332
2023-11-02 19:47:42,108:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-11-02 19:47:42,108:INFO:create_model() successfully completed......................................
2023-11-02 19:47:42,377:INFO:Initializing create_model()
2023-11-02 19:47:42,377:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:42,377:INFO:Checking exceptions
2023-11-02 19:47:42,379:INFO:Importing libraries
2023-11-02 19:47:42,379:INFO:Copying training dataset
2023-11-02 19:47:42,384:INFO:Defining folds
2023-11-02 19:47:42,384:INFO:Declaring metric variables
2023-11-02 19:47:42,384:INFO:Importing untrained model
2023-11-02 19:47:42,384:INFO:Declaring custom model
2023-11-02 19:47:42,384:INFO:Random Forest Regressor Imported successfully
2023-11-02 19:47:42,386:INFO:Cross validation set to False
2023-11-02 19:47:42,386:INFO:Fitting Model
2023-11-02 19:47:43,139:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2023-11-02 19:47:43,139:INFO:create_model() successfully completed......................................
2023-11-02 19:47:43,391:INFO:Initializing create_model()
2023-11-02 19:47:43,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:47:43,392:INFO:Checking exceptions
2023-11-02 19:47:43,398:INFO:Importing libraries
2023-11-02 19:47:43,398:INFO:Copying training dataset
2023-11-02 19:47:43,407:INFO:Defining folds
2023-11-02 19:47:43,407:INFO:Declaring metric variables
2023-11-02 19:47:43,408:INFO:Importing untrained model
2023-11-02 19:47:43,408:INFO:Declaring custom model
2023-11-02 19:47:43,408:INFO:Decision Tree Regressor Imported successfully
2023-11-02 19:47:43,409:INFO:Cross validation set to False
2023-11-02 19:47:43,409:INFO:Fitting Model
2023-11-02 19:47:43,514:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2023-11-02 19:47:43,514:INFO:create_model() successfully completed......................................
2023-11-02 19:47:43,790:INFO:_master_model_container: 19
2023-11-02 19:47:43,790:INFO:_display_container: 2
2023-11-02 19:47:43,791:INFO:[XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False), DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')]
2023-11-02 19:47:43,791:INFO:compare_models() successfully completed......................................
2023-11-02 19:47:43,851:INFO:Initializing evaluate_model()
2023-11-02 19:47:43,852:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-11-02 19:47:43,864:INFO:Initializing plot_model()
2023-11-02 19:47:43,864:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, system=True)
2023-11-02 19:47:43,864:INFO:Checking exceptions
2023-11-02 19:47:43,869:INFO:Preloading libraries
2023-11-02 19:47:43,876:INFO:Copying training dataset
2023-11-02 19:47:43,876:INFO:Plot type: pipeline
2023-11-02 19:47:43,997:INFO:Visual Rendered Successfully
2023-11-02 19:47:44,241:INFO:plot_model() successfully completed......................................
2023-11-02 19:47:44,290:INFO:Initializing tune_model()
2023-11-02 19:47:44,290:INFO:tune_model(estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>)
2023-11-02 19:47:44,291:INFO:Checking exceptions
2023-11-02 19:47:44,307:INFO:Copying training dataset
2023-11-02 19:47:44,313:INFO:Checking base model
2023-11-02 19:47:44,313:INFO:Base model : Extreme Gradient Boosting
2023-11-02 19:47:44,317:INFO:Declaring metric variables
2023-11-02 19:47:44,322:INFO:Defining Hyperparameters
2023-11-02 19:47:44,582:INFO:Tuning with n_jobs=-1
2023-11-02 19:47:44,582:INFO:Initializing RandomizedSearchCV
2023-11-02 19:48:09,499:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__scale_pos_weight': 37.7, 'actual_estimator__reg_lambda': 0.2, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__n_estimators': 220, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 10, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2023-11-02 19:48:09,501:INFO:Hyperparameter search completed
2023-11-02 19:48:09,501:INFO:SubProcess create_model() called ==================================
2023-11-02 19:48:09,503:INFO:Initializing create_model()
2023-11-02 19:48:09,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022B9A573640>, model_only=True, return_train_score=False, kwargs={'subsample': 0.2, 'scale_pos_weight': 37.7, 'reg_lambda': 0.2, 'reg_alpha': 0.0001, 'n_estimators': 220, 'min_child_weight': 4, 'max_depth': 10, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2023-11-02 19:48:09,503:INFO:Checking exceptions
2023-11-02 19:48:09,503:INFO:Importing libraries
2023-11-02 19:48:09,503:INFO:Copying training dataset
2023-11-02 19:48:09,514:INFO:Defining folds
2023-11-02 19:48:09,514:INFO:Declaring metric variables
2023-11-02 19:48:09,519:INFO:Importing untrained model
2023-11-02 19:48:09,520:INFO:Declaring custom model
2023-11-02 19:48:09,528:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:48:09,536:INFO:Starting cross validation
2023-11-02 19:48:09,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:48:13,298:INFO:Calculating mean and std
2023-11-02 19:48:13,299:INFO:Creating metrics dataframe
2023-11-02 19:48:13,306:INFO:Finalizing model
2023-11-02 19:48:13,998:INFO:Uploading results into container
2023-11-02 19:48:13,999:INFO:Uploading model into container now
2023-11-02 19:48:14,000:INFO:_master_model_container: 20
2023-11-02 19:48:14,000:INFO:_display_container: 3
2023-11-02 19:48:14,001:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:48:14,001:INFO:create_model() successfully completed......................................
2023-11-02 19:48:14,270:INFO:SubProcess create_model() end ==================================
2023-11-02 19:48:14,271:INFO:choose_better activated
2023-11-02 19:48:14,275:INFO:SubProcess create_model() called ==================================
2023-11-02 19:48:14,276:INFO:Initializing create_model()
2023-11-02 19:48:14,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-02 19:48:14,276:INFO:Checking exceptions
2023-11-02 19:48:14,278:INFO:Importing libraries
2023-11-02 19:48:14,279:INFO:Copying training dataset
2023-11-02 19:48:14,285:INFO:Defining folds
2023-11-02 19:48:14,285:INFO:Declaring metric variables
2023-11-02 19:48:14,286:INFO:Importing untrained model
2023-11-02 19:48:14,286:INFO:Declaring custom model
2023-11-02 19:48:14,287:INFO:Extreme Gradient Boosting Imported successfully
2023-11-02 19:48:14,288:INFO:Starting cross validation
2023-11-02 19:48:14,289:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-02 19:48:15,387:INFO:Calculating mean and std
2023-11-02 19:48:15,388:INFO:Creating metrics dataframe
2023-11-02 19:48:15,391:INFO:Finalizing model
2023-11-02 19:48:15,634:INFO:Uploading results into container
2023-11-02 19:48:15,635:INFO:Uploading model into container now
2023-11-02 19:48:15,636:INFO:_master_model_container: 21
2023-11-02 19:48:15,636:INFO:_display_container: 4
2023-11-02 19:48:15,636:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:48:15,637:INFO:create_model() successfully completed......................................
2023-11-02 19:48:15,913:INFO:SubProcess create_model() end ==================================
2023-11-02 19:48:15,915:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9861
2023-11-02 19:48:15,918:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) result for R2 is 0.9871
2023-11-02 19:48:15,919:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...) is best model
2023-11-02 19:48:15,920:INFO:choose_better completed
2023-11-02 19:48:15,936:INFO:_master_model_container: 21
2023-11-02 19:48:15,936:INFO:_display_container: 3
2023-11-02 19:48:15,937:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...)
2023-11-02 19:48:15,937:INFO:tune_model() successfully completed......................................
2023-11-02 19:48:16,291:INFO:Initializing predict_model()
2023-11-02 19:48:16,291:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022B9B579C60>)
2023-11-02 19:48:16,292:INFO:Checking exceptions
2023-11-02 19:48:16,292:INFO:Preloading libraries
2023-11-02 19:48:16,293:INFO:Set up data.
2023-11-02 19:48:16,300:INFO:Set up index.
2023-11-02 19:48:16,711:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\1085908258.py:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=df_analysis, x='Actual Values', y='Predicted Values', palette='colorblind').set(title='Predicted vs Actual Values')

2023-11-02 19:49:38,918:WARNING:C:\Users\Emalisa\AppData\Local\Temp\ipykernel_1140\1206011389.py:4: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.
  sns.scatterplot(data=predictions, x='prediction_label', y=residuals, palette='colorblind')

2023-11-02 19:51:29,718:INFO:Initializing save_model()
2023-11-02 19:51:29,719:INFO:save_model(model=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=10, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=220, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), model_name=crops_emalisa.pkl, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Emalisa\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('ca...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['subnational'],
                                    transformer=TargetEncoder(cols=['subnational'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-02 19:51:29,719:INFO:Adding model into prep_pipe
2023-11-02 19:51:29,737:INFO:crops_emalisa.pkl.pkl saved in current working directory
2023-11-02 19:51:29,750:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['year', 'log_hectares',
                                             'log_production'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(excl...
                              importance_type=None,
                              interaction_constraints=None, learning_rate=0.05,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=10, max_leaves=None, min_child_weight=4,
                              missing=nan, monotone_constraints=None,
                              multi_strategy=None, n_estimators=220, n_jobs=-1,
                              num_parallel_tree=None,
                              objective='reg:squarederror', ...))],
         verbose=False)
2023-11-02 19:51:29,750:INFO:save_model() successfully completed......................................
2023-11-02 19:53:35,478:INFO:Initializing plot_model()
2023-11-02 19:53:35,478:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror', ...), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022B99C14D90>, system=True)
2023-11-02 19:53:35,478:INFO:Checking exceptions
2023-11-02 19:53:35,482:INFO:Preloading libraries
2023-11-02 19:53:35,488:INFO:Copying training dataset
2023-11-02 19:53:35,488:INFO:Plot type: feature_all
2023-11-02 19:53:35,565:WARNING:No coef_ found. Trying feature_importances_
2023-11-02 19:53:35,763:INFO:Visual Rendered Successfully
2023-11-02 19:53:36,002:INFO:plot_model() successfully completed......................................
